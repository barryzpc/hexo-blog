<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PHP下使用rabbitMQ报错Call to undefined function PhpAmqpLib\\Wire\\IO\\socket_strerror()的问题查找与解决</title>
    <url>//articles/2020/08/03/1596442518677.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180626.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">3000</span>,</span><br><span class="line">    <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;Call to undefined function PhpAmqpLib\\Wire\\IO\\socket_strerror()&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;file&quot;</span>: <span class="string">&quot;D:\\project\\***\\vendor\\php-amqplib\\php-amqplib\\PhpAmqpLib\\Wire\\IO\\StreamIO.php&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;line&quot;</span>: <span class="number">89</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="查找问题"><a href="#查找问题" class="headerlink" title="查找问题"></a>查找问题</h2><p>根据提示我在对应的文件和行数下找到代码：<br><img src="https://b3logfile.com/file/2020/08/image-9083abe9.png" alt="image.png"></p>
<p>我在本地环境下找到<code>socket_strerror()</code>所在的文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\***\plugins\php\lib\php.jar!\stubs\sockets\sockets.php</span><br></pre></td></tr></table></figure>

<p>这是PHP的一个扩展，既然是<code>Call to undefined function</code>那很可能就是<code>sockets</code>相关的扩展没有安装或者打开。</p>
<p>经过查看<code>php.ini</code>文件，发现果然是扩展没有打开<br><img src="https://b3logfile.com/file/2020/08/image-3f0d6c1f.png" alt="image.png"></p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ol>
<li><p>去掉<code>;extension=php_sockets.dll</code>前面的<code>;</code>，重启服务<code>PHP</code>,<code>apache</code>服务。</p>
</li>
<li><p>查看<code>phpinfo()</code>:<br><img src="https://b3logfile.com/file/2020/08/image-f62cebbb.png" alt="image.png"><br>可以看到<code>sockets</code>扩展已可用。报错消失，项目可正常使用。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>系统更新导致：PHP报错 &#39;libonig.so.2: cannot open shared object file... &#39;问题解决</title>
    <url>//articles/2020/08/27/1598522167215.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20200304.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。</p>
<blockquote>
<p>报错信息：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>

<p>我回想了一下肯定是昨天执行了<code>yum -y update</code> 这个命令更新了系统，导致一些旧的库被删除了。</p>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>错误提示<code>libonig.so.2</code>找不到了。去到<code>/usr/lib64</code>目录下发现确实没有这个库。<br>那么就要想办法把这个库装上去应该就没问题了</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol>
<li>执行命令：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install oniguruma - y</span><br><span class="line">yum install libsodium -y</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后执行 php -v ：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -v</span><br></pre></td></tr></table></figure>

<p>发现还是报原来的错误。再次进入<code>/usr/lib64</code>目录下发现目录下没有<code>libonig.so.2</code>，但是有<code>libonig.so</code>，那么是不是把<code>libonig.so</code>软链到<code>libonig.so.2</code>就可以了。</p>
<ol start="3">
<li>于是执行：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;lib64&#x2F;libonig.so &#x2F;usr&#x2F;lib64&#x2F;libonig.so.2</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>再次运行<code>php -v</code>：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@****~]# php -v </span><br><span class="line">PHP 7.4.4 (cli) (built: Apr 14 2020 10:27:44) ( NTS )</span><br><span class="line">Copyright (c) The PHP Group</span><br><span class="line">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure>

<p>5.发现php正常运行， 问题得到解决，所以千万不要轻易执行<code>yum -y update</code></p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PHP下载网络图片或文件</title>
    <url>//articles/2020/08/12/1597218334271.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20181023.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="变量说明"><a href="#变量说明" class="headerlink" title="变量说明"></a>变量说明</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//图片要保存的绝对路径</span></span><br><span class="line">$path = <span class="string">&#x27;/test/test.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//要下载的网络图片链接</span></span><br><span class="line">$img_url = <span class="string">&#x27;http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg&#x27;</span>； </span><br></pre></td></tr></table></figure>

<h2 id="file-get-contents下载网络图片"><a href="#file-get-contents下载网络图片" class="headerlink" title="file_get_contents下载网络图片"></a>file_get_contents下载网络图片</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">file_put_contents($path, file_get_contents($img_url));</span><br></pre></td></tr></table></figure>

<ul>
<li>ps：当用file_get_contents()函数去下载带有https协议的图片或者内容时，报错：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_get_contents(): SSL operation failed with code 1. OpenSSL Error message</span><br></pre></td></tr></table></figure>

<p>解决方案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$arrContextOptions &#x3D; array(</span><br><span class="line">    &quot;ssl&quot; &#x3D;&gt; array(</span><br><span class="line">        &quot;verify_peer&quot; &#x3D;&gt; false,</span><br><span class="line">        &quot;verify_peer_name&quot; &#x3D;&gt; false,</span><br><span class="line">    ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">file_put_contents($path,file_get_contents($img_url, false, stream_context_create($arrContextOptions)));</span><br></pre></td></tr></table></figure>

<h2 id="curl下载网络图片"><a href="#curl下载网络图片" class="headerlink" title="curl下载网络图片"></a>curl下载网络图片</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#x2F;&#x2F;根据图片URL获取图片内容，适用于https</span><br><span class="line">function getImg($url)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    $ch &#x3D; curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, &#39;GET&#39;);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);&#x2F;&#x2F;跳过ssl验证</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    ob_start();</span><br><span class="line">    curl_exec($ch);</span><br><span class="line">    $return_content &#x3D; ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    return $return_content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file_put_contents($path, getImg($img_url));</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>CURL</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache(wamp)下配置ssl证书</title>
    <url>//articles/2020/08/04/1596512458890.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180603.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>WAMP + SSL</p>
<p><strong>W</strong>indow + <strong>A</strong>pache + <strong>M</strong>ySQL + <strong>P</strong>HP </p>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><ol>
<li>在apache安装目录下打开httpd.conf文件，找到，并打开注释：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadModule socache_shmcb_module modules&#x2F;mod_socache_shmcb.so </span><br><span class="line">LoadModule ssl_module modules&#x2F;mod_ssl.so </span><br><span class="line">Include conf&#x2F;extra&#x2F;httpd-ssl.conf </span><br><span class="line">Include conf&#x2F;extra&#x2F;httpd-mpm.conf     &#x2F;&#x2F;若没有，可忽略该项操作</span><br></pre></td></tr></table></figure></li>
<li>打开 conf/extra/httpd-ssl.conf</li>
</ol>
<p>打开 apache 安装目录下 conf/extra/httpd-ssl.conf 文件 (也可能是conf.d/ssl.conf，与操作系统及安装方式有关)， 在配置文件中查找以下配置语句:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#添加 SSL 协议支持协议，去掉不安全的协议</span><br><span class="line">SSLProtocol all -SSLv2 -SSLv3</span><br><span class="line"></span><br><span class="line"># 修改加密套件如下 不同的证书，参数不同</span><br><span class="line">SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM   </span><br><span class="line">SSLHonorCipherOrder on</span><br><span class="line"></span><br><span class="line"># 证书公钥配置  填写绝对路径</span><br><span class="line">SSLCertificateFile cert&#x2F;public.pem</span><br><span class="line"></span><br><span class="line"># 证书私钥配置 填写绝对路径</span><br><span class="line">SSLCertificateKeyFile cert&#x2F;214873197740010.key</span><br><span class="line"></span><br><span class="line"># 证书链配置，如果该属性开头有 &#39;#&#39;字符，请删除掉</span><br><span class="line">SSLCertificateChainFile cert&#x2F;chain.pem</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>配置完成后重启apache可能会无法重启。进行一下操作可捕捉错误信息<br>退出wamp,打开cmd<br>cd C:\wamp\bin\apache\apache2.4.9\bin     //apache 的安装目录<br>httpd.exe -k install<br>httpd.exe -k start<br>检查是否报错<br>如果有报错，根据错误提示调整<br>如果没有报错 则运行<br>httpd.exe -k stop</p>
</li>
<li><p>启动wamp</p>
</li>
</ol>
<hr>
<h2 id="httpd-ssl-conf-完整配置精简demo"><a href="#httpd-ssl-conf-完整配置精简demo" class="headerlink" title="httpd-ssl.conf 完整配置精简demo"></a>httpd-ssl.conf 完整配置精简demo</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">    DocumentRoot &quot;D:\project\app-test&quot;</span><br><span class="line">    ServerName www.test.com:443</span><br><span class="line">    ServerAlias www.test.com</span><br><span class="line">    ServerAdmin admin@example.com</span><br><span class="line">    &lt;Directory &quot;D:\project\app-test&quot;&gt;</span><br><span class="line">        #DirectoryIndex index-dev.php</span><br><span class="line">        Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class="line">        AllowOverride All</span><br><span class="line">        Require local</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;&#x2F;Directory&gt;</span><br><span class="line">    ErrorLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;errors.log&quot;</span><br><span class="line">    TransferLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;access.log&quot;</span><br><span class="line"></span><br><span class="line">    SSLEngine on</span><br><span class="line">    SSLCertificateFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;public.pem&quot;</span><br><span class="line">    SSLCertificateKeyFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;214873197740010.key&quot;</span><br><span class="line">    SSLCertificateChainFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;chain.pem&quot;</span><br><span class="line">    &lt;FilesMatch &quot;\.(cgi|shtml|phtml|php)$&quot;&gt;</span><br><span class="line">        SSLOptions +StdEnvVars</span><br><span class="line">    &lt;&#x2F;FilesMatch&gt;</span><br><span class="line">    &lt;Directory &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cgi-bin&quot;&gt;</span><br><span class="line">        SSLOptions +StdEnvVars</span><br><span class="line">    &lt;&#x2F;Directory&gt;</span><br><span class="line">    BrowserMatch &quot;MSIE [2-5]&quot; \</span><br><span class="line">             nokeepalive ssl-unclean-shutdown \</span><br><span class="line">             downgrade-1.0 force-response-1.0</span><br><span class="line">    CustomLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;ssl_request.log&quot; \</span><br><span class="line">              &quot;%t %h %&#123;SSL_PROTOCOL&#125;x %&#123;SSL_CIPHER&#125;x \&quot;%r\&quot; %b&quot;</span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>wamp</tag>
        <tag>ssl</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache报错 Parent: child process 2744 exited with status 3221226356 -- Restarting</title>
    <url>//articles/2020/08/04/1596509366225.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Windows系统+apache+mysql+php环境下，访问量大的时候在<code>apache_error.log</code> 中出现报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parent: child process 2744 exited with status 3221226356 -- Restarting.</span><br></pre></td></tr></table></figure>

<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。</p>
<p>所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><code>ThreadStackSize</code>的设置是在httpd-mpm.conf文件中。但是默认情况下<code>apache</code>是没有使用<code>mpm</code>模块的。所以要现修改<code>httpd.conf</code>文件中的配置。</p>
<ol>
<li>打开<code>httpd.conf</code>中的注释：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Include conf&#x2F;extra&#x2F;httpd-mpm.conf</span><br></pre></td></tr></table></figure></li>
<li>找到<code>ThreadStackSize</code>修改其大小：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mpm_netware_module&gt;</span><br><span class="line">    ThreadStackSize      16777216</span><br><span class="line">    StartThreads           250</span><br><span class="line">    MinSpareThreads         25</span><br><span class="line">    MaxSpareThreads        250</span><br><span class="line">    MaxThreads            1000</span><br><span class="line">    MaxConnectionsPerChild   0</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure></li>
<li>重启wamp服务。</li>
</ol>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>wamp</tag>
      </tags>
  </entry>
  <entry>
    <title>python项目依赖库的批量导出和导入</title>
    <url>//articles/2020/07/24/1595584844339.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20191030.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>python项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h4 id="批量导出"><a href="#批量导出" class="headerlink" title="批量导出"></a>批量导出</h4><p>执行下面命令将依赖库到<code>python_lib.txt</code>文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip freeze &gt; python_lib.txt</span><br></pre></td></tr></table></figure>
<p>python_lib.txt 中内容大致是这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mock&#x3D;&#x3D;4.0.2</span><br><span class="line">numpy&#x3D;&#x3D;1.16.2</span><br><span class="line">opencv-python&#x3D;&#x3D;4.1.1.26</span><br><span class="line">Pillow&#x3D;&#x3D;7.1.2</span><br><span class="line">protobuf&#x3D;&#x3D;3.11.3</span><br><span class="line">requests&#x3D;&#x3D;2.23.0</span><br><span class="line">scikit-learn&#x3D;&#x3D;0.22.2.post1</span><br><span class="line">scipy&#x3D;&#x3D;1.2.1</span><br><span class="line">Shapely&#x3D;&#x3D;1.7.0</span><br><span class="line">six&#x3D;&#x3D;1.14.0</span><br><span class="line">sklearn&#x3D;&#x3D;0.0</span><br><span class="line">tensorboard&#x3D;&#x3D;1.13.1</span><br><span class="line">tensorflow&#x3D;&#x3D;1.13.1</span><br><span class="line">tensorflow-estimator&#x3D;&#x3D;1.13.0</span><br><span class="line">termcolor&#x3D;&#x3D;1.1.0</span><br><span class="line">tornado&#x3D;&#x3D;6.0.4</span><br><span class="line">.......</span><br></pre></td></tr></table></figure>
<h4 id="批量导入"><a href="#批量导入" class="headerlink" title="批量导入"></a>批量导入</h4><p>将<code>python_lib.txt</code>文件拷贝到新的服务器上，执行下面命令，依赖库就一次安装上了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -r python_lib.txt</span><br></pre></td></tr></table></figure>


<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>如果你有更多或者更好的解决方案，欢迎留言</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>windows生产服务器下部署Flask</title>
    <url>//articles/2020/07/24/1595577454676.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20200530.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>很多python工程师，都会用<strong>flask</strong> 来开发、部署Web 应用。但也有很多工程师就直接使用 <code>app.run()</code>在生产环境上启动服务。</p>
<p>那可能会发现 Flask 用 <code>app.run()</code>这种方式启动，有异常特别容易退出，而且性能很弱。</p>
<p>生产环境下，python常见的web部署搭配是 <code>nginx</code>+<code>gunicorn</code>。</p>
<p>但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：<code>Flask</code> + <code>Tornado</code>+<code>nginx</code>。</p>
<h2 id="解决方案示例"><a href="#解决方案示例" class="headerlink" title="解决方案示例"></a>解决方案示例</h2><h4 id="flask服务文件-flask-app-py"><a href="#flask服务文件-flask-app-py" class="headerlink" title="flask服务文件 flask_app.py"></a>flask服务文件 flask_app.py</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&quot;/&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="安装Tornado"><a href="#安装Tornado" class="headerlink" title="安装Tornado"></a>安装Tornado</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install tornado</span><br></pre></td></tr></table></figure>

<h4 id="flask-app-py目录下编写Tornado的-server-py文件"><a href="#flask-app-py目录下编写Tornado的-server-py文件" class="headerlink" title="flask_app.py目录下编写Tornado的 server.py文件"></a>flask_app.py目录下编写Tornado的 server.py文件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tornado.httpserver <span class="keyword">import</span> HTTPServer</span><br><span class="line"><span class="keyword">from</span> tornado.wsgi <span class="keyword">import</span> WSGIContainer</span><br><span class="line"><span class="keyword">from</span> flask_app <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> tornado.ioloop <span class="keyword">import</span> IOLoop</span><br><span class="line"></span><br><span class="line">s = HTTPServer(WSGIContainer(app))</span><br><span class="line">s.listen(<span class="number">8080</span>) <span class="comment"># 监听 8080 端口</span></span><br><span class="line">IOLoop.current().start()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p>当前目录下执行 <code>python server.py</code> 浏览器中访问 <a href="http://ip:8080/">http://ip:8080</a> 即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python server.py</span><br></pre></td></tr></table></figure>

<h4 id="配置nginx反向代理"><a href="#配置nginx反向代理" class="headerlink" title="配置nginx反向代理"></a>配置nginx反向代理</h4><p>配置nignx反向代理，这样在浏览器中直接访问<a href="http://www.test.com/">www.test.com</a> 即可</p>
<p>windows下nginx的安装和使用还是很简单的，网上教程很多，这里就不多说了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http &#123;   </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.test.com;</span><br><span class="line">        charset     utf-8;         </span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            proxy_pass  http:&#x2F;&#x2F;ip:8080;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP使用curl实现毫秒级等待的伪异步请求</title>
    <url>//articles/2020/07/16/1594914341041.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20181116.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。</p>
<h2 id="场景升级"><a href="#场景升级" class="headerlink" title="场景升级"></a>场景升级</h2><p>这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 <code>CUROPT_TIMEOUT</code>最小设置为1。也就是说，客户端至少必须等待1秒钟。这时候我们迫切需要使用毫秒级的等待，然后断开。为整个流程节省更多的时间！</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PHP发送异步请求 毫秒级</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Barry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017-10-24</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $param 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $header</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">makeAsyncRequest</span>(<span class="params">$url, $param, $httpMethod = <span class="string">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class="line">        $oCurl = curl_init();</span><br><span class="line">        <span class="keyword">if</span> (stripos($url, <span class="string">&quot;https://&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($httpMethod == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class="string">&quot;?&quot;</span> . http_build_query($param));</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($header)) &#123;</span><br><span class="line">            $headers = [];</span><br><span class="line">            <span class="keyword">foreach</span> ($header <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">                $headers[] = $k.<span class="string">&quot;:&quot;</span>.$v;</span><br><span class="line">            &#125;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class="number">1</span>);<span class="comment">//必须加，否则在CentOS环境下面设置毫秒级会报错</span></span><br><span class="line">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class="number">30</span>);<span class="comment">//设置cURL允许执行的最长毫秒数</span></span><br><span class="line"></span><br><span class="line">        $sContent = curl_exec($oCurl);</span><br><span class="line"><span class="comment">//        print_r($sContent);exit;</span></span><br><span class="line"><span class="comment">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class="line">        curl_close($oCurl);</span><br><span class="line">        <span class="keyword">return</span> json_decode($sContent, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="CentOS下设置毫秒级会报错Bug"><a href="#CentOS下设置毫秒级会报错Bug" class="headerlink" title="CentOS下设置毫秒级会报错Bug"></a>CentOS下设置毫秒级会报错Bug</h2><p>为什么在CentOS服务器下要增加这一行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);&#x2F;&#x2F;必须加，否则在CentOS环境下面设置毫秒级会报错</span><br></pre></td></tr></table></figure>


<p>主要原因：</p>
<blockquote>
<p>在Linux系统上, 如果使用了系统标准的DNS解析, 则会使用SIGALARM来提供控制域名解析超时的功能，但是SIGALARM不支持小于1s的超时。</p>
</blockquote>
<p>分析与解决：可以阅读大神<a href="https://www.laruence.com/">风雪之隅</a>专门这对该bug分析以及解决写的一篇文章：<a href="https://www.laruence.com/2014/01/21/2939.html">Curl的毫秒超时的一个”Bug”</a></p>
<h2 id="PHP更多异步实现方法"><a href="#PHP更多异步实现方法" class="headerlink" title="PHP更多异步实现方法"></a>PHP更多异步实现方法</h2><p>如果想了解更多的PHP实现异步调用方法可以去阅读<a href="https://www.laruence.com/">风雪之隅</a>也就是大名鼎鼎的<strong>鸟哥</strong>写的一篇博客：<a href="https://www.laruence.com/2008/04/14/318.html">PHP实现异步调用方法研究</a></p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>CURL</tag>
        <tag>毫秒级伪异步</tag>
      </tags>
  </entry>
  <entry>
    <title>我在 GitHub 上的开源项目</title>
    <url>//my-github-repos</url>
    <content><![CDATA[<!-- 该页面会被定时任务自动覆盖，所以请勿手工更新 -->
<!-- 如果你有更漂亮的排版方式，请发 issue 告诉我们 -->

<h3 id="1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html"><a href="#1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html" class="headerlink" title="1. pic-repo  🤩1&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html"></a>1. <a href="https://github.com/barryzpc/pic-repo">pic-repo</a> <kbd title="主要编程语言"></kbd> <span style="font-size: 12px;"><a href="https://github.com/barryzpc/pic-repo/watchers" title="关注数">🤩<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/pic-repo/stargazers" title="收藏数">⭐️<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/pic-repo/network/members" title="分叉数">🖖<code>0</code></a>&nbsp;&nbsp;<a href="http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html" title="项目主页">🏠<code>http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</code></a></span></h3><p>个人图床，用来存放个人项目的静态文件库，便于直链访问</p>
<hr>
<h3 id="2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com"><a href="#2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com" class="headerlink" title="2. nav.github.io HTML 🤩2&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖1&nbsp;&nbsp;🏠https://nav.zhengpc.com/"></a>2. <a href="https://github.com/barryzpc/nav.github.io">nav.github.io</a> <kbd title="主要编程语言">HTML</kbd> <span style="font-size: 12px;"><a href="https://github.com/barryzpc/nav.github.io/watchers" title="关注数">🤩<code>2</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/nav.github.io/stargazers" title="收藏数">⭐️<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/nav.github.io/network/members" title="分叉数">🖖<code>1</code></a>&nbsp;&nbsp;<a href="https://nav.zhengpc.com/" title="项目主页">🏠<code>https://nav.zhengpc.com/</code></a></span></h3><p>常用网站地址导航page</p>
<hr>
<h3 id="3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com"><a href="#3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com" class="headerlink" title="3. solo-blog  🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com"></a>3. <a href="https://github.com/barryzpc/solo-blog">solo-blog</a> <kbd title="主要编程语言"></kbd> <span style="font-size: 12px;"><a href="https://github.com/barryzpc/solo-blog/watchers" title="关注数">🤩<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/solo-blog/stargazers" title="收藏数">⭐️<code>0</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/solo-blog/network/members" title="分叉数">🖖<code>0</code></a>&nbsp;&nbsp;<a href="https://myblog.zhengpc.com/" title="项目主页">🏠<code>https://myblog.zhengpc.com</code></a></span></h3><p>✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索</p>
<hr>
<h3 id="4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com"><a href="#4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com" class="headerlink" title="4. my-solo4.3.1 FreeMarker 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com/"></a>4. <a href="https://github.com/barryzpc/my-solo4.3.1">my-solo4.3.1</a> <kbd title="主要编程语言">FreeMarker</kbd> <span style="font-size: 12px;"><a href="https://github.com/barryzpc/my-solo4.3.1/watchers" title="关注数">🤩<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/my-solo4.3.1/stargazers" title="收藏数">⭐️<code>0</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/my-solo4.3.1/network/members" title="分叉数">🖖<code>0</code></a>&nbsp;&nbsp;<a href="https://myblog.zhengpc.com/" title="项目主页">🏠<code>https://myblog.zhengpc.com/</code></a></span></h3><p>我的博客4.3.1版</p>
<hr>
<h3 id="5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0"><a href="#5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0" class="headerlink" title="5. hyperf-learn PHP 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0"></a>5. <a href="https://github.com/barryzpc/hyperf-learn">hyperf-learn</a> <kbd title="主要编程语言">PHP</kbd> <span style="font-size: 12px;"><a href="https://github.com/barryzpc/hyperf-learn/watchers" title="关注数">🤩<code>1</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/hyperf-learn/stargazers" title="收藏数">⭐️<code>0</code></a>&nbsp;&nbsp;<a href="https://github.com/barryzpc/hyperf-learn/network/members" title="分叉数">🖖<code>0</code></a></span></h3><p>hyperf框架的学习</p>
]]></content>
      <tags>
        <tag>开源</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>网上收集的PHP知识点和面试汇总</title>
    <url>//articles/2020/04/22/1587541701093.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180919.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="简书"><a href="#简书" class="headerlink" title="简书"></a>简书</h2><ol>
<li><a href="https://www.jianshu.com/p/8ace7a078923">PHP面试题总结</a></li>
<li><a href="https://www.jianshu.com/p/499317bd2ee7">PHP面试题汇总</a></li>
<li><a href="https://www.jianshu.com/p/a957b18ba40d">MySQL存储引擎－－MyISAM与InnoDB区别</a></li>
<li><a href="https://www.jianshu.com/p/80e25cb1d81a">关于HTTP协议，一篇就够了</a></li>
</ol>
<h2 id="掘金"><a href="#掘金" class="headerlink" title="掘金"></a>掘金</h2><ol>
<li><a href="https://juejin.im/post/5b97618bf265da0aff17204f#heading-14">PHP面试总结</a></li>
</ol>
<h2 id="博客园"><a href="#博客园" class="headerlink" title="博客园"></a>博客园</h2><ol>
<li><a href="https://www.cnblogs.com/jing1208/p/6289840.html">PHP的几种排序算法的比较</a></li>
<li><a href="https://www.cnblogs.com/pangzizhe/tag/Redis/">Redis实战</a></li>
<li><a href="https://www.cnblogs.com/wintersoft/p/10787474.html">Mysql的select加锁分析</a></li>
</ol>
<h2 id="酷-壳"><a href="#酷-壳" class="headerlink" title="酷 壳"></a>酷 壳</h2><ol>
<li><a href="https://coolshell.cn/articles/1846.html">MYSQL性能优化的最佳20+条经验</a></li>
</ol>
<h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ol>
<li><a href="https://github.com/colinlet/PHP-Interview-QA/">PHP面试问答</a></li>
</ol>
<h2 id="LearnKu"><a href="#LearnKu" class="headerlink" title="LearnKu"></a>LearnKu</h2><ol>
<li><a href="https://learnku.com/docs/php-internals/php7">PHP 内核与原生扩展开发(译)</a></li>
<li><a href="https://learnku.com/docs/php-design-patterns/2018"> PHP 设计模式全集(译)</a></li>
<li><a href="https://learnku.com/docs/psr">PHP PSR 标准规范(译)</a></li>
</ol>
<h2 id="知乎"><a href="#知乎" class="headerlink" title="知乎"></a>知乎</h2><ol>
<li><a href="https://zhuanlan.zhihu.com/p/202873171">PHP面试题汇总</a></li>
</ol>
]]></content>
      <tags>
        <tag>mysql</tag>
        <tag>PHP</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP实现输入一个整数n，输出一个n×n蛇形矩阵</title>
    <url>//articles/2020/04/20/1587390691737.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180309.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h6 id="前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。"><a href="#前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。" class="headerlink" title="前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。"></a>前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。</h6><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><h4 id="实现输入一个整数n，输出一个n×n蛇形阵。例如："><a href="#实现输入一个整数n，输出一个n×n蛇形阵。例如：" class="headerlink" title="实现输入一个整数n，输出一个n×n蛇形阵。例如："></a>实现输入一个整数n，输出一个n×n蛇形阵。例如：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;输入 3,输出：</span><br><span class="line"> 1   2   3</span><br><span class="line"> 8   9   4</span><br><span class="line"> 7   6   5</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;输入 4，输出：</span><br><span class="line"> 1    2   3   4</span><br><span class="line"> 12   13  14  5</span><br><span class="line"> 11   16  15  6</span><br><span class="line"> 10   9   8   7</span><br></pre></td></tr></table></figure>

<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><h4 id="1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值"><a href="#1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值" class="headerlink" title="1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值"></a>1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值</h4><h4 id="2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1"><a href="#2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1" class="headerlink" title="2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1"></a>2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</h4><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><h4 id="创建php脚本文件snake-matrix-php"><a href="#创建php脚本文件snake-matrix-php" class="headerlink" title="创建php脚本文件snake_matrix.php"></a>创建php脚本文件snake_matrix.php</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输入一个整数n，要求输出一个n×n蛇形阵（n&lt;10），比如输入整数4，则输出如下蛇形阵：</span></span><br><span class="line"><span class="comment"> * 1    2   3   4</span></span><br><span class="line"><span class="comment"> * 12   13  14  5</span></span><br><span class="line"><span class="comment"> * 11   16  15  6</span></span><br><span class="line"><span class="comment"> * 10   9   8   7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//收到的参数</span></span><br><span class="line">$param = getopt(<span class="string">&quot;n:&quot;</span>);</span><br><span class="line">$input_num = $param[<span class="string">&#x27;n&#x27;</span>];</span><br><span class="line">$value = <span class="number">1</span>; <span class="comment">//矩阵的第一个值</span></span><br><span class="line">$matrix_arr = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 察可以发现，矩阵的值的规律是依次递增的；这也是这个算法的突破口。</span></span><br><span class="line"><span class="comment"> * 而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//圈数</span></span><br><span class="line">$circle_num = ceil($input_num / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $circle_num; $i++) &#123;<span class="comment">//一圈一圈的来</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于每一圈的第一行赋值</span></span><br><span class="line">    <span class="keyword">for</span> ($j = $i; $j &lt; $input_num - $i; $j++) &#123;</span><br><span class="line">        $matrix_arr[$i][$j] = $value++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于每圈的最后一列赋值</span></span><br><span class="line">    <span class="keyword">for</span> ($j = $i + <span class="number">1</span>; $j &lt; $input_num - $i - <span class="number">1</span>; $j++) &#123;</span><br><span class="line">        $matrix_arr[$j][$input_num - $i - <span class="number">1</span>] = $value++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于每圈的最后一行赋值</span></span><br><span class="line">    <span class="keyword">for</span> ($j = $input_num - $i - <span class="number">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class="line">        $matrix_arr[$input_num - $i - <span class="number">1</span>][$j] = $value++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于每圈的第一列赋值</span></span><br><span class="line">    <span class="keyword">for</span> ($j = $input_num - $i - <span class="number">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class="line">        $matrix_arr[$j][$i] = $value++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照索引依次打印出来</span></span><br><span class="line"><span class="keyword">foreach</span> ($matrix_arr <span class="keyword">as</span> $key =&gt; $row_val) &#123;</span><br><span class="line">    ksort($row_val);</span><br><span class="line">    $str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($row_val <span class="keyword">as</span> $value) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $value;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="运行php脚本"><a href="#运行php脚本" class="headerlink" title="运行php脚本"></a>运行php脚本</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php snake_matrix.php -n 4</span><br></pre></td></tr></table></figure>

<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1    2   3   4</span><br><span class="line">12   13  14  5</span><br><span class="line">11   16  15  6</span><br><span class="line">10   9   8   7</span><br></pre></td></tr></table></figure>

<p>ps: 如果大家还有别的实现方式，可以在评论区贴出来，大家一起学习。语言不限</p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>转载： 你知道缓存的正确打开方式么？</title>
    <url>//articles/2020/04/16/1587017727206.html</url>
    <content><![CDATA[<p>说明：本文为转载内容</p>
<h1 id="你知道缓存的正确打开方式么？"><a href="#你知道缓存的正确打开方式么？" class="headerlink" title="你知道缓存的正确打开方式么？"></a>你知道缓存的正确打开方式么？</h1><h2 id="第一篇"><a href="#第一篇" class="headerlink" title="第一篇"></a>第一篇</h2><p><a href="https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg">原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg</a></p>
<h2 id="第二篇"><a href="#第二篇" class="headerlink" title="第二篇"></a>第二篇</h2><p><a href="https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA">原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA</a></p>
<p>本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息</p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>转载</tag>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>转载：centos7 编译安装 php7.4</title>
    <url>//articles/2020/04/14/1586834851714.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<p>原文地址：<a href="https://www.cnblogs.com/liubaoqing/p/12176017.html">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>
<h4 id="1-下载安装编译工具"><a href="#1-下载安装编译工具" class="headerlink" title="1. 下载安装编译工具"></a>1. 下载安装编译工具</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum groupinstall &#39;Development Tools&#39;</span><br></pre></td></tr></table></figure>
<h4 id="2-安装依赖包"><a href="#2-安装依赖包" class="headerlink" title="2.安装依赖包"></a>2.安装依赖包</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel</span><br></pre></td></tr></table></figure>

<h4 id="3-下载并解压php7-4"><a href="#3-下载并解压php7-4" class="headerlink" title="3.下载并解压php7.4"></a>3.下载并解压php7.4</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget  https:&#x2F;&#x2F;www.php.net&#x2F;distributions&#x2F;php-7.4.4.tar.bz2</span><br><span class="line">tar jxvf php-7.4.4.tar.bz2</span><br><span class="line">cd php-7.4.4</span><br></pre></td></tr></table></figure>

<h4 id="4-编译安装（-configure-–help-查看编译参数）"><a href="#4-编译安装（-configure-–help-查看编译参数）" class="headerlink" title="4.编译安装（./configure –help 查看编译参数）"></a>4.编译安装（./configure –help 查看编译参数）</h4><h5 id="编译前，新增用户组，用户，用于编译使用"><a href="#编译前，新增用户组，用户，用于编译使用" class="headerlink" title="编译前，新增用户组，用户，用于编译使用"></a>编译前，新增用户组，用户，用于编译使用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">groupadd www</span><br><span class="line">useradd -g www www</span><br></pre></td></tr></table></figure>

<h5 id="开始编译（根据自己需要增减）"><a href="#开始编译（根据自己需要增减）" class="headerlink" title="开始编译（根据自己需要增减）"></a>开始编译（根据自己需要增减）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;configure   --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php   --with-config-file-path&#x3D;&#x2F;etc   --with-fpm-user&#x3D;www   --with-fpm-group&#x3D;www    --with-curl   --with-freetype-dir   --enable-gd   --with-gettext    --with-iconv-dir   --with-kerberos   --with-libdir&#x3D;lib64   --with-libxml-dir   --with-mysqli   --with-openssl   --with-pcre-regex   --with-pdo-mysql   --with-pdo-sqlite   --with-pear   --with-png-dir   --with-jpeg-dir   --with-xmlrpc   --with-xsl   --with-zlib   --with-bz2   --with-mhash   --enable-fpm   --enable-bcmath   --enable-libxml   --enable-inline-optimization   --enable-mbregex   --enable-mbstring   --enable-opcache   --enable-pcntl   --enable-shmop   --enable-soap   --enable-sockets   --enable-sysvsem   --enable-sysvshm   --enable-xml    --enable-zip   --enable-fpm</span><br></pre></td></tr></table></figure>

<ul>
<li>这里需要注意的是在php7.4 编译参数 –with-gd  要改成了 –enable-gd</li>
</ul>
<hr>
<h5 id="当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11"><a href="#当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11" class="headerlink" title="当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11"></a>当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11</h5><p>先删除旧版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum remove -y libzip</span><br></pre></td></tr></table></figure>

<p>下载编译安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;nih.at&#x2F;libzip&#x2F;libzip-1.2.0.tar.gz</span><br><span class="line">tar -zxvf libzip-1.2.0.tar.gz</span><br><span class="line">cd libzip-1.2.0 .&#x2F;configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met"><a href="#error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met" class="headerlink" title="error： Package requirements (sqlite3 &gt; 3.7.4) were not met"></a>error： Package requirements (sqlite3 &gt; 3.7.4) were not met</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install libsqlite3x-devel -y</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="error-Package-requirements-oniguruma-were-not-met"><a href="#error-Package-requirements-oniguruma-were-not-met" class="headerlink" title="error: Package requirements (oniguruma) were not met"></a>error: Package requirements (oniguruma) were not met</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install oniguruma-devel -y</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="当yum-install-提示-“没可用软件包”"><a href="#当yum-install-提示-“没可用软件包”" class="headerlink" title="当yum install 提示 “没可用软件包”"></a>当yum install 提示 “没可用软件包”</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="off-t-undefined-报错"><a href="#off-t-undefined-报错" class="headerlink" title="off_t undefined 报错"></a>off_t undefined 报错</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">configure: error: off_t undefined; check your library configuration</span><br></pre></td></tr></table></figure>

<p>off_t 类型是在 头文件 unistd.h中定义的，<br>在32位系统 编程成 long int ，64位系统则编译成 long long int ，<br>在进行编译的时候 是默认查找64位的动态链接库，<br>但是默认情况下 centos 的动态链接库配置文件/etc/ld.so.conf里并没有加入搜索路径，<br>这个时候需要将 /usr/local/lib64 /usr/lib64 这些针对64位的库文件路径加进去。</p>
<h6 id="添加搜索路径到配置文件"><a href="#添加搜索路径到配置文件" class="headerlink" title="添加搜索路径到配置文件"></a>添加搜索路径到配置文件</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;&#x2F;usr&#x2F;local&#x2F;lib64</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib &#x2F;usr&#x2F;lib &#x2F;usr&#x2F;lib64&#39;&gt;&gt;&#x2F;etc&#x2F;ld.so.conf</span><br></pre></td></tr></table></figure>
<h6 id="然后-更新配置"><a href="#然后-更新配置" class="headerlink" title="然后 更新配置"></a>然后 更新配置</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory"><a href="#usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory" class="headerlink" title="/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory"></a>/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libzip&#x2F;include&#x2F;zipconf.h &#x2F;usr&#x2F;local&#x2F;include&#x2F;zipconf.h</span><br></pre></td></tr></table></figure>

<h5 id="编译没问题了，执行make-amp-amp-make-install-安装完毕"><a href="#编译没问题了，执行make-amp-amp-make-install-安装完毕" class="headerlink" title="编译没问题了，执行make &amp;&amp; make install  安装完毕"></a>编译没问题了，执行make &amp;&amp; make install  安装完毕</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h4 id="5-配置环境"><a href="#5-配置环境" class="headerlink" title="5.配置环境"></a>5.配置环境</h4><p>执行完安装命令后php7.4就已经安装在到了/usr/local/php目录下了</p>
<p>查看版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php -v</span><br></pre></td></tr></table></figure>

<p>添加环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>

<p>添加到最后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>

<p>更新环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>

<p>查看版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -v</span><br></pre></td></tr></table></figure>

<h4 id="6-配置php-fpm"><a href="#6-配置php-fpm" class="headerlink" title="6.配置php-fpm"></a>6.配置php-fpm</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;php.ini-production &#x2F;etc&#x2F;php.ini</span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf</span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;sapi&#x2F;fpm&#x2F;init.d.php-fpm &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br><span class="line">chmod +x &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br></pre></td></tr></table></figure>

<p>启动php-fpm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;php-fpm start</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service php-fpm start</span><br></pre></td></tr></table></figure>

<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>本文为转载文章，对我帮助很大，所以转载记录一下。如需删除请及时联系</p>
<p>原文地址：<a href="https://www.cnblogs.com/liubaoqing/p/12176017.html">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>转载</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP的常用工具函数</title>
    <url>//articles/2020/03/17/1584424890414.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="记录平时开发中经常使用的小工具"><a href="#记录平时开发中经常使用的小工具" class="headerlink" title="记录平时开发中经常使用的小工具"></a>记录平时开发中经常使用的小工具</h2><h4 id="跳转链接"><a href="#跳转链接" class="headerlink" title="跳转链接"></a>跳转链接</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $url 请求地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">location</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;&lt;script language=&#x27;javascript&#x27;&gt;window.location.href=&#x27;<span class="subst">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="请求链接获取数据"><a href="#请求链接获取数据" class="headerlink" title="请求链接获取数据"></a>请求链接获取数据</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Barry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017-10-24</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $param 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">makeRequest</span>(<span class="params">$url, $param, $httpMethod = <span class="string">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class="line">        $oCurl = curl_init();</span><br><span class="line">        <span class="keyword">if</span> (stripos($url, <span class="string">&quot;https://&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($httpMethod == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class="string">&quot;?&quot;</span> . http_build_query($param));</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($header)) &#123;</span><br><span class="line">            $headers = [];</span><br><span class="line">            <span class="keyword">foreach</span> ($header <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">                $headers[] = $k.<span class="string">&quot;:&quot;</span>.$v;</span><br><span class="line">            &#125;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $sContent = curl_exec($oCurl);</span><br><span class="line"><span class="comment">//        print_r($sContent);exit;</span></span><br><span class="line"><span class="comment">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class="line"><span class="comment">//        print_r($aStatus);die;</span></span><br><span class="line">        curl_close($oCurl);</span><br><span class="line">        <span class="keyword">return</span> json_decode($sContent, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="获取客户端IP地址"><a href="#获取客户端IP地址" class="headerlink" title="获取客户端IP地址"></a>获取客户端IP地址</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取客户端IP地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getClientIP</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">static</span> $ip = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> ( $ip !== <span class="literal">NULL</span> )</span><br><span class="line">        <span class="keyword">return</span> $ip;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">isset</span>( $_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] ) ) &#123;</span><br><span class="line">        $arr = explode( <span class="string">&#x27;,&#x27;</span>, $_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] );</span><br><span class="line">        $pos = array_search( <span class="string">&#x27;unknown&#x27;</span>, $arr );</span><br><span class="line">        <span class="keyword">if</span> ( <span class="literal">false</span> !== $pos )</span><br><span class="line">            <span class="keyword">unset</span>( $arr[$pos] );</span><br><span class="line">        $ip = trim( $arr[<span class="number">0</span>] );</span><br><span class="line">    &#125; <span class="keyword">elseif</span> ( <span class="keyword">isset</span>( $_SERVER[<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>] ) ) &#123;</span><br><span class="line">        $ip = $_SERVER[<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>];</span><br><span class="line">    &#125; <span class="keyword">elseif</span> ( <span class="keyword">isset</span>( $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] ) ) &#123;</span><br><span class="line">        $ip = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// IP地址合法验证</span></span><br><span class="line">    $ip = ( <span class="literal">false</span> !== ip2long( $ip ) ) ? $ip : <span class="string">&#x27;0.0.0.0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="循环创建目录"><a href="#循环创建目录" class="headerlink" title="循环创建目录"></a>循环创建目录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @instruction 循环创建目录</span><br><span class="line"> * @param $dir  目录</span><br><span class="line"> * @param $mode 权限</span><br><span class="line"> * @author Barry</span><br><span class="line"> * @date 2017-10-24</span><br><span class="line"> * @version v1.0</span><br><span class="line"> *&#x2F;</span><br><span class="line">static public function mkdir( $dir, $mode &#x3D; 0777 ) &#123;</span><br><span class="line"></span><br><span class="line">    $aimUrl &#x3D; str_replace(&#39;&#39;, &#39;&#x2F;&#39;, $dir);</span><br><span class="line">    $aimDir &#x3D; &#39;&#39;;</span><br><span class="line">    $arr &#x3D; explode(&#39;&#x2F;&#39;, $aimUrl);</span><br><span class="line">    $result &#x3D; true;</span><br><span class="line">    foreach ($arr as $str) &#123;</span><br><span class="line">        $aimDir .&#x3D; $str . &#39;&#x2F;&#39;;</span><br><span class="line">        if (!file_exists($aimDir)) &#123;</span><br><span class="line">            $result &#x3D; mkdir($aimDir, $mode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="字符截取，多出的字符串显示省略号"><a href="#字符截取，多出的字符串显示省略号" class="headerlink" title="字符截取，多出的字符串显示省略号"></a>字符截取，多出的字符串显示省略号</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符截取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $string</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $length</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $dot</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cutstr</span>(<span class="params"> $string, $length, $dot = <span class="string">&#x27;...&#x27;</span>, $charset = <span class="string">&#x27;utf-8&#x27;</span> </span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( strlen( $string ) &lt;= $length )</span><br><span class="line">            <span class="keyword">return</span> $string;</span><br><span class="line"></span><br><span class="line">        $pre = chr( <span class="number">1</span> );</span><br><span class="line">        $end = chr( <span class="number">1</span> );</span><br><span class="line">        $string = str_replace( <span class="keyword">array</span> ( <span class="string">&#x27;&amp;amp;&#x27;</span> , <span class="string">&#x27;&amp;quot;&#x27;</span> , <span class="string">&#x27;&amp;lt;&#x27;</span> , <span class="string">&#x27;&amp;gt;&#x27;</span> ), <span class="keyword">array</span> ( $pre . <span class="string">&#x27;&amp;&#x27;</span> . $end , $pre . <span class="string">&#x27;&quot;&#x27;</span> . $end , $pre . <span class="string">&#x27;&lt;&#x27;</span> . $end , $pre . <span class="string">&#x27;&gt;&#x27;</span> . $end ), $string );</span><br><span class="line"></span><br><span class="line">        $strcut = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( strtolower( $charset ) == <span class="string">&#x27;utf-8&#x27;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">            $n = $tn = $noc = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ( $n &lt; strlen( $string ) ) &#123;</span><br><span class="line"></span><br><span class="line">                $t = ord( $string[$n] );</span><br><span class="line">                <span class="keyword">if</span> ( $t == <span class="number">9</span> || $t == <span class="number">10</span> || ( <span class="number">32</span> &lt;= $t &amp;&amp; $t &lt;= <span class="number">126</span> ) ) &#123;</span><br><span class="line">                    $tn = <span class="number">1</span>;</span><br><span class="line">                    $n ++;</span><br><span class="line">                    $noc ++;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ( <span class="number">194</span> &lt;= $t &amp;&amp; $t &lt;= <span class="number">223</span> ) &#123;</span><br><span class="line">                    $tn = <span class="number">2</span>;</span><br><span class="line">                    $n += <span class="number">2</span>;</span><br><span class="line">                    $noc += <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ( <span class="number">224</span> &lt;= $t &amp;&amp; $t &lt;= <span class="number">239</span> ) &#123;</span><br><span class="line">                    $tn = <span class="number">3</span>;</span><br><span class="line">                    $n += <span class="number">3</span>;</span><br><span class="line">                    $noc += <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ( <span class="number">240</span> &lt;= $t &amp;&amp; $t &lt;= <span class="number">247</span> ) &#123;</span><br><span class="line">                    $tn = <span class="number">4</span>;</span><br><span class="line">                    $n += <span class="number">4</span>;</span><br><span class="line">                    $noc += <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ( <span class="number">248</span> &lt;= $t &amp;&amp; $t &lt;= <span class="number">251</span> ) &#123;</span><br><span class="line">                    $tn = <span class="number">5</span>;</span><br><span class="line">                    $n += <span class="number">5</span>;</span><br><span class="line">                    $noc += <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ( $t == <span class="number">252</span> || $t == <span class="number">253</span> ) &#123;</span><br><span class="line">                    $tn = <span class="number">6</span>;</span><br><span class="line">                    $n += <span class="number">6</span>;</span><br><span class="line">                    $noc += <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $n ++;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ( $noc &gt;= $length ) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( $noc &gt; $length ) &#123;</span><br><span class="line">                $n -= $tn;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $strcut = substr( $string, <span class="number">0</span>, $n );</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i ++ ) &#123;</span><br><span class="line">                $strcut .= ord( $string[$i] ) &gt; <span class="number">127</span> ? $string[$i] . $string[++ $i] : $string[$i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $strcut = str_replace( <span class="keyword">array</span> ( $pre . <span class="string">&#x27;&amp;&#x27;</span> . $end , $pre . <span class="string">&#x27;&quot;&#x27;</span> . $end , $pre . <span class="string">&#x27;&lt;&#x27;</span> . $end , $pre . <span class="string">&#x27;&gt;&#x27;</span> . $end ), <span class="keyword">array</span> ( <span class="string">&#x27;&amp;amp;&#x27;</span> , <span class="string">&#x27;&amp;quot;&#x27;</span> , <span class="string">&#x27;&amp;lt;&#x27;</span> , <span class="string">&#x27;&amp;gt;&#x27;</span> ), $strcut );</span><br><span class="line"></span><br><span class="line">        $pos = strrpos( $strcut, chr( <span class="number">1</span> ) );</span><br><span class="line">        <span class="keyword">if</span> ( $pos !== <span class="literal">false</span> ) &#123;</span><br><span class="line">            $strcut = substr( $strcut, <span class="number">0</span>, $pos );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $strcut . $dot;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="获得来源类型-post-get"><a href="#获得来源类型-post-get" class="headerlink" title="获得来源类型 post get"></a>获得来源类型 post get</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">method</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> strtoupper( <span class="keyword">isset</span>( $_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] ) ? $_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] : <span class="string">&#x27;GET&#x27;</span> );</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="转换XML文档为数组"><a href="#转换XML文档为数组" class="headerlink" title="转换XML文档为数组"></a>转换XML文档为数组</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 转换XML文档为数组</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> Barry</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2017-10-24</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> string xml内容</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> mixed 返回的数组，如果失败，返回false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">xmlWx2array</span>(<span class="params">$xml</span>) </span>&#123;</span><br><span class="line">     $xml = (<span class="keyword">Array</span>)simplexml_load_string($xml, <span class="string">&quot;SimpleXMLElement&quot;</span>, LIBXML_NOCDATA);</span><br><span class="line">     <span class="keyword">return</span> $xml;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="正则验证url是否合法"><a href="#正则验证url是否合法" class="headerlink" title="正则验证url是否合法"></a>正则验证url是否合法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkUrl</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^(http|https|ftp):\/\/[\w.]+[\w\/]*[\w.]*\??[\w=&amp;\+\%]*/is&#x27;</span>,$url))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="数组转xml"><a href="#数组转xml" class="headerlink" title="数组转xml"></a>数组转xml</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">arrayToXml</span>(<span class="params">$arr</span>) </span>&#123;</span><br><span class="line">     $xml = <span class="string">&quot;&lt;xml&gt;&quot;</span>;</span><br><span class="line">     <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $key=&gt;$val) &#123;</span><br><span class="line">         <span class="keyword">if</span> (is_numeric($val)) &#123;</span><br><span class="line">             $xml.=<span class="string">&quot;&lt;&quot;</span>.$key.<span class="string">&quot;&gt;&quot;</span>.$val.<span class="string">&quot;&lt;/&quot;</span>.$key.<span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span> &#123;</span><br><span class="line">             $xml.=<span class="string">&quot;&lt;&quot;</span>.$key.<span class="string">&quot;&gt;&lt;![CDATA[&quot;</span>.$val.<span class="string">&quot;]]&gt;&lt;/&quot;</span>.$key.<span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     $xml.=<span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">     <span class="comment">//echo $xml;</span></span><br><span class="line">     <span class="keyword">return</span> $xml;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="二维数组排序"><a href="#二维数组排序" class="headerlink" title="二维数组排序"></a>二维数组排序</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 二维数组排序</span></span><br><span class="line"><span class="comment">    *&lt;B&gt;说明：&lt;/B&gt;</span></span><br><span class="line"><span class="comment">    *&lt;pre&gt;</span></span><br><span class="line"><span class="comment">    *  略</span></span><br><span class="line"><span class="comment">    *&lt;/pre&gt;</span></span><br><span class="line"><span class="comment">    *&lt;B&gt;示例：&lt;/B&gt;</span></span><br><span class="line"><span class="comment">    *&lt;pre&gt;</span></span><br><span class="line"><span class="comment">    *  $array = array(</span></span><br><span class="line"><span class="comment">    * 		array(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class="line"><span class="comment">    *      array(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class="line"><span class="comment">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class="line"><span class="comment">    * )</span></span><br><span class="line"><span class="comment">    * ArrayList::arraySort($array,&#x27;userId&#x27;,&#x27;desc&#x27;);</span></span><br><span class="line"><span class="comment">    * 结果</span></span><br><span class="line"><span class="comment">    * 	 *  $array = array(</span></span><br><span class="line"><span class="comment">    * 		array(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class="line"><span class="comment">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class="line"><span class="comment">    * 		array(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class="line"><span class="comment">    * )</span></span><br><span class="line"><span class="comment">    *&lt;/pre&gt;</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $arr 源数组</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $key 数据项key</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $order 排序规则 desc 降序 asc 升序</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">arraySort</span>(<span class="params">$arr, $key, $order = <span class="string">&#x27;desc&#x27;</span></span>) </span>&#123;</span><br><span class="line">       $keysvalue = $new_array = <span class="keyword">array</span>();</span><br><span class="line">       <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">           $keysvalue[$k] = $v[$key];</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> ($order == <span class="string">&#x27;asc&#x27;</span>) &#123;</span><br><span class="line">           asort($keysvalue);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           arsort($keysvalue);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       reset($keysvalue);</span><br><span class="line">       <span class="keyword">foreach</span> ($keysvalue <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">           $new_array[$k] = $arr[$k];</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> $new_array;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


<h4 id="判断是否是微信客户端请求"><a href="#判断是否是微信客户端请求" class="headerlink" title="判断是否是微信客户端请求"></a>判断是否是微信客户端请求</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isWeixin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ( strpos($_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class="string">&#x27;MicroMessenger&#x27;</span>) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="计算两组经纬度坐标之间的距离"><a href="#计算两组经纬度坐标之间的距离" class="headerlink" title="计算两组经纬度坐标之间的距离"></a>计算两组经纬度坐标之间的距离</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两组经纬度坐标 之间的距离</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> $lat1 纬度1；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> $lng1 经度1；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> $lat2 纬度2；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> $lng2 经度2；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params</span> $len_type （1:m or 2:km);</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> m or km</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getDistance</span>(<span class="params">$lat1, $lng1, $lat2, $lng2, $len_type = <span class="number">1</span>, $decimal = <span class="number">2</span></span>) </span>&#123;</span><br><span class="line">    $EARTH_RADIUS=<span class="number">6378.137</span>;</span><br><span class="line">    $PI=<span class="number">3.1415926</span>;</span><br><span class="line">    $radLat1 = $lat1 * $PI / <span class="number">180.0</span>;</span><br><span class="line">    $radLat2 = $lat2 * $PI / <span class="number">180.0</span>;</span><br><span class="line">    $a = $radLat1 - $radLat2;</span><br><span class="line">    $b = ($lng1 * $PI / <span class="number">180.0</span>) - ($lng2 * $PI / <span class="number">180.0</span>);</span><br><span class="line">    $s = <span class="number">2</span> * asin(sqrt(pow(sin($a/<span class="number">2</span>),<span class="number">2</span>) + cos($radLat1) * cos($radLat2) * pow(sin($b/<span class="number">2</span>),<span class="number">2</span>)));</span><br><span class="line">    $s = $s * $EARTH_RADIUS; $s = round($s * <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">if</span> ($len_type &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        $s /= <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> round($s,$decimal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等"><a href="#将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等" class="headerlink" title="将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等"></a>将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 时间格式化 传入时间戳~~~~</span><br><span class="line"> *&#x2F;</span><br><span class="line">static public function formatDate($time)&#123;</span><br><span class="line">    $rtime &#x3D; date ( &quot;m-d H:i&quot;, $time );</span><br><span class="line">    $htime &#x3D; date ( &quot;H:i&quot;, $time );</span><br><span class="line"></span><br><span class="line">    $time &#x3D; time () - $time;</span><br><span class="line"></span><br><span class="line">    if ($time &lt; 60) &#123;</span><br><span class="line">        $str &#x3D; &#39;刚刚&#39;;</span><br><span class="line">    &#125; elseif ($time &lt; 60 * 60) &#123;</span><br><span class="line">        $min &#x3D; floor ( $time &#x2F; 60 );</span><br><span class="line">        $str &#x3D; $min . &#39;分钟前&#39;;</span><br><span class="line">    &#125; elseif ($time &lt; 60 * 60 * 24) &#123;</span><br><span class="line">        $h &#x3D; floor ( $time &#x2F; (60 * 60) );</span><br><span class="line">        $str &#x3D; $h . &#39;小时前 &#39; . $htime;</span><br><span class="line">    &#125; elseif ($time &lt; 60 * 60 * 24 * 3) &#123;</span><br><span class="line">        $d &#x3D; floor ( $time &#x2F; (60 * 60 * 24) );</span><br><span class="line">        if ($d &#x3D;&#x3D; 1)</span><br><span class="line">            $str &#x3D; &#39;昨天 &#39; . $rtime;</span><br><span class="line">        else</span><br><span class="line">            $str &#x3D; &#39;前天 &#39; . $rtime;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $str &#x3D; $rtime;</span><br><span class="line">    &#125;</span><br><span class="line">    return $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="求两个日期之间相差的天数"><a href="#求两个日期之间相差的天数" class="headerlink" title="求两个日期之间相差的天数"></a>求两个日期之间相差的天数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">     * 求两个日期之间相差的天数</span><br><span class="line">     * @param string $datetime1</span><br><span class="line">     * @param string $datetime2</span><br><span class="line">     * @return number</span><br><span class="line">     *&#x2F;</span><br><span class="line">    static public function diffBetweenTwoDays($datetime1, $datetime2) &#123;</span><br><span class="line">        $second1 &#x3D; strtotime($datetime1);</span><br><span class="line">        $second2 &#x3D; strtotime($datetime2);</span><br><span class="line"></span><br><span class="line">        if ($second1 &lt; $second2) &#123;</span><br><span class="line">            $tmp &#x3D; $second2;</span><br><span class="line">            $second2 &#x3D; $second1;</span><br><span class="line">            $second1 &#x3D; $tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        return bcdiv(bcsub($second1, $second2, 3), 86400, 3);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="根据生日计算年龄"><a href="#根据生日计算年龄" class="headerlink" title="根据生日计算年龄"></a>根据生日计算年龄</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static public function Birthday($birthday) &#123;</span><br><span class="line">        $age &#x3D; $birthday;</span><br><span class="line">        if($age &#x3D;&#x3D;&#x3D; false) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        list($y1,$m1,$d1) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$age));</span><br><span class="line">        $now &#x3D; strtotime(&quot;now&quot;);</span><br><span class="line">        list($y2,$m2,$d2) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$now));</span><br><span class="line">        $age &#x3D; $y2 - $y1;</span><br><span class="line">        if((int)($m2.$d2) &lt; (int)($m1.$d1))</span><br><span class="line">            $age -&#x3D; 1;</span><br><span class="line">        return $age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="秒转化成时分秒显示"><a href="#秒转化成时分秒显示" class="headerlink" title="秒转化成时分秒显示"></a>秒转化成时分秒显示</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**秒转化成是时分秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Barry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017-10-24</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $seconds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">changeTimeType</span>(<span class="params">$seconds</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($seconds &gt; <span class="number">3600</span>)&#123;</span><br><span class="line">            $hours = intval($seconds/<span class="number">3600</span>);</span><br><span class="line">            $minutes = $seconds % <span class="number">3600</span>;</span><br><span class="line">            $time = $hours.<span class="string">&quot;:&quot;</span>.gmstrftime(<span class="string">&#x27;%M:%S&#x27;</span>, $minutes);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $time = gmstrftime(<span class="string">&#x27;%H:%M:%S&#x27;</span>, $seconds);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $time;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="删除一个文件夹下面的所有的文件以及文件夹"><a href="#删除一个文件夹下面的所有的文件以及文件夹" class="headerlink" title="删除一个文件夹下面的所有的文件以及文件夹"></a>删除一个文件夹下面的所有的文件以及文件夹</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delDir</span>(<span class="params">$path</span>)</span>&#123;</span><br><span class="line">        error_reporting(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//如果是目录则继续</span></span><br><span class="line">        <span class="keyword">if</span>(is_dir($path))&#123;</span><br><span class="line">            <span class="comment">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class="line">            $p = scandir($path);</span><br><span class="line">            <span class="keyword">foreach</span>($p <span class="keyword">as</span> $val)&#123;</span><br><span class="line">                <span class="comment">//排除目录中的.和..</span></span><br><span class="line">                <span class="keyword">if</span>($val !=<span class="string">&quot;.&quot;</span> &amp;&amp; $val !=<span class="string">&quot;..&quot;</span>)&#123;</span><br><span class="line">                    <span class="comment">//如果是目录则递归子目录，继续操作</span></span><br><span class="line">                    <span class="keyword">if</span>(is_dir($path.$val))&#123;</span><br><span class="line">                        <span class="comment">//子目录中操作删除文件夹和文件</span></span><br><span class="line">                        <span class="built_in">self</span>::deldir($path.$val.<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">                        <span class="comment">//目录清空后删除空文件夹</span></span><br><span class="line">                        @rmdir($path.$val.<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="comment">//如果是文件直接删除</span></span><br><span class="line">                        @unlink($path.$val);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            @rmdir($path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="PHP模拟发送异步请求"><a href="#PHP模拟发送异步请求" class="headerlink" title="PHP模拟发送异步请求"></a>PHP模拟发送异步请求</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PHP发送异步请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Barry</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2017-10-24</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $param 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $header</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">makeAsyncRequest</span>(<span class="params">$url, $param, $httpMethod = <span class="string">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class="line">        $oCurl = curl_init();</span><br><span class="line">        <span class="keyword">if</span> (stripos($url, <span class="string">&quot;https://&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class="literal">FALSE</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class="literal">FALSE</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($httpMethod == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class="string">&quot;?&quot;</span> . http_build_query($param));</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($header)) &#123;</span><br><span class="line">            $headers = [];</span><br><span class="line">            <span class="keyword">foreach</span> ($header <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">                $headers[] = $k.<span class="string">&quot;:&quot;</span>.$v;</span><br><span class="line">            &#125;</span><br><span class="line">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class="number">1</span>);<span class="comment">//必须加，否则下面设置毫秒级会报错</span></span><br><span class="line">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class="number">18</span>);<span class="comment">//设置cURL允许执行的最长毫秒数</span></span><br><span class="line"></span><br><span class="line">        $sContent = curl_exec($oCurl);</span><br><span class="line"><span class="comment">//        print_r($sContent);exit;</span></span><br><span class="line"><span class="comment">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class="line">        curl_close($oCurl);</span><br><span class="line">        <span class="keyword">return</span> json_decode($sContent, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="隐藏手机号中间4位"><a href="#隐藏手机号中间4位" class="headerlink" title="隐藏手机号中间4位"></a>隐藏手机号中间4位</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function blur_phone_number($phoneNum)</span><br><span class="line">    &#123;</span><br><span class="line">        $head &#x3D; substr($phoneNum, 0, 3);</span><br><span class="line">        $tail &#x3D; substr($phoneNum, -4, 4);</span><br><span class="line">        return ($head . &#39;****&#39; . $tail);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>


<h4 id="取毫秒级时间戳"><a href="#取毫秒级时间戳" class="headerlink" title="取毫秒级时间戳"></a>取毫秒级时间戳</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;取毫秒级时间戳</span><br><span class="line">function getMillisecond() &#123;</span><br><span class="line">        list($t1, $t2) &#x3D; explode(&#39; &#39;, microtime());</span><br><span class="line">        return (float)sprintf(&#39;%.0f&#39;,(floatval($t1)+floatval($t2))*1000);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ的安装以及对应的PHP扩展的安装</title>
    <url>//articles/2020/03/17/1584413384830.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180610.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<p>记于2019-2-27</p>
<h6 id="环境：windows-平台，PHP7-1-9"><a href="#环境：windows-平台，PHP7-1-9" class="headerlink" title="环境：windows 平台，PHP7.1.9"></a>环境：windows 平台，PHP7.1.9</h6><h2 id="1、安装-Erlang"><a href="#1、安装-Erlang" class="headerlink" title="1、安装 Erlang"></a>1、安装 Erlang</h2><ul>
<li>因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址<a href="http://www.erlang.org/downloads">http://www.erlang.org/downloads</a></li>
</ul>
<p><img src="https://img.hacpai.com/file/2020/03/image-b1a355b3.png" alt="image.png"></p>
<ul>
<li><p>我选择的是图中的版本，一直next即可</p>
<h2 id="2、下载安装RabbitMQ"><a href="#2、下载安装RabbitMQ" class="headerlink" title="2、下载安装RabbitMQ"></a>2、下载安装RabbitMQ</h2></li>
<li><p>下载地址<a href="http://www.rabbitmq.com/download.html">http://www.rabbitmq.com/download.html</a></p>
</li>
<li><p>也是一直next</p>
</li>
<li><p>安装完成后并没有启动RabbitMQ，需要执行下面的操作：</p>
</li>
</ul>
<p><img src="https://img.hacpai.com/file/2020/03/image-3ecf633e.png" alt="image.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rabbitmq-plugins.bat enable rabbitmq_management</span><br><span class="line"></span><br><span class="line">rabbitmq-service.bat start</span><br></pre></td></tr></table></figure>


<p>PS: 2019 年 2 月 12 日添加</p>
<ul>
<li>如果执行 rabbitmq-plugins.bat enable rabbitmq_management 报错，并且是设置好了环境变量后依然出现这个问题：</li>
</ul>
<p><img src="https://img.hacpai.com/file/2020/03/image-ce381e48.png" alt="image.png"></p>
<ul>
<li>那么就执行下面的命令后，在执行上面的命令</li>
</ul>
<p><img src="https://img.hacpai.com/file/2020/03/image-fe471b8d.png" alt="image.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set ERLANG_HOME&#x3D;C:\Program Files\erl10.2</span><br></pre></td></tr></table></figure>

<ul>
<li>可能会报错提示 但已经运行 这个时候执行<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rabbitmq-service.bat stop</span><br></pre></td></tr></table></figure></li>
<li>访问<a href="http://localhost:15672/">http://localhost:15672/</a> 即可。默认的帐号：guest  密码：guest</li>
</ul>
<p><img src="https://img.hacpai.com/file/2020/03/image-1458e7cd.png" alt="image.png"></p>
<h2 id="3、安装PHP的rabbitMQ扩展"><a href="#3、安装PHP的rabbitMQ扩展" class="headerlink" title="3、安装PHP的rabbitMQ扩展"></a>3、安装PHP的rabbitMQ扩展</h2><h4 id="下载-dll-文件-地址-http-pecl-php-net-package-amqp"><a href="#下载-dll-文件-地址-http-pecl-php-net-package-amqp" class="headerlink" title="下载 dll 文件 地址  http://pecl.php.net/package/amqp"></a>下载 dll 文件 地址  <a href="http://pecl.php.net/package/amqp">http://pecl.php.net/package/amqp</a></h4><ol>
<li>先查看 PHP 版本。</li>
</ol>
<p><img src="https://img.hacpai.com/file/2020/03/image-51e11d34.png" alt="image.png"></p>
<ol start="2">
<li>选择问稳定版的 dll</li>
</ol>
<p><img src="https://img.hacpai.com/file/2020/03/image-1cbd4339.png" alt="image.png"></p>
<p> 我选择的是 1.9.3 。因为 Thread Safety  enable  ,所以选择的是 TS。</p>
<p><img src="https://img.hacpai.com/file/2020/03/image-ae7f0118.png" alt="image.png"></p>
<ol start="3">
<li>下载后解压</li>
</ol>
<p><img src="https://img.hacpai.com/file/2020/03/image-9c95aaed.png" alt="image.png"></p>
<ol start="4">
<li>将 php_amqp.dll 文件放在 PHP 安装目录 ext 下</li>
</ol>
<p><img src="https://img.hacpai.com/file/2020/03/image-6a3a5330.png" alt="image.png"></p>
<ol start="5">
<li>php.ini 里面添加</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extension&#x3D;php_amqp.dll</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>将 rabbitmq.4.dll 文件放在 php/php7.1.9/目录下，并在 apach 的 httpd.conf 文件中加上一句：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;php&#x2F;php7.1.9&#x2F;rabbitmq.4.dll&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://img.hacpai.com/file/2020/03/image-861d7af8.png" alt="image.png"></p>
<ol start="7">
<li><p>重启 apache 和 PHP 服务。</p>
</li>
<li><p>访问 phpinfo();</p>
</li>
<li><p>有 amqp 则安装成功</p>
</li>
</ol>
<p><img src="https://img.hacpai.com/file/2020/03/image-77d95e4d.png" alt="image.png"></p>
<h2 id="4、项目中安装php-amqplib库"><a href="#4、项目中安装php-amqplib库" class="headerlink" title="4、项目中安装php-amqplib库"></a>4、项目中安装php-amqplib库</h2><h4 id="使用-composer-安装"><a href="#使用-composer-安装" class="headerlink" title="使用 composer 安装"></a>使用 composer 安装</h4><ol>
<li>项目目录下的 composer.json 文件中增加下面内容</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;require&quot;: &#123;</span><br><span class="line">    &quot;php-amqplib&#x2F;php-amqplib&quot;: &quot;^2.8&quot;,  &#x2F;&#x2F;增加这行</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#96;&#96;&#96;&#96;</span><br><span class="line">2. 然后执行:</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> composer update php-amqplib/php-amqplib。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### 更加方便的做法是直接执行</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>composer require php-amqplib/php-amqplib </p>
<pre><code>便可以直接进行安装了

![image.png](https://img.hacpai.com/file/2020/03/image-b6ba5d5b.png)



## 5、接下来就可以尽情的玩耍了。。。</code></pre>
]]></content>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用github当作自己的静态文件库</title>
    <url>//articles/2020/03/11/1583919217986.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20200218.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。</p>
<h2 id="一、在-GitHub-上创建一个图床仓库"><a href="#一、在-GitHub-上创建一个图床仓库" class="headerlink" title="一、在 GitHub 上创建一个图床仓库"></a>一、在 GitHub 上创建一个图床仓库</h2><p><img src="https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-c1eaf3b5.png" alt="image.png"></p>
<ul>
<li>PS：一定要选 Public 不然无法访问到资源</li>
</ul>
<h2 id="二、将项目克隆到本地"><a href="#二、将项目克隆到本地" class="headerlink" title="二、将项目克隆到本地"></a>二、将项目克隆到本地</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:barryzpc/pic-repo.git</span><br></pre></td></tr></table></figure>

<h2 id="三、创建自己的项目"><a href="#三、创建自己的项目" class="headerlink" title="三、创建自己的项目"></a>三、创建自己的项目</h2><h4 id="在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录："><a href="#在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录：" class="headerlink" title="在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录："></a>在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：</h4><p><img src="https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-589b7be6.png" alt="image.png"></p>
<h2 id="四、添加静态文件到对应的目录中"><a href="#四、添加静态文件到对应的目录中" class="headerlink" title="四、添加静态文件到对应的目录中"></a>四、添加静态文件到对应的目录中</h2><h4 id="比如，我添加一张图片到我的-img-目录下"><a href="#比如，我添加一张图片到我的-img-目录下" class="headerlink" title="比如，我添加一张图片到我的 img 目录下"></a>比如，我添加一张图片到我的 img 目录下</h4><p><img src="https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-7f90875c.png" alt="image.png"></p>
<h2 id="五、提交到-GitHub"><a href="#五、提交到-GitHub" class="headerlink" title="五、提交到 GitHub"></a>五、提交到 GitHub</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;add pic&quot;</span><br><span class="line">git push </span><br></pre></td></tr></table></figure>

<p>这时图片的已经提交到 GitHub 上</p>
<ul>
<li>PS: 如果包含有大量的图片，可以选择用 <strong><a href="https://github.com/Molunerfinn/PicGo">PicGo</a></strong> 这个工具来上传</li>
</ul>
<h2 id="六、如何访问到静态文件"><a href="#六、如何访问到静态文件" class="headerlink" title="六、如何访问到静态文件"></a>六、如何访问到静态文件</h2><h4 id="访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr"><a href="#访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr" class="headerlink" title="访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 jsDelivr"></a>访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 <a href="https://www.jsdelivr.com/" title="jsDelivr">jsDelivr</a></h4><ul>
<li> <code>jsDelivr</code> 为开发者提供免费公共 CDN 加速服务</li>
<li>在中国大陆唯一有 license 的公有 CDN，而且使用中的访问速度也很快</li>
<li>并且 <code>JSDelivr</code> 能够集成 GitHub、NPM、WordPress 资源，只需要通过符合 JSDelivr 规则的 URL 引用，即可直接使用他们中资源。</li>
</ul>
<h4 id="获取直链"><a href="#获取直链" class="headerlink" title="获取直链"></a>获取直链</h4><h6 id="找到刚才上传图片的链接"><a href="#找到刚才上传图片的链接" class="headerlink" title="找到刚才上传图片的链接"></a>找到刚才上传图片的链接</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;barryzpc&#x2F;pic-repo&#x2F;blob&#x2F;master&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>

<h6 id="但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了"><a href="#但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了" class="headerlink" title="但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 JSDelivr 的链接，就能在浏览器中直接访问到图片了"></a>但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 <code>JSDelivr</code> 的链接，就能在浏览器中直接访问到图片了</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;barryzpc&#x2F;pic-repo&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>

<h6 id="注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网"><a href="#注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网" class="headerlink" title="注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 jsDelivr 的官网"></a>注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 <a href="https://www.jsdelivr.com/" title="jsDelivr">jsDelivr</a> 的官网</h6><hr>
<h2 id="GitHub-地址"><a href="#GitHub-地址" class="headerlink" title="GitHub 地址"></a>GitHub 地址</h2><h4 id="pic-repo"><a href="#pic-repo" class="headerlink" title="pic-repo"></a><strong><a href="https://github.com/barryzpc/pic-repo">pic-repo</a></strong></h4><h2 id="博客地址"><a href="#博客地址" class="headerlink" title="博客地址"></a>博客地址</h2><h4 id="http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html"><a href="#http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html" class="headerlink" title="http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html"></a><strong><a href="http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html">http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</a></strong></h4><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本文中所有图片均以此种方式存放。可进入github中查看</p>
]]></content>
      <tags>
        <tag>github</tag>
        <tag>JSDelivr</tag>
      </tags>
  </entry>
  <entry>
    <title>Yii 根据公司id来产品分表，以及读取产品表时的一些操作</title>
    <url>//articles/2020/03/03/1583207015907.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180314.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><h6 id="由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。"><a href="#由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。" class="headerlink" title="由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。"></a>由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。</h6><h6 id="当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。"><a href="#当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。" class="headerlink" title="当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。"></a>当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。</h6><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p> <code>PHP</code> <code>Yii</code> <code>MySql</code> </p>
<h2 id="如何创建产品表"><a href="#如何创建产品表" class="headerlink" title="如何创建产品表"></a>如何创建产品表</h2><h4 id="在添加一个公司的信息时自动创建公司对应的产品表"><a href="#在添加一个公司的信息时自动创建公司对应的产品表" class="headerlink" title="在添加一个公司的信息时自动创建公司对应的产品表"></a>在添加一个公司的信息时自动创建公司对应的产品表</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//新增一个公司信息，返回公司id</span></span><br><span class="line">$companyId= <span class="keyword">$this</span>-&gt;CompanyModel()-&gt;add($data);</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> !== $companyId) &#123;</span><br><span class="line">    <span class="comment">//创建公司对应的产品表</span></span><br><span class="line">    ProductTable::create($companyId);</span><br><span class="line">    Tools::sendJson(<span class="number">0</span>, <span class="string">&quot;添加成功&quot;</span>, \Yii::$app-&gt;urlManager-&gt;createUrl([<span class="string">&#x27;company/lists&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Tools::sendJson(<span class="number">40000205</span>, <span class="string">&quot;添加失败&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ProductTable-create-companyId-方法的实现"><a href="#ProductTable-create-companyId-方法的实现" class="headerlink" title="ProductTable::create($companyId) 方法的实现"></a>ProductTable::create($companyId) 方法的实现</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductTable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params">$companyId</span>)</span>&#123;</span><br><span class="line">        $tableName = <span class="string">&#x27;test_product_&#x27;</span>.$companyId;</span><br><span class="line">        $sql = &lt;&lt;&lt;EOT</span><br><span class="line">CREATE TABLE <span class="keyword">if</span> not exists `$tableName` (</span><br><span class="line">  `id` <span class="keyword">int</span>(<span class="number">11</span>) unsigned NOT <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `cid` <span class="keyword">int</span>(<span class="number">11</span>) unsigned NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;公司id&#x27;</span>,</span><br><span class="line">  `name` varchar(<span class="number">30</span>) NOT <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;产品名称&#x27;</span>,</span><br><span class="line">  `barcode` varchar(<span class="number">30</span>) NOT <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;条码&#x27;</span>,</span><br><span class="line">  `image` varchar(<span class="number">225</span>) NOT <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;产品图片&#x27;</span>,</span><br><span class="line">  `company_classify_id` <span class="keyword">int</span>(<span class="number">11</span>) unsigned NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;公司分类id&#x27;</span>,</span><br><span class="line">  `size` varchar(<span class="number">20</span>) NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;规格&#x27;</span>,</span><br><span class="line">  `expire_date` date NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;保质期&#x27;</span>,</span><br><span class="line">  `production_date` datetime NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;生产日期&#x27;</span>,</span><br><span class="line">  `batch_num` varchar(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> COMMENT <span class="string">&#x27;生产批次&#x27;</span>,</span><br><span class="line">  `status` tinyint(<span class="number">2</span>) unsigned NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;状态：0，停用；1，启用&#x27;</span>,</span><br><span class="line">  `classify_id` <span class="keyword">int</span>(<span class="number">11</span>) unsigned NOT <span class="literal">NULL</span> COMMENT <span class="string">&#x27;系统分类id&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `created_id` <span class="keyword">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> COMMENT <span class="string">&#x27;创建者id&#x27;</span>,</span><br><span class="line">  `updated_id` <span class="keyword">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> COMMENT <span class="string">&#x27;更新者id&#x27;</span>,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET=utf8mb4 COMMENT=<span class="string">&#x27;公司产品信息表&#x27;</span>;</span><br><span class="line">EOT;</span><br><span class="line"></span><br><span class="line">        $connection = Yii::$app-&gt;db;</span><br><span class="line">        $command = $connection-&gt;createCommand($sql);</span><br><span class="line">        $rowCount = $command-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> $rowCount;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="如何调用产品表，将产品存入对应公司的产品表"><a href="#如何调用产品表，将产品存入对应公司的产品表" class="headerlink" title="如何调用产品表，将产品存入对应公司的产品表"></a>如何调用产品表，将产品存入对应公司的产品表</h2><h4 id="当添加产品信息时"><a href="#当添加产品信息时" class="headerlink" title="当添加产品信息时"></a>当添加产品信息时</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;cid&#x27;</span> =&gt; $companyId,</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; $name,</span><br><span class="line">            <span class="string">&#x27;barcode&#x27;</span> =&gt; $barcode,</span><br><span class="line">            <span class="string">&#x27;image&#x27;</span> =&gt; $res[<span class="string">&#x27;url&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;company_classify_id&#x27;</span> =&gt; $company_classify_id,</span><br><span class="line">            <span class="string">&#x27;classify_id&#x27;</span> =&gt; $classify_id,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span> =&gt; $size,</span><br><span class="line">            <span class="string">&#x27;expire_date&#x27;</span> =&gt; $expire_date,</span><br><span class="line">            <span class="string">&#x27;production_date&#x27;</span> =&gt; $production_date,</span><br><span class="line">            <span class="string">&#x27;created_id&#x27;</span> =&gt; Yii::$app-&gt;user-&gt;id,</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span> =&gt; $status,</span><br><span class="line">        );</span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;ProductModel($companyId)-&gt;add($data);</span><br></pre></td></tr></table></figure>

<h4 id="ProductModel-companyId-的实现"><a href="#ProductModel-companyId-的实现" class="headerlink" title="ProductModel($companyId)的实现"></a>ProductModel($companyId)的实现</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">ProductModel</span>(<span class="params">$companyId</span>)</span>&#123;</span><br><span class="line">       ProductModel::resetPartitionIndex($companyId);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> ProductModel();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h4 id="ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作"><a href="#ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作" class="headerlink" title="ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作"></a>ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This is the model class for table &quot;&#123;&#123;%test_product&#125;&#125;&quot;.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductModel</span> <span class="keyword">extends</span> \<span class="title">common</span>\<span class="title">PopToolActiveRecord</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">private</span> $partitionIndex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化 partitionIndex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $companyId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">resetPartitionIndex</span>(<span class="params">$companyId</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">self</span>::$partitionIndex = <span class="string">&#x27;_&#x27;</span>.$companyId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将表名拼接上公司id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@inheritdoc</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">tableName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#123;&#123;test_product&#x27;</span>.<span class="built_in">self</span>::$partitionIndex.<span class="string">&#x27;&#125;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">$data = []</span>) </span>&#123;</span><br><span class="line">        $mix_result = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">true</span> == <span class="keyword">empty</span>($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> $mix_result;</span><br><span class="line">        &#125;</span><br><span class="line">        PopToolActiveRecord::beginTransaction();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            $result = <span class="keyword">$this</span>-&gt;setData($data)-&gt;insert();</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">false</span> == $result) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&quot;添加信息失败，请重试&quot;</span>, <span class="number">1004001</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $int_adves_id = (<span class="keyword">int</span>)<span class="keyword">$this</span>-&gt;id;</span><br><span class="line"></span><br><span class="line">            PopToolActiveRecord::commit();</span><br><span class="line">            $mix_result = $int_adves_id;</span><br><span class="line">        &#125; <span class="keyword">catch</span>(\<span class="built_in">Exception</span> $e) &#123;</span><br><span class="line">            PopToolActiveRecord::rollback();</span><br><span class="line">            $mix_result = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $mix_result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">/*下面是具体对tableName进行增删改查的函数实现就不一一列出了*/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>ps：以前的写业务时遇到的问题以及处理方案，拿出来做一下笔记。</li>
</ul>
]]></content>
      <tags>
        <tag>mysql</tag>
        <tag>PHP</tag>
        <tag>Yii</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP遍历删除文件夹以及文件夹里的文件</title>
    <url>//articles/2019/12/30/1577691418354.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20190108.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="场景描述："><a href="#场景描述：" class="headerlink" title="场景描述："></a>场景描述：</h2><h4 id="遍历去清空一个目录下的文件夹以及文件"><a href="#遍历去清空一个目录下的文件夹以及文件" class="headerlink" title="遍历去清空一个目录下的文件夹以及文件"></a>遍历去清空一个目录下的文件夹以及文件</h4><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delDir</span>(<span class="params">$path</span>)</span>&#123;</span><br><span class="line">        error_reporting(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//如果是目录则继续</span></span><br><span class="line">        <span class="keyword">if</span>(is_dir($path))&#123;</span><br><span class="line">            <span class="comment">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class="line">            $p = scandir($path);</span><br><span class="line">            <span class="keyword">foreach</span>($p <span class="keyword">as</span> $val)&#123;</span><br><span class="line">                <span class="comment">//排除目录中的.和..</span></span><br><span class="line">                <span class="keyword">if</span>($val !=<span class="string">&quot;.&quot;</span> &amp;&amp; $val !=<span class="string">&quot;..&quot;</span>)&#123;</span><br><span class="line">                    <span class="comment">//如果是目录则递归子目录，继续操作</span></span><br><span class="line">                    <span class="keyword">if</span>(is_dir($path.$val))&#123;</span><br><span class="line">                        <span class="comment">//子目录中操作删除文件夹和文件</span></span><br><span class="line">                        <span class="built_in">self</span>::deldir($path.$val.<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">                        <span class="comment">//目录清空后删除空文件夹</span></span><br><span class="line">                        @rmdir($path.$val.<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="comment">//如果是文件直接删除</span></span><br><span class="line">                        @unlink($path.$val);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            @rmdir($path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>如何隐藏HTTP响应头里的server和X-Powered-By</title>
    <url>//articles/2019/11/21/1574332517065.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By</p>
<h2 id="未隐藏时http响应头中包含了如下信息"><a href="#未隐藏时http响应头中包含了如下信息" class="headerlink" title="未隐藏时http响应头中包含了如下信息"></a>未隐藏时http响应头中包含了如下信息</h2><p><img src="https://img.hacpai.com/file/2019/11/image-0226a7ee.png" alt="image.png"></p>
<h2 id="apache-隐藏-server"><a href="#apache-隐藏-server" class="headerlink" title="apache 隐藏 server"></a>apache 隐藏 server</h2><p>修改httpd.conf 设置 </p>
<pre><code>ServerSignature Off
ServerTokens Prod</code></pre>
<h2 id="nginx-隐藏-server"><a href="#nginx-隐藏-server" class="headerlink" title="nginx 隐藏 server"></a>nginx 隐藏 server</h2><p>修改nginx.conf  在http里面设置 </p>
<pre><code>server_tokens off;</code></pre>
<h2 id="隐藏X-Powered-By"><a href="#隐藏X-Powered-By" class="headerlink" title="隐藏X-Powered-By"></a>隐藏X-Powered-By</h2><p>修改 php.ini 文件 设置 </p>
<pre><code>expose_php = Off</code></pre>
<h2 id="隐藏之后显示"><a href="#隐藏之后显示" class="headerlink" title="隐藏之后显示"></a>隐藏之后显示</h2><p><img src="https://img.hacpai.com/file/2019/11/image-04c2fd90.png" alt="image.png"></p>
]]></content>
      <tags>
        <tag>PHP</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>Tmux: linux下的分屏神器</title>
    <url>//articles/2019/11/08/1573185041865.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20181103.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><h4 id="tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。"><a href="#tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。" class="headerlink" title="tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。"></a>tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。</h4><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h4 id="Tmux-的安装。"><a href="#Tmux-的安装。" class="headerlink" title="Tmux 的安装。"></a>Tmux 的安装。</h4><pre><code># Ubuntu
$ sudo apt-get install tmux

# CentOS
$ sudo yum install tmux

# Mac
$ brew install tmux</code></pre>
<h2 id="启动与退出"><a href="#启动与退出" class="headerlink" title="启动与退出"></a>启动与退出</h2><h4 id="安装完成后，键入tmux命令，就进入了-Tmux-窗口。"><a href="#安装完成后，键入tmux命令，就进入了-Tmux-窗口。" class="headerlink" title="安装完成后，键入tmux命令，就进入了 Tmux 窗口。"></a>安装完成后，键入<code>tmux</code>命令，就进入了 Tmux 窗口。</h4><pre><code>$ tmux</code></pre>
<h4 id="按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。"><a href="#按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。" class="headerlink" title="按下Ctrl+d或者显式输入exit命令，就可以退出 Tmux 窗口。"></a>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</h4><pre><code>$ exit</code></pre>
<h2 id="tmux的基础操作"><a href="#tmux的基础操作" class="headerlink" title="tmux的基础操作"></a>tmux的基础操作</h2><h4 id="基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。"><a href="#基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。" class="headerlink" title="基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。"></a>基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。</h4><p>一般使用命令和快捷键进行操作，可在系统shell终端和tmux命令模式（类似vim的命令模式）下使用命令，或者在tmux终端使用快捷键。<br>tmux默认的快捷键前缀是<strong>Ctrl+b</strong>(下文用<strong>prefix</strong>指代)，按下前缀组合键后松开，再按下命令键进行快捷操作，比如使用<strong>prefix d</strong>分离会话（应该写作<strong>prefix d</strong>而不是<strong>prefix+d，</strong>因为<strong>d</strong>键不需要与<strong>prefix</strong>同时按下）。</p>
<h2 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理　"></a>会话管理　</h2><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p><code>tmux new</code>　　创建默认名称的会话（在tmux命令模式使用<strong>new</strong>命令可实现同样的功能，其他命令同理，后文不再列出tmux终端命令）</p>
<p><code>tmux new -s mytest</code>　　创建名为mytest的会话</p>
<p><code>tmux ls</code>　　显示会话列表</p>
<p><code>tmux a</code>　　连接上一个会话</p>
<p><code>tmux a -t mytest</code>　　连接指定会话</p>
<p><code>tmux rename -t s1 s2</code>    重命名会话s1为s2</p>
<p><code>tmux kill-session</code>　　关闭上次打开的会话</p>
<p><code>tmux kill-session -t s1</code>　　关闭会话s1</p>
<p><code>tmux kill-session -a -t s1</code>　　关闭除s1外的所有会话</p>
<p><code>tmux kill-server</code>　　关闭所有会话</p>
<h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><p><code>prefix s</code>　　列出会话，可进行切换</p>
<p><code>prefix $</code>　　重命名会话</p>
<p><code>prefix d</code>　　分离当前会话</p>
<p><code>prefix D</code>　　分离指定会话</p>
<h4 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h4><p><code>prefix c</code>　　创建一个新窗口</p>
<p><code>prefix ,</code>　　重命名当前窗口</p>
<p><code>prefix w</code>　　列出所有窗口，可进行切换</p>
<p><code>prefix n</code>　　进入下一个窗口</p>
<p><code>prefix p</code>　　进入上一个窗口</p>
<p><code>prefix l</code>　　进入之前操作的窗口</p>
<p><code>prefix 0~9</code>　　选择编号0~9对应的窗口</p>
<p><code>prefix .</code>　　修改当前窗口索引编号</p>
<p><code>prefix &#39;</code>　　切换至指定编号（可大于9）的窗口</p>
<p><code>prefix f</code>　　根据显示的内容搜索窗格</p>
<p><code>prefix &amp;</code>　　关闭当前窗口</p>
<h4 id="窗格管理"><a href="#窗格管理" class="headerlink" title="窗格管理"></a>窗格管理</h4><p><code>prefix %</code>　　水平方向创建窗格</p>
<p><code>prefix &quot;</code>　　垂直方向创建窗格</p>
<p><code>prefix Up|Down|Left|Right</code>　　根据箭头方向切换窗格</p>
<p><code>prefix q</code>　　显示窗格编号</p>
<p><code>prefix o</code>　　顺时针切换窗格</p>
<p><code>prefix &#125;</code>　　与下一个窗格交换位置</p>
<p><code>prefix &#123;</code>　　与上一个窗格交换位置</p>
<p><code>prefix x</code>　　关闭当前窗格</p>
<p><code>prefix space(空格键)</code>　　重新排列当前窗口下的所有窗格</p>
<p><code>prefix !</code>　　将当前窗格置于新窗口</p>
<p><code>prefix Ctrl+o</code>　　逆时针旋转当前窗口的窗格</p>
<p><code>prefix t</code>　　在当前窗格显示时间</p>
<p><code>prefix z</code>　　放大当前窗格(再次按下将还原)</p>
<p><code>prefix i</code>　　显示当前窗格信息</p>
<h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><p><code>tmux list-key</code>　　列出所有绑定的键，等同于<strong>prefix ?</strong></p>
<p><code>tmux list-command</code>　　列出所有命令</p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>nohup不输出日志文件方法</title>
    <url>//articles/2019/10/31/1572491704006.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20190222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h2 id="场景描述："><a href="#场景描述：" class="headerlink" title="场景描述："></a>场景描述：</h2><h6 id="用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）"><a href="#用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）" class="headerlink" title="用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是 100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins 等）"></a>用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（<em>当时的磁盘是 100G，全部写满</em>），导致别的程序无法正常运行。（<em>如启动：Jenkins 等</em>）</h6><h6 id="那么如何让nohup命令不产生大量的日志文件呢"><a href="#那么如何让nohup命令不产生大量的日志文件呢" class="headerlink" title="那么如何让nohup命令不产生大量的日志文件呢"></a>那么如何让nohup命令不产生大量的日志文件呢</h6><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？<br>查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。</p>
<pre><code>/dev/null</code></pre>
<p><strong>/dev/null</strong>  ： 在类Unix系统中，/dev/null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。<br>在程序员行话，尤其是Unix系统中，/dev/null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。</p>
<h2 id="操作示例"><a href="#操作示例" class="headerlink" title="操作示例"></a>操作示例</h2><pre><code> nohup java -cp WEB-INF/lib/*:WEB-INF/classes org.b3log.solo.Starter &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre>
<ul>
<li><em>&gt;/dev/null</em> 将信息输出到/dev/null </li>
<li> <em>2&gt;&amp;1</em> 将错误信息重定向到标准输出</li>
<li>最后一个&amp;符号，表示程序在后台运行</li>
</ul>
<h2 id="关于Linux的重定向"><a href="#关于Linux的重定向" class="headerlink" title="关于Linux的重定向"></a>关于Linux的重定向</h2><ul>
<li>0:表示标准输入</li>
<li>1:标准输出,在一般使用时，默认的是标准输出</li>
<li>2:标准错误信息输出</li>
</ul>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>这样问题就得到了解决。<br>如果大神们有更好解决方案可以在写在评论中</p>
]]></content>
      <tags>
        <tag>nohup</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 计算两个时间的差</title>
    <url>//articles/2019/10/29/1572338620193.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20171210.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h4 id="example："><a href="#example：" class="headerlink" title="example："></a>example：</h4><pre><code>TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS &#39;开户时间&#39;,</code></pre>
<ul>
<li>时间差函数：TIMESTAMPDIFF()</li>
</ul>
<h5 id="返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；"><a href="#返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；" class="headerlink" title="返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；"></a>返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；</h5><h5 id="返回值可以是秒，分……："><a href="#返回值可以是秒，分……：" class="headerlink" title="返回值可以是秒，分……："></a>返回值可以是秒，分……：</h5><pre><code>SECOND   --&gt;秒 
MINUTE     --&gt;分钟 
HOUR       --&gt;小时
DAY          --&gt;天 
MONTH     --&gt;月 
YEAR        --&gt;年</code></pre>
<ul>
<li>PS：如果时间格式是（’Y-m-d H:i：s’）则不需要用FROM_UNIXTIME()函数，如果是时间戳则需要转换时间格式。</li>
</ul>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>redis使用的小技巧</title>
    <url>//articles/2019/10/29/1572337593869.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20180518.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"></p>
<h3 id="redis使用的小技巧"><a href="#redis使用的小技巧" class="headerlink" title="redis使用的小技巧"></a>redis使用的小技巧</h3><h5 id="按照key批量删除某些值"><a href="#按照key批量删除某些值" class="headerlink" title="按照key批量删除某些值"></a>按照key批量删除某些值</h5><pre><code>redis-cli -h 11.11.11.100  -p 6379 -a password keys &quot;key*&quot; | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del</code></pre>
<ul>
<li>说明 redis-cli -h 11.11.11.100   -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码</li>
<li>“key*” 用于前匹配到相关的key的值</li>
<li>xargs redis-cli -h 11.11.11.100  -p 6379 -a password del 执行删除操作</li>
</ul>
<hr>
<h5 id="查看redis客户端最大连接数"><a href="#查看redis客户端最大连接数" class="headerlink" title="查看redis客户端最大连接数"></a>查看redis客户端最大连接数</h5><h6 id="连接redis-cli-后执行："><a href="#连接redis-cli-后执行：" class="headerlink" title="连接redis-cli 后执行："></a>连接redis-cli 后执行：</h6><pre><code>config get maxclients</code></pre>
<h6 id="如果要修改，可到redis-conf中修改"><a href="#如果要修改，可到redis-conf中修改" class="headerlink" title="如果要修改，可到redis.conf中修改"></a>如果要修改，可到redis.conf中修改</h6><h5 id="查看redis当前连接数"><a href="#查看redis当前连接数" class="headerlink" title="查看redis当前连接数"></a>查看redis当前连接数</h5><pre><code>info clients</code></pre>
]]></content>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用service redisd start 启动redis服务</title>
    <url>//articles/2019/10/29/1572336502745.html</url>
    <content><![CDATA[<p><img src="https://img.hacpai.com/bing/20200109.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"> </p>
<h4 id="场景描述："><a href="#场景描述：" class="headerlink" title="场景描述："></a>场景描述：</h4><p>如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。</p>
<h4 id="首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh"><a href="#首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh" class="headerlink" title="首先，cd到redis的安装目录下，再cd到util，接着执行./install_server.sh"></a>首先，cd到redis的安装目录下，再cd到util，接着执行<code>./install_server.sh</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-3.0.7&#x2F;utils</span><br><span class="line">.&#x2F;install_server.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>说明：该过程会选择相关的配置，一般情况下，默认的就可以了</li>
</ul>
<h4 id="然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下："><a href="#然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下：" class="headerlink" title="然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下："></a>然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;init.d&#x2F; </span><br><span class="line">mv redis_6379 redisd</span><br></pre></td></tr></table></figure>

<h4 id="然后，就可以启动redis服务了"><a href="#然后，就可以启动redis服务了" class="headerlink" title="然后，就可以启动redis服务了"></a>然后，就可以启动redis服务了</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service redisd start</span><br></pre></td></tr></table></figure>

<p><em>ps：如果是想按照自己的redis.conf配置文件启动redis，就需要进入到redis的安装目录，执行redis-server加上配置文件的全路径，如：</em></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">redis-server /path/redis.conf</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
</search>
