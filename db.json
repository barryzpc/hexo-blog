{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/ocean/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/ocean/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/ocean/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/404.styl","path":"css/404.styl","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/ocean/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/ocean/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/forrestgump.png","path":"images/forrestgump.png","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/hexo-inverted.svg","path":"images/hexo-inverted.svg","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/hexo.svg","path":"images/hexo.svg","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/busuanzi-2.3.pure.min.js","path":"js/busuanzi-2.3.pure.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/jquery.justifiedGallery.min.js","path":"js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/ocean.js","path":"js/ocean.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/pace.min.js","path":"js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/feathericon/feathericon.eot","path":"css/feathericon/feathericon.eot","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/feathericon/feathericon.svg","path":"css/feathericon/feathericon.svg","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/feathericon/feathericon.ttf","path":"css/feathericon/feathericon.ttf","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/feathericon/feathericon.woff","path":"css/feathericon/feathericon.woff","modified":0,"renderable":1},{"_id":"themes/ocean/source/css/feathericon/feathericon.woff2","path":"css/feathericon/feathericon.woff2","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/ocean/ocean.ogv","path":"images/ocean/ocean.ogv","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/ocean/ocean.png","path":"images/ocean/ocean.png","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/ocean/ocean.mp4","path":"images/ocean/ocean.mp4","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/ocean/ocean.webm","path":"images/ocean/ocean.webm","modified":0,"renderable":1},{"_id":"themes/ocean/source/images/ocean/overlay-hero.png","path":"images/ocean/overlay-hero.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/201910/redis使用的小技巧.md","hash":"3fcd567f9bc835b18cc41cf32e9224f914831b02","modified":1605493606000},{"_id":"source/_posts/201910/mysql计算两个时间的差.md","hash":"6ce1214607960eead22ee3025ba39fc43a79eb04","modified":1605493606000},{"_id":"source/_posts/201910/nohup不输出日志文件方法.md","hash":"f0cd926749bfc82160caf48aa656d26e3f715507","modified":1605493606000},{"_id":"source/_posts/201910/如何使用serviceredisdstart启动redis服务.md","hash":"ed3e0f1c14c20026fea59c3f22aacee3fdc564b8","modified":1605493606000},{"_id":"source/_posts/202003/RabbitMQ的安装以及对应的PHP扩展的安装.md","hash":"c6cea63408480dc640098d3eced62861bb4e40d6","modified":1605493606000},{"_id":"source/_posts/202003/Yii根据公司id来产品分表以及读取产品表时的一些操作.md","hash":"494377b9618ac9a6bdfbbab2d170751494fecfa3","modified":1605493606000},{"_id":"source/_posts/202003/如何使用github当作自己的静态文件库.md","hash":"89bf257eec43a640555f3830ad2228e530463618","modified":1605493606000},{"_id":"source/_posts/202003/PHP的常用工具函数.md","hash":"7b5f034f744b705f153c4ec530dc6e46c0bdf5c1","modified":1605493606000},{"_id":"source/_posts/201911/Tmuxlinux下的分屏神器.md","hash":"de85d3f3cb77a12482a5c80d263d5469f3e78b26","modified":1605493606000},{"_id":"source/_posts/201912/PHP遍历删除文件夹以及文件夹里的文件.md","hash":"1c9d9011ceeae7eaff81635ab51d2045bd783749","modified":1605493606000},{"_id":"source/_posts/201911/如何隐藏HTTP响应头里的server和XPoweredBy.md","hash":"22445196ae94666faa639a80f81daeb09e555778","modified":1605493606000},{"_id":"source/_posts/202004/PHP实现输入一个整数n输出一个nn蛇形矩阵.md","hash":"863bf03a2b2d1fe70523aa0c86fb3c7cdc1cfdd2","modified":1605493606000},{"_id":"source/_posts/202004/转载你知道缓存的正确打开方式么.md","hash":"de2a4a02101f58c15d020933013f8d90f065baf4","modified":1605493606000},{"_id":"source/_posts/202004/网上收集的PHP知识点和面试汇总.md","hash":"918bacfb5ecade9fb1e78fd8f0bbdbde28d6b58b","modified":1605493606000},{"_id":"source/_posts/202004/转载centos7编译安装php7.4.md","hash":"240981b01182732f5fc232d6cfefc544524e639e","modified":1605493606000},{"_id":"source/_posts/202007/PHP使用curl实现毫秒级等待的伪异步请求.md","hash":"205f6c4410071a9bc0ec7dc80c4454763f74fbf1","modified":1605493606000},{"_id":"source/_posts/202007/python项目依赖库的批量导出和导入.md","hash":"69d0b9689ddf005a73396caa2f8e643934d3394d","modified":1605493606000},{"_id":"source/_posts/202005/我在GitHub上的开源项目.md","hash":"79b5a06800b3975fe37e6e94eac779d683bbbe9e","modified":1605493606000},{"_id":"source/_posts/202008/PHP下使用rabbitMQ报错CalltoundefinedfunctionPhpAmqpLibWireIOsocketstrerror的问题查找与解决.md","hash":"903c86a816581f42d948a9ad288cf1afa8e5c722","modified":1605497420513},{"_id":"source/_posts/202007/windows生产服务器下部署Flask.md","hash":"29ac26c52026c8365697283cdf47f3fef7a9573e","modified":1605493606000},{"_id":"source/_posts/202008/Apache报错Parentchildprocess2744exitedwithstatus3221226356Restarting.md","hash":"ffebf5cd3c6f503791b18306283f5ac3855d976c","modified":1605493606000},{"_id":"source/_posts/202008/Apachewamp下配置ssl证书.md","hash":"7ff5a2d1ff90e9f7a66dd29179cf18912ef6a5d9","modified":1605493606000},{"_id":"source/_posts/202008/系统更新导致PHP报错libonig.so.2cannotopensharedobjectfile...问题解决.md","hash":"b9297e8169a0a39d44eca7d411e13ac9b5e47ed5","modified":1605493606000},{"_id":"source/_posts/202008/使用PHP下载网络图片或文件.md","hash":"c2487c3a64d17c445ab66d4954ac8394c5bcf00c","modified":1605493606000},{"_id":"themes/ocean/package.json","hash":"3976a703c6b3d903387a77cae8b732a7aeb83954","modified":1605492909005},{"_id":"themes/ocean/_config.yml","hash":"30fa1ef1fc4d19175c6d3c621083bd4809ccb80c","modified":1605497476042},{"_id":"themes/ocean/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1605492908988},{"_id":"themes/ocean/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1605492908985},{"_id":"themes/ocean/README.md","hash":"8bb589206c1fee1b055b77f9dc7f26ccdf269ddc","modified":1605492908985},{"_id":"themes/ocean/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1605492908987},{"_id":"themes/ocean/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1605492908988},{"_id":"themes/ocean/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1605492908987},{"_id":"themes/ocean/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1605492908987},{"_id":"themes/ocean/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1605492908988},{"_id":"themes/ocean/languages/zh-CN.yml","hash":"efc6082929f58e20a8fe8049c3339d37506b2e43","modified":1605492908990},{"_id":"themes/ocean/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1605492908989},{"_id":"themes/ocean/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1605492908989},{"_id":"themes/ocean/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1605492908990},{"_id":"themes/ocean/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1605492908990},{"_id":"themes/ocean/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1605492908991},{"_id":"themes/ocean/layout/categories.ejs","hash":"816eb8af652e2db2086e9e4413e523ff72129451","modified":1605492909002},{"_id":"themes/ocean/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1605492909002},{"_id":"themes/ocean/layout/layout.ejs","hash":"aa24016f0a1e386967e989d2344915d430ccf77d","modified":1605492909003},{"_id":"themes/ocean/layout/index.ejs","hash":"b763ba9d747ad8aa8da194319f89a590068481ad","modified":1605492909003},{"_id":"themes/ocean/layout/page.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1605492909003},{"_id":"themes/ocean/layout/post.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1605492909004},{"_id":"themes/ocean/layout/tags.ejs","hash":"e7c9f93c6f7041a7d2aa95e85cc131b22aa426b7","modified":1605492909005},{"_id":"themes/ocean/source/robots.txt","hash":"ef99fd68ba4e75f45511c7a20359543b74e5814d","modified":1605492909113},{"_id":"themes/ocean/source/404.html","hash":"5110b5b2505a01ef1e5d98c8d35071e11c13af9f","modified":1605492909009},{"_id":"themes/ocean/layout/_partial/archive-post.ejs","hash":"6b3e77cdbf8271c2a22b839608cccaa651f84e93","modified":1605492908992},{"_id":"themes/ocean/layout/_partial/after-footer.ejs","hash":"4b82796c9d1385bcd93588f9d25c42fbd04e7592","modified":1605492908992},{"_id":"themes/ocean/source/favicon.ico","hash":"5c23ec874326c54a688dd0110aac25ab1bfa4162","modified":1605492909030},{"_id":"themes/ocean/layout/_partial/article.ejs","hash":"49f05656c1a1433513a067d37b2f63ec73bd6ad2","modified":1605492908993},{"_id":"themes/ocean/layout/_partial/archive.ejs","hash":"bce8471d97bfdd0333b77f591c71ba6eb06c0f42","modified":1605492908992},{"_id":"themes/ocean/layout/_partial/head.ejs","hash":"86f5d63cd2118ea719a50b6a5131f7536c2d4662","modified":1605492908994},{"_id":"themes/ocean/layout/_partial/footer.ejs","hash":"8494834bbfc4af859e579ba3ad339fe69f1076d7","modified":1605492908993},{"_id":"themes/ocean/layout/_partial/totop.ejs","hash":"3ba945ca770b0f0fd74eebb2e209ffc95b2f4877","modified":1605492909001},{"_id":"themes/ocean/source/css/404.styl","hash":"31e772e911b83153513c80e4462926c77444b465","modified":1605492909010},{"_id":"themes/ocean/layout/_partial/sidebar.ejs","hash":"db12b1c1fe69cc529e7206fa71f4eb969b138a0d","modified":1605492909000},{"_id":"themes/ocean/layout/_partial/ocean.ejs","hash":"ea84e6d574f411da1be89e717fc8dde6e4df6462","modified":1605492908994},{"_id":"themes/ocean/source/css/_feathericon.styl","hash":"537e194b6f619d121964243bb2a05ff26d6a1574","modified":1605492909011},{"_id":"themes/ocean/source/css/_extend.styl","hash":"4caa91f005ae9e947b545ce120ed9bc3176e41c1","modified":1605492909010},{"_id":"themes/ocean/source/css/_mixins.styl","hash":"e4804d78ded3714495f8ac9cebdbd2871ed97549","modified":1605492909011},{"_id":"themes/ocean/source/css/_normalize.styl","hash":"df9ca719f651c45a88ab4d6afa6d29edf51aeba9","modified":1605492909012},{"_id":"themes/ocean/source/css/_variables.styl","hash":"9f606a9290f0fe59a7e6995f1ad619ec07c1742f","modified":1605492909023},{"_id":"themes/ocean/source/css/style.styl","hash":"be2bf1ea0470ba4b6c42f5649cfcd39d28b1adaa","modified":1605492909027},{"_id":"themes/ocean/source/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1605492909028},{"_id":"themes/ocean/source/images/hexo-inverted.svg","hash":"5f3b9981523bbec59669b6ff138b1e327d17dcd6","modified":1605492909032},{"_id":"themes/ocean/source/images/hexo.svg","hash":"35df818edc1b34e4172e39d6e1989f04a4addf78","modified":1605492909032},{"_id":"themes/ocean/source/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1605492909108},{"_id":"themes/ocean/source/js/lazyload.min.js","hash":"d9bc50752cd7e331dbd0a833386838397c9a079f","modified":1605492909110},{"_id":"themes/ocean/source/js/jquery.justifiedGallery.min.js","hash":"e628c5caefa53b09675efed2faa1c8ff04bb4d5f","modified":1605492909110},{"_id":"themes/ocean/source/js/ocean.js","hash":"6dde3f5fc5bcba729c1a0cfbbce92815cc23538e","modified":1605492909111},{"_id":"themes/ocean/layout/_partial/post/albums.ejs","hash":"9af65ea540bc9af0ef5deed65c2dd24ffa96da41","modified":1605492908995},{"_id":"themes/ocean/layout/_partial/post/busuanzi.ejs","hash":"7172f1126aec263fc408b3bb710f3f0f6fae9063","modified":1605492908995},{"_id":"themes/ocean/layout/_partial/post/category.ejs","hash":"89cb32e8d98bad81d3ef33377212e9b253699d3d","modified":1605492908996},{"_id":"themes/ocean/source/js/search.js","hash":"45cc4cd34bd8700a7e238216b63ae2ad94220164","modified":1605492909112},{"_id":"themes/ocean/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1605492909113},{"_id":"themes/ocean/source/js/pace.min.js","hash":"64759f14e0f92d62df57eb752f1745a16aba93ce","modified":1605492909112},{"_id":"themes/ocean/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1605492908996},{"_id":"themes/ocean/layout/_partial/post/nav.ejs","hash":"e87ef17cca20225120b357cecef7b8aab91b3754","modified":1605492908998},{"_id":"themes/ocean/layout/_partial/post/gallery.ejs","hash":"6f78a49edc91f230b0a838c77630e9671d8d6089","modified":1605492908996},{"_id":"themes/ocean/layout/_partial/post/justifiedGallery.ejs","hash":"1891e345b43866c906bee529570147709bf193dc","modified":1605492908997},{"_id":"themes/ocean/layout/_partial/post/gitalk.ejs","hash":"6847735ec0397705c8125d76d6e872b1c2f36ea2","modified":1605492908997},{"_id":"themes/ocean/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1605492908999},{"_id":"themes/ocean/layout/_partial/post/search.ejs","hash":"47c818c236b063d6ce0c41e0824f9f10a3521414","modified":1605492908998},{"_id":"themes/ocean/layout/_partial/post/title.ejs","hash":"e9ab9f9f6f58d8e39ee10b6beceefdacebc3c44d","modified":1605492908999},{"_id":"themes/ocean/layout/_partial/post/tocbot.ejs","hash":"cab48cd323fa664027e88e491c7b5dde9494f78e","modified":1605492908999},{"_id":"themes/ocean/layout/_partial/post/valine.ejs","hash":"233ec49910c198c76c8a43758c0d7e25a9141481","modified":1605492909000},{"_id":"themes/ocean/layout/_partial/post/topping.ejs","hash":"7a356677887fc41d9d92de5dbea85f5649c4b440","modified":1605492909000},{"_id":"themes/ocean/source/css/_partial/archive.styl","hash":"ed715125dbdddbd38e1592782c8a0508715f544b","modified":1605492909014},{"_id":"themes/ocean/source/css/_partial/albums.styl","hash":"5802253789028a4d9dac474168fc7132045e72ff","modified":1605492909013},{"_id":"themes/ocean/source/css/_partial/apple.styl","hash":"333f9e59dc6625c4dee126a1c1a9c25ce9292655","modified":1605492909014},{"_id":"themes/ocean/source/css/_partial/article.styl","hash":"b3a55791035889f7dfbb3ef2ab7191f9c660cb2d","modified":1605492909015},{"_id":"themes/ocean/source/css/_partial/articles.styl","hash":"92da71c704ae6f69704211a124bd72c23e4069a4","modified":1605492909015},{"_id":"themes/ocean/source/css/_partial/float.styl","hash":"b1abfdfd05e74745484f7e6d043ef2842b3f6b41","modified":1605492909016},{"_id":"themes/ocean/source/css/_partial/categories.styl","hash":"2d5144932a9a396a171f80ea8a5b42cdb95c590d","modified":1605492909015},{"_id":"themes/ocean/source/css/_partial/gallery.styl","hash":"f5eae1b0030cfd97f1646844c9d3f692dbb38946","modified":1605492909017},{"_id":"themes/ocean/source/css/_partial/footer.styl","hash":"ee5a84861cdecbc61f63c897eb43c872e4a8c778","modified":1605492909017},{"_id":"themes/ocean/source/css/_partial/gitalk.styl","hash":"0678e8b330daea56fa30d14e97de73289a7d6f22","modified":1605492909017},{"_id":"themes/ocean/source/css/_partial/lists.styl","hash":"e75bbb6462166b88bde8c03cacdd2d61d2bdea29","modified":1605492909019},{"_id":"themes/ocean/source/css/_partial/mobile.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1605492909019},{"_id":"themes/ocean/source/css/_partial/justifiedGallery.styl","hash":"6d354099d27254bfe38cdc6b1baaae3b09a665f4","modified":1605492909018},{"_id":"themes/ocean/source/css/_partial/highlight.styl","hash":"ec817f8699d0402d2d73c923588eda1971fec9d1","modified":1605492909018},{"_id":"themes/ocean/source/css/_partial/pace.styl","hash":"da489a56e05903999c297c21b5c005570a2220e2","modified":1605492909021},{"_id":"themes/ocean/source/css/_partial/navbar.styl","hash":"bac5dd76d9a643285be31c4f54de04599688d1e3","modified":1605492909020},{"_id":"themes/ocean/source/css/_partial/layou.styl","hash":"09e88bdcf3eef4cace7e48db44d3b0784131927d","modified":1605492909018},{"_id":"themes/ocean/source/css/_partial/sidebar.styl","hash":"cdc7bea47a768b18991decde0d38c554399621ee","modified":1605492909021},{"_id":"themes/ocean/source/css/_partial/tag.styl","hash":"30d24f8633ac0f7c5c31e5fc60b070c54174ed9b","modified":1605492909022},{"_id":"themes/ocean/source/css/_partial/totop.styl","hash":"1cffde8564f8801a571ff2253e63cfb5db6687f5","modified":1605492909023},{"_id":"themes/ocean/source/css/_partial/ocean.styl","hash":"0ca6bf20e20f7d35d12c008a05faefd35ac1fa46","modified":1605492909020},{"_id":"themes/ocean/source/css/_partial/valine.styl","hash":"f00d3136bfab1bff406d2465ed019f24ed4b881b","modified":1605492909023},{"_id":"themes/ocean/source/css/_partial/search.styl","hash":"1070b0139c91d0def736ea182cdc884b927a9d19","modified":1605492909021},{"_id":"themes/ocean/source/css/_partial/tocbot.styl","hash":"dcc0d9acff07a91c0f8d8c273bc030e16e84bc12","modified":1605492909022},{"_id":"themes/ocean/source/css/feathericon/feathericon.eot","hash":"e2a01ae6f849841bc7a9fd21e5b7b450f1ded19b","modified":1605492909024},{"_id":"themes/ocean/source/css/feathericon/feathericon.woff","hash":"d22fe861e47afd92969ab46c7cbb7ea9c225aaf8","modified":1605492909027},{"_id":"themes/ocean/source/css/feathericon/feathericon.ttf","hash":"d0d80c3c960d7d45e6bd7fa428d8a6a8c8245b2d","modified":1605492909026},{"_id":"themes/ocean/source/css/feathericon/feathericon.woff2","hash":"2c11c45331d914ee38ad42ccf966132a508b5596","modified":1605492909027},{"_id":"themes/ocean/source/images/ocean/overlay-hero.png","hash":"92481a1848c35be96a693af11f77265323a7c189","modified":1605492909108},{"_id":"themes/ocean/source/fancybox/jquery.fancybox.min.js","hash":"f270afe2322da504c90d0bd9497d27725dac7bde","modified":1605492909029},{"_id":"themes/ocean/source/js/jquery-2.0.3.min.js","hash":"fecf3b222004a4d9d5c5f962b81344754673c7c9","modified":1605492909109},{"_id":"themes/ocean/source/css/feathericon/feathericon.svg","hash":"c868a01325d16441a50a94a13c623100a94a3a5c","modified":1605492909025},{"_id":"themes/ocean/screenshots/hexo-theme-ocean.jpg","hash":"13b5045d2120cac2f68849757f5e0af08938b7c6","modified":1605492909008},{"_id":"themes/ocean/source/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1605492909032},{"_id":"themes/ocean/source/images/ocean/ocean.ogv","hash":"9c6b5d6b0544472cee39f5eafac2d5cbba5fd86b","modified":1605492909070},{"_id":"themes/ocean/source/images/ocean/ocean.png","hash":"8245d07f812625d19b48ad2d00f8191f2aa4d304","modified":1605492909082},{"_id":"themes/ocean/source/images/ocean/ocean.webm","hash":"65aa2b6483e0151611899e31571057334c60d9e4","modified":1605492909106},{"_id":"themes/ocean/source/images/ocean/ocean.mp4","hash":"1e89cac2d652005d9dafd3ecb4dd460a8ff6d6af","modified":1605492909064},{"_id":"public/atom.xml","hash":"4e02194fdfe6b6ace2b5712f09a0ee81f8da8d0f","modified":1605497484568},{"_id":"public/search.xml","hash":"891b72a7b350999c2ede80a719f44dea0a42ca8f","modified":1605497484568},{"_id":"public/articles/2020/08/27/1598522167215.html","hash":"7dd26ce09a714aa20e77e1f5c79e72606c56b72a","modified":1605497484568},{"_id":"public/articles/2020/08/12/1597218334271.html","hash":"27f74f25b02d86555c2ac7865f4535054fef55b4","modified":1605497484568},{"_id":"public/articles/2020/08/04/1596512458890.html","hash":"795167f0cf5e5111bd00a0da4870e51f20814887","modified":1605497484568},{"_id":"public/articles/2020/08/04/1596509366225.html","hash":"6558b84a73e5456adc73f02ea015a6bda5dd7aeb","modified":1605497484568},{"_id":"public/articles/2020/08/03/1596442518677.html","hash":"54edbb2b487f218e7f35729924195ff4bdcefc24","modified":1605497484568},{"_id":"public/articles/2020/07/24/1595584844339.html","hash":"bb41a29f964daf12df498027542931e1f0d11671","modified":1605497484568},{"_id":"public/articles/2020/07/24/1595577454676.html","hash":"1128786e213d74445a72c32632e2ddb3d4500b98","modified":1605497484568},{"_id":"public/articles/2020/07/16/1594914341041.html","hash":"974b2b6632cd9efcaf1c4d851900f9ce38d826c2","modified":1605497484568},{"_id":"public/articles/2020/04/22/1587541701093.html","hash":"2311fd2dd2c20243caae4c3486f3cde9e645a3c6","modified":1605497484568},{"_id":"public/articles/2020/04/16/1587017727206.html","hash":"ed764bdca419680f2adc7680e02ef85629efb9ec","modified":1605497484568},{"_id":"public/my-github-repos","hash":"cb7ee3218ffbfbf0bf4b2c55b87d08ff2859561c","modified":1605497484568},{"_id":"public/articles/2020/03/17/1584413384830.html","hash":"f4c3643737785ce8136deaa904732cf3db4891d0","modified":1605497484568},{"_id":"public/articles/2020/03/11/1583919217986.html","hash":"7d8d1e5926fed2fe204153a6cf89e50fe397df97","modified":1605497484568},{"_id":"public/articles/2019/12/30/1577691418354.html","hash":"f6a7d29f4c7cadf9b03a7391ea408b8fc2de65be","modified":1605497484568},{"_id":"public/articles/2019/11/21/1574332517065.html","hash":"940779a7d685bedf55e4fbc4bddef882f2f48ede","modified":1605497484568},{"_id":"public/articles/2019/11/08/1573185041865.html","hash":"fcd34f34434f174eb23929e3d48dabcb3e60fa2e","modified":1605497484568},{"_id":"public/articles/2019/10/31/1572491704006.html","hash":"3d2d8621d5a7fc943e480b2349283869ee44ae6d","modified":1605497484568},{"_id":"public/articles/2019/10/29/1572338620193.html","hash":"8883344868d4fcbc1a2100d213b2a2e0588f194b","modified":1605497484568},{"_id":"public/articles/2019/10/29/1572337593869.html","hash":"315c1c151fa0e2f1933b3061fd1e943a0e05f27e","modified":1605497484568},{"_id":"public/articles/2019/10/29/1572336502745.html","hash":"94023bbc7e8478f2da84386e118a571ef635e97a","modified":1605497484568},{"_id":"public/archives/index.html","hash":"5431b03d96e931ecbd03a3b97c2c889e614caf98","modified":1605497484568},{"_id":"public/archives/page/2/index.html","hash":"c5f70bb0604cf2af9fe2dae127b8772beef5309c","modified":1605497484568},{"_id":"public/archives/page/3/index.html","hash":"51671f2144dce536903d2d4341764ce1674b2a05","modified":1605497484568},{"_id":"public/archives/2019/index.html","hash":"a9f1a63f6fb576c7d06862ee243d486621c521bb","modified":1605497484568},{"_id":"public/archives/2019/10/index.html","hash":"78efbeaa11c39e3b9af4ea1c83b570b40f7e8a61","modified":1605497484568},{"_id":"public/archives/2019/12/index.html","hash":"52ff702aa34b8af7d5e3cfa41095df02ddbe4912","modified":1605497484568},{"_id":"public/archives/2020/index.html","hash":"086c0d4a3be5681321718177d18a55d5ad3ab58c","modified":1605497484568},{"_id":"public/archives/2019/11/index.html","hash":"00f7f0e501861b6c6974f22cf3af0aac622b922d","modified":1605497484568},{"_id":"public/archives/2020/page/2/index.html","hash":"d606e5e3f9c609b365da405ad6ae877b3cc07abc","modified":1605497484568},{"_id":"public/archives/2020/03/index.html","hash":"a5af1ae38e243010f142d7e838ee0ddab23e3dfa","modified":1605497484568},{"_id":"public/articles/2020/04/20/1587390691737.html","hash":"1ec3a45e981dff28918d4b4032087f34edddfc51","modified":1605497484568},{"_id":"public/articles/2020/04/14/1586834851714.html","hash":"1d8e2fe4a591cc69a45e1bbc58f496965a5c58c5","modified":1605497484568},{"_id":"public/articles/2020/03/17/1584424890414.html","hash":"1461f0cfc5c3e30ce2405949abd4ee945a98afcc","modified":1605497484568},{"_id":"public/articles/2020/03/03/1583207015907.html","hash":"7acf43a1a597286fd239f1ce94c1cf82736fea16","modified":1605497484568},{"_id":"public/archives/2020/05/index.html","hash":"55d292983cbea7bfc89c6807c1af236bd6defa3c","modified":1605497484568},{"_id":"public/archives/2020/04/index.html","hash":"8465be61e5102d2e0f794ee90d6d44465e40946b","modified":1605497484568},{"_id":"public/archives/2020/07/index.html","hash":"d8ac29f018369fcd2f70bcedb0fc81012b1153d6","modified":1605497484568},{"_id":"public/archives/2020/08/index.html","hash":"34aa137647baafe7747533f4a07cf3210e7d8524","modified":1605497484568},{"_id":"public/page/3/index.html","hash":"9a8e06e9e30f2eb8873220a78ac172a65bee9484","modified":1605497484568},{"_id":"public/tags/mysql/index.html","hash":"f921e3b69cd02631d7e7363df42591e9ac0763b3","modified":1605497484568},{"_id":"public/tags/nohup/index.html","hash":"35b22b9db7038b0edb9b093ac3ef58116845f80e","modified":1605497484568},{"_id":"public/tags/linux/index.html","hash":"d1464daa1d91ba65afe3776bcbc57b1855337716","modified":1605497484568},{"_id":"public/tags/redis/index.html","hash":"9291d640c5e119dabc994284ed3b837d8de9f178","modified":1605497484568},{"_id":"public/tags/RabbitMQ/index.html","hash":"e3d12482dfc8587f0658f9ee4f8c3a2977b87618","modified":1605497484568},{"_id":"public/tags/PHP/index.html","hash":"08da1631d2e0af9136f431820d91ef9a7c0c00f8","modified":1605497484568},{"_id":"public/tags/PHP/page/2/index.html","hash":"ea4a622f7244c2e350f63651aa5962946b97270f","modified":1605497484568},{"_id":"public/tags/工具/index.html","hash":"fc2cf4d53974e9586617684cbb02dee500ba4cd6","modified":1605497484568},{"_id":"public/tags/Yii/index.html","hash":"a44b595c016a21c1f27eea74db393f0760e9cb50","modified":1605497484568},{"_id":"public/tags/github/index.html","hash":"c2d28531b21a4df318a98220651fa01d3b3f7082","modified":1605497484568},{"_id":"public/tags/JSDelivr/index.html","hash":"af8f130fbcf1d77c47fd3e399d7f5c0b4c0323f0","modified":1605497484568},{"_id":"public/tags/tmux/index.html","hash":"299061a1bf4cf37051e23f35a8113df29cca4720","modified":1605497484568},{"_id":"public/tags/运维/index.html","hash":"5055c8b818445b88ae6b933570f3ca4ab9552e2e","modified":1605497484568},{"_id":"public/tags/算法/index.html","hash":"97d875a170ed00d20654e716cb1143ba8b372555","modified":1605497484568},{"_id":"public/tags/面试/index.html","hash":"4d4284aa77c944255315db8d34d65ec59b00b78f","modified":1605497484568},{"_id":"public/tags/转载/index.html","hash":"420d4cfbe4c757a3eb02f765275f2ea4bdff0a35","modified":1605497484568},{"_id":"public/tags/开源/index.html","hash":"4e3cb33329cd6b2d3b1e8772f61c9615d781719c","modified":1605497484568},{"_id":"public/tags/缓存/index.html","hash":"9b23b3183ffc5fe79bc034a7f21c230f55262211","modified":1605497484568},{"_id":"public/tags/CentOS7/index.html","hash":"c7f2bdcbd974e53b38f76b4db5ceebff6897f36b","modified":1605497484568},{"_id":"public/tags/GitHub/index.html","hash":"3c61b4be34453ed6e67941fc3c304f813bd04123","modified":1605497484568},{"_id":"public/tags/毫秒级伪异步/index.html","hash":"d1f5ecb942c2fdfc056663b0c215ffa0bce3d904","modified":1605497484568},{"_id":"public/tags/CURL/index.html","hash":"e4912827d1dfd3e80c8f5268a6b585b2adaa26e8","modified":1605497484568},{"_id":"public/tags/python/index.html","hash":"1100c27a5b42ebf94400f61241bc2d113ec3ce72","modified":1605497484568},{"_id":"public/tags/wamp/index.html","hash":"d97529f7934f823cc2c72408e29630f2aa841d5b","modified":1605497484568},{"_id":"public/tags/flask/index.html","hash":"cd8cf2dd24c51f8d9ebb88e8c02101f1239e6002","modified":1605497484568},{"_id":"public/tags/ssl/index.html","hash":"e14155e1a543c1ee5016446addf9a6f72421a566","modified":1605497484568},{"_id":"public/page/2/index.html","hash":"7730b118a2a4aa1e0a121095859d2c72d75822c3","modified":1605497484568},{"_id":"public/index.html","hash":"aaa0b7093b9e8176548967b0637ebdb72725d3a0","modified":1605497484568},{"_id":"public/robots.txt","hash":"ef99fd68ba4e75f45511c7a20359543b74e5814d","modified":1605497484568},{"_id":"public/favicon.ico","hash":"5c23ec874326c54a688dd0110aac25ab1bfa4162","modified":1605497484568},{"_id":"public/images/hexo-inverted.svg","hash":"5f3b9981523bbec59669b6ff138b1e327d17dcd6","modified":1605497484568},{"_id":"public/images/hexo.svg","hash":"35df818edc1b34e4172e39d6e1989f04a4addf78","modified":1605497484568},{"_id":"public/css/feathericon/feathericon.eot","hash":"e2a01ae6f849841bc7a9fd21e5b7b450f1ded19b","modified":1605497484568},{"_id":"public/css/feathericon/feathericon.woff","hash":"d22fe861e47afd92969ab46c7cbb7ea9c225aaf8","modified":1605497484568},{"_id":"public/css/feathericon/feathericon.ttf","hash":"d0d80c3c960d7d45e6bd7fa428d8a6a8c8245b2d","modified":1605497484568},{"_id":"public/css/feathericon/feathericon.woff2","hash":"2c11c45331d914ee38ad42ccf966132a508b5596","modified":1605497484568},{"_id":"public/images/ocean/overlay-hero.png","hash":"92481a1848c35be96a693af11f77265323a7c189","modified":1605497484568},{"_id":"public/css/feathericon/feathericon.svg","hash":"c868a01325d16441a50a94a13c623100a94a3a5c","modified":1605497484568},{"_id":"public/404.html","hash":"788929fab7b99dd74575399f41cddae6f63ce1f4","modified":1605497484568},{"_id":"public/css/404.css","hash":"952f9d1b869886a2940768fb7d1fd891ccea29fa","modified":1605497484568},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1605497484568},{"_id":"public/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1605497484568},{"_id":"public/js/lazyload.min.js","hash":"b801b3946fb9b72e03512c0663458e140e1fa77b","modified":1605497484568},{"_id":"public/js/ocean.js","hash":"acac20176cf22a84f889894d7482dc9207076f12","modified":1605497484568},{"_id":"public/js/pace.min.js","hash":"d32ab818e0f97d3b0c80f5631fc23d8a0cb52795","modified":1605497484568},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1605497484568},{"_id":"public/js/search.js","hash":"3e66ea259eff66e36e240b695c4753c5d4454bbb","modified":1605497484568},{"_id":"public/css/style.css","hash":"179a136c5b2d172cc74fa71533dd84541ad34ee1","modified":1605497484568},{"_id":"public/js/jquery.justifiedGallery.min.js","hash":"73b9373cd80bdbf77e711818095f3f120a019547","modified":1605497484568},{"_id":"public/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1605497484568},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"600c86071c2b5198cfa2c052dd90b78920f62b45","modified":1605497484568},{"_id":"public/js/jquery-2.0.3.min.js","hash":"ab131f0b13a89f24543fadbf496b1c813d417c02","modified":1605497484568},{"_id":"public/images/ocean/ocean.ogv","hash":"9c6b5d6b0544472cee39f5eafac2d5cbba5fd86b","modified":1605497484568},{"_id":"public/images/ocean/ocean.png","hash":"8245d07f812625d19b48ad2d00f8191f2aa4d304","modified":1605497484568},{"_id":"public/images/ocean/ocean.webm","hash":"65aa2b6483e0151611899e31571057334c60d9e4","modified":1605497484568},{"_id":"public/images/ocean/ocean.mp4","hash":"1e89cac2d652005d9dafd3ecb4dd460a8ff6d6af","modified":1605497484568}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"mysql 计算两个时间的差","date":"2019-10-29T08:43:40.000Z","updated":"2019-12-29T14:34:01.000Z","_content":"![](https://img.hacpai.com/bing/20171210.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n#### example：\n\tTIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS '开户时间',\n\n - 时间差函数：TIMESTAMPDIFF()\n\n##### 返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；\n\n##### 返回值可以是秒，分……：\n\tSECOND   -->秒 \n\tMINUTE     -->分钟 \n\tHOUR       -->小时\n\tDAY          -->天 \n\tMONTH     -->月 \n\tYEAR        -->年\n\n- PS：如果时间格式是（'Y-m-d H:i：s'）则不需要用FROM_UNIXTIME()函数，如果是时间戳则需要转换时间格式。\n","source":"_posts/201910/mysql计算两个时间的差.md","raw":"title: mysql 计算两个时间的差\ndate: '2019-10-29 16:43:40'\nupdated: '2019-12-29 22:34:01'\ntags: [mysql]\npermalink: /articles/2019/10/29/1572338620193.html\n---\n![](https://img.hacpai.com/bing/20171210.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n#### example：\n\tTIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS '开户时间',\n\n - 时间差函数：TIMESTAMPDIFF()\n\n##### 返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；\n\n##### 返回值可以是秒，分……：\n\tSECOND   -->秒 \n\tMINUTE     -->分钟 \n\tHOUR       -->小时\n\tDAY          -->天 \n\tMONTH     -->月 \n\tYEAR        -->年\n\n- PS：如果时间格式是（'Y-m-d H:i：s'）则不需要用FROM_UNIXTIME()函数，如果是时间戳则需要转换时间格式。\n","slug":"201910/mysql计算两个时间的差","published":1,"__permalink":"/articles/2019/10/29/1572338620193.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzuh0000ogfd76c6hlfi","content":"<p><img src=\"https://img.hacpai.com/bing/20171210.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h4 id=\"example：\"><a href=\"#example：\" class=\"headerlink\" title=\"example：\"></a>example：</h4><pre><code>TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS &#39;开户时间&#39;,</code></pre>\n<ul>\n<li>时间差函数：TIMESTAMPDIFF()</li>\n</ul>\n<h5 id=\"返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；\"><a href=\"#返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；\" class=\"headerlink\" title=\"返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；\"></a>返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；</h5><h5 id=\"返回值可以是秒，分……：\"><a href=\"#返回值可以是秒，分……：\" class=\"headerlink\" title=\"返回值可以是秒，分……：\"></a>返回值可以是秒，分……：</h5><pre><code>SECOND   --&gt;秒 \nMINUTE     --&gt;分钟 \nHOUR       --&gt;小时\nDAY          --&gt;天 \nMONTH     --&gt;月 \nYEAR        --&gt;年</code></pre>\n<ul>\n<li>PS：如果时间格式是（’Y-m-d H:i：s’）则不需要用FROM_UNIXTIME()函数，如果是时间戳则需要转换时间格式。</li>\n</ul>\n","site":{"data":{}},"excerpt":"example：\nTIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS '开户时间',\n\n * 时间差函数：TIMESTAMPDIFF()\n\n返回值是 AccountTime (时间戳) 减去 SourceTime(时间戳) 的时间差；\n返回值可以是秒，分……：\nSECOND   -->秒 \nMINUTE     -->分钟 \nHOUR       -->小时\nDAY          -->天 \nMONTH     -->月 \nYEAR        -->年\n\n * PS：如果时间格","more":"<p><img src=\"https://img.hacpai.com/bing/20171210.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h4 id=\"example：\"><a href=\"#example：\" class=\"headerlink\" title=\"example：\"></a>example：</h4><pre><code>TIMESTAMPDIFF(MINUTE, FROM_UNIXTIME(SourceTime) , FROM_UNIXTIME(AccountTime)) AS &#39;开户时间&#39;,</code></pre>\n<ul>\n<li>时间差函数：TIMESTAMPDIFF()</li>\n</ul>\n<h5 id=\"返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；\"><a href=\"#返回值是-AccountTime-时间戳-减去-SourceTime-时间戳-的时间差；\" class=\"headerlink\" title=\"返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；\"></a>返回值是 AccountTime (时间戳)  减去  SourceTime(时间戳) 的时间差；</h5><h5 id=\"返回值可以是秒，分……：\"><a href=\"#返回值可以是秒，分……：\" class=\"headerlink\" title=\"返回值可以是秒，分……：\"></a>返回值可以是秒，分……：</h5><pre><code>SECOND   --&gt;秒 \nMINUTE     --&gt;分钟 \nHOUR       --&gt;小时\nDAY          --&gt;天 \nMONTH     --&gt;月 \nYEAR        --&gt;年</code></pre>\n<ul>\n<li>PS：如果时间格式是（’Y-m-d H:i：s’）则不需要用FROM_UNIXTIME()函数，如果是时间戳则需要转换时间格式。</li>\n</ul>\n"},{"title":"nohup不输出日志文件方法","date":"2019-10-31T03:15:04.000Z","updated":"2020-08-04T04:00:46.000Z","_content":"![](https://img.hacpai.com/bing/20190222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 场景描述：\n\n###### 用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（*当时的磁盘是 100G，全部写满*），导致别的程序无法正常运行。（*如启动：Jenkins 等*）\n###### 那么如何让nohup命令不产生大量的日志文件呢\n\n## 解决思路\n\n既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？\n查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。\n\n\t/dev/null\n\n**/dev/null**  ： 在类Unix系统中，/dev/null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。  \n在程序员行话，尤其是Unix系统中，/dev/null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。\n\n## 操作示例\n\t nohup java -cp WEB-INF/lib/*:WEB-INF/classes org.b3log.solo.Starter >/dev/null 2>&1 &\n\n- *>/dev/null* 将信息输出到/dev/null \n-  *2>&1* 将错误信息重定向到标准输出\n- 最后一个&符号，表示程序在后台运行\n\n## 关于Linux的重定向\n- 0:表示标准输入\n- 1:标准输出,在一般使用时，默认的是标准输出\n- 2:标准错误信息输出\n\n## 补充\n这样问题就得到了解决。\n如果大神们有更好解决方案可以在写在评论中\n\n\n\n\n\n\n","source":"_posts/201910/nohup不输出日志文件方法.md","raw":"title: nohup不输出日志文件方法\ndate: '2019-10-31 11:15:04'\nupdated: '2020-08-04 12:00:46'\ntags: [nohup, linux]\npermalink: /articles/2019/10/31/1572491704006.html\n---\n![](https://img.hacpai.com/bing/20190222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 场景描述：\n\n###### 用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（*当时的磁盘是 100G，全部写满*），导致别的程序无法正常运行。（*如启动：Jenkins 等*）\n###### 那么如何让nohup命令不产生大量的日志文件呢\n\n## 解决思路\n\n既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？\n查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。\n\n\t/dev/null\n\n**/dev/null**  ： 在类Unix系统中，/dev/null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。  \n在程序员行话，尤其是Unix系统中，/dev/null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。\n\n## 操作示例\n\t nohup java -cp WEB-INF/lib/*:WEB-INF/classes org.b3log.solo.Starter >/dev/null 2>&1 &\n\n- *>/dev/null* 将信息输出到/dev/null \n-  *2>&1* 将错误信息重定向到标准输出\n- 最后一个&符号，表示程序在后台运行\n\n## 关于Linux的重定向\n- 0:表示标准输入\n- 1:标准输出,在一般使用时，默认的是标准输出\n- 2:标准错误信息输出\n\n## 补充\n这样问题就得到了解决。\n如果大神们有更好解决方案可以在写在评论中\n\n\n\n\n\n\n","slug":"201910/nohup不输出日志文件方法","published":1,"__permalink":"/articles/2019/10/31/1572491704006.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzul0001ogfd6tppb44g","content":"<p><img src=\"https://img.hacpai.com/bing/20190222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h2><h6 id=\"用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）\"><a href=\"#用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）\" class=\"headerlink\" title=\"用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是 100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins 等）\"></a>用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（<em>当时的磁盘是 100G，全部写满</em>），导致别的程序无法正常运行。（<em>如启动：Jenkins 等</em>）</h6><h6 id=\"那么如何让nohup命令不产生大量的日志文件呢\"><a href=\"#那么如何让nohup命令不产生大量的日志文件呢\" class=\"headerlink\" title=\"那么如何让nohup命令不产生大量的日志文件呢\"></a>那么如何让nohup命令不产生大量的日志文件呢</h6><h2 id=\"解决思路\"><a href=\"#解决思路\" class=\"headerlink\" title=\"解决思路\"></a>解决思路</h2><p>既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？<br>查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。</p>\n<pre><code>/dev/null</code></pre>\n<p><strong>/dev/null</strong>  ： 在类Unix系统中，/dev/null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。<br>在程序员行话，尤其是Unix系统中，/dev/null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。</p>\n<h2 id=\"操作示例\"><a href=\"#操作示例\" class=\"headerlink\" title=\"操作示例\"></a>操作示例</h2><pre><code> nohup java -cp WEB-INF/lib/*:WEB-INF/classes org.b3log.solo.Starter &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre>\n<ul>\n<li><em>&gt;/dev/null</em> 将信息输出到/dev/null </li>\n<li> <em>2&gt;&amp;1</em> 将错误信息重定向到标准输出</li>\n<li>最后一个&amp;符号，表示程序在后台运行</li>\n</ul>\n<h2 id=\"关于Linux的重定向\"><a href=\"#关于Linux的重定向\" class=\"headerlink\" title=\"关于Linux的重定向\"></a>关于Linux的重定向</h2><ul>\n<li>0:表示标准输入</li>\n<li>1:标准输出,在一般使用时，默认的是标准输出</li>\n<li>2:标准错误信息输出</li>\n</ul>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>这样问题就得到了解决。<br>如果大神们有更好解决方案可以在写在评论中</p>\n","site":{"data":{}},"excerpt":"场景描述：\n用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是 100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins 等）\n那么如何让nohup命令不产生大量的日志文件呢\n解决思路\n既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？\n查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/nul","more":"<p><img src=\"https://img.hacpai.com/bing/20190222.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h2><h6 id=\"用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）\"><a href=\"#用-nohup-启动程序时，会在当前的目录下生成-nohup-log-文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是-100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins-等）\" class=\"headerlink\" title=\"用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（当时的磁盘是 100G，全部写满），导致别的程序无法正常运行。（如启动：Jenkins 等）\"></a>用 nohup 启动程序时，会在当前的目录下生成 nohup.log 文件。这样就会在很短的时间内将磁盘全部写满（<em>当时的磁盘是 100G，全部写满</em>），导致别的程序无法正常运行。（<em>如启动：Jenkins 等</em>）</h6><h6 id=\"那么如何让nohup命令不产生大量的日志文件呢\"><a href=\"#那么如何让nohup命令不产生大量的日志文件呢\" class=\"headerlink\" title=\"那么如何让nohup命令不产生大量的日志文件呢\"></a>那么如何让nohup命令不产生大量的日志文件呢</h6><h2 id=\"解决思路\"><a href=\"#解决思路\" class=\"headerlink\" title=\"解决思路\"></a>解决思路</h2><p>既然 nohup 会输出大量的日志。那如何让 nohup 不输出日志呢？<br>查了很多的资料发现没办法让 nohup 不输出日志。但是可以 利用liunx的黑洞/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影 无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。</p>\n<pre><code>/dev/null</code></pre>\n<p><strong>/dev/null</strong>  ： 在类Unix系统中，/dev/null，或称空设备，是一个特殊的设备文件，它丢弃一切写入其中的数据（但报告写入操作成功），读取它则会立即得到一个EOF。<br>在程序员行话，尤其是Unix系统中，/dev/null 被称为位桶(bit bucket)或者黑洞(black hole)。空设备通常被用于丢弃不需要的输出流，或作为用于输入流的空文件。当你读它的时候，它会提供无限的空字符(NULL, ASCII NUL, 0x00)。</p>\n<h2 id=\"操作示例\"><a href=\"#操作示例\" class=\"headerlink\" title=\"操作示例\"></a>操作示例</h2><pre><code> nohup java -cp WEB-INF/lib/*:WEB-INF/classes org.b3log.solo.Starter &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre>\n<ul>\n<li><em>&gt;/dev/null</em> 将信息输出到/dev/null </li>\n<li> <em>2&gt;&amp;1</em> 将错误信息重定向到标准输出</li>\n<li>最后一个&amp;符号，表示程序在后台运行</li>\n</ul>\n<h2 id=\"关于Linux的重定向\"><a href=\"#关于Linux的重定向\" class=\"headerlink\" title=\"关于Linux的重定向\"></a>关于Linux的重定向</h2><ul>\n<li>0:表示标准输入</li>\n<li>1:标准输出,在一般使用时，默认的是标准输出</li>\n<li>2:标准错误信息输出</li>\n</ul>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>这样问题就得到了解决。<br>如果大神们有更好解决方案可以在写在评论中</p>\n"},{"title":"redis使用的小技巧","date":"2019-10-29T08:26:33.000Z","updated":"2019-10-29T08:29:19.000Z","_content":"![](https://img.hacpai.com/bing/20180518.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n### redis使用的小技巧\n##### 按照key批量删除某些值\n    redis-cli -h 11.11.11.100  -p 6379 -a password keys \"key*\" | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del\n - 说明 redis-cli -h 11.11.11.100   -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码\n - \"key*\" 用于前匹配到相关的key的值\n - xargs redis-cli -h 11.11.11.100  -p 6379 -a password del 执行删除操作\n \n\n* * *\n\n##### 查看redis客户端最大连接数\n###### 连接redis-cli 后执行：\n    config get maxclients\n###### 如果要修改，可到redis.conf中修改\n\n##### 查看redis当前连接数\n    info clients\n\n\n","source":"_posts/201910/redis使用的小技巧.md","raw":"title: redis使用的小技巧\ndate: '2019-10-29 16:26:33'\nupdated: '2019-10-29 16:29:19'\ntags: [redis]\npermalink: /articles/2019/10/29/1572337593869.html\n---\n![](https://img.hacpai.com/bing/20180518.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n### redis使用的小技巧\n##### 按照key批量删除某些值\n    redis-cli -h 11.11.11.100  -p 6379 -a password keys \"key*\" | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del\n - 说明 redis-cli -h 11.11.11.100   -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码\n - \"key*\" 用于前匹配到相关的key的值\n - xargs redis-cli -h 11.11.11.100  -p 6379 -a password del 执行删除操作\n \n\n* * *\n\n##### 查看redis客户端最大连接数\n###### 连接redis-cli 后执行：\n    config get maxclients\n###### 如果要修改，可到redis.conf中修改\n\n##### 查看redis当前连接数\n    info clients\n\n\n","slug":"201910/redis使用的小技巧","published":1,"__permalink":"/articles/2019/10/29/1572337593869.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzup0003ogfd3e18ggz8","content":"<p><img src=\"https://img.hacpai.com/bing/20180518.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h3 id=\"redis使用的小技巧\"><a href=\"#redis使用的小技巧\" class=\"headerlink\" title=\"redis使用的小技巧\"></a>redis使用的小技巧</h3><h5 id=\"按照key批量删除某些值\"><a href=\"#按照key批量删除某些值\" class=\"headerlink\" title=\"按照key批量删除某些值\"></a>按照key批量删除某些值</h5><pre><code>redis-cli -h 11.11.11.100  -p 6379 -a password keys &quot;key*&quot; | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del</code></pre>\n<ul>\n<li>说明 redis-cli -h 11.11.11.100   -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码</li>\n<li>“key*” 用于前匹配到相关的key的值</li>\n<li>xargs redis-cli -h 11.11.11.100  -p 6379 -a password del 执行删除操作</li>\n</ul>\n<hr>\n<h5 id=\"查看redis客户端最大连接数\"><a href=\"#查看redis客户端最大连接数\" class=\"headerlink\" title=\"查看redis客户端最大连接数\"></a>查看redis客户端最大连接数</h5><h6 id=\"连接redis-cli-后执行：\"><a href=\"#连接redis-cli-后执行：\" class=\"headerlink\" title=\"连接redis-cli 后执行：\"></a>连接redis-cli 后执行：</h6><pre><code>config get maxclients</code></pre>\n<h6 id=\"如果要修改，可到redis-conf中修改\"><a href=\"#如果要修改，可到redis-conf中修改\" class=\"headerlink\" title=\"如果要修改，可到redis.conf中修改\"></a>如果要修改，可到redis.conf中修改</h6><h5 id=\"查看redis当前连接数\"><a href=\"#查看redis当前连接数\" class=\"headerlink\" title=\"查看redis当前连接数\"></a>查看redis当前连接数</h5><pre><code>info clients</code></pre>\n","site":{"data":{}},"excerpt":"redis使用的小技巧\n按照key批量删除某些值\nredis-cli -h 11.11.11.100  -p 6379 -a password keys \"key*\" | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del\n\n * 说明 redis-cli -h 11.11.11.100 -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码\n * “key*” 用于前匹配到相关的key的值\n * xargs redis-cli -h 11.11.11.100 -p 637","more":"<p><img src=\"https://img.hacpai.com/bing/20180518.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h3 id=\"redis使用的小技巧\"><a href=\"#redis使用的小技巧\" class=\"headerlink\" title=\"redis使用的小技巧\"></a>redis使用的小技巧</h3><h5 id=\"按照key批量删除某些值\"><a href=\"#按照key批量删除某些值\" class=\"headerlink\" title=\"按照key批量删除某些值\"></a>按照key批量删除某些值</h5><pre><code>redis-cli -h 11.11.11.100  -p 6379 -a password keys &quot;key*&quot; | xargs redis-cli -h 11.11.11.100  -p 6379 -a password del</code></pre>\n<ul>\n<li>说明 redis-cli -h 11.11.11.100   -p 6379 -a password用于登陆redis客户端；-h 是ip地址， -p是端口号，-a 是登录密码</li>\n<li>“key*” 用于前匹配到相关的key的值</li>\n<li>xargs redis-cli -h 11.11.11.100  -p 6379 -a password del 执行删除操作</li>\n</ul>\n<hr>\n<h5 id=\"查看redis客户端最大连接数\"><a href=\"#查看redis客户端最大连接数\" class=\"headerlink\" title=\"查看redis客户端最大连接数\"></a>查看redis客户端最大连接数</h5><h6 id=\"连接redis-cli-后执行：\"><a href=\"#连接redis-cli-后执行：\" class=\"headerlink\" title=\"连接redis-cli 后执行：\"></a>连接redis-cli 后执行：</h6><pre><code>config get maxclients</code></pre>\n<h6 id=\"如果要修改，可到redis-conf中修改\"><a href=\"#如果要修改，可到redis-conf中修改\" class=\"headerlink\" title=\"如果要修改，可到redis.conf中修改\"></a>如果要修改，可到redis.conf中修改</h6><h5 id=\"查看redis当前连接数\"><a href=\"#查看redis当前连接数\" class=\"headerlink\" title=\"查看redis当前连接数\"></a>查看redis当前连接数</h5><pre><code>info clients</code></pre>\n"},{"title":"如何使用service redisd start 启动redis服务","date":"2019-10-29T08:08:22.000Z","updated":"2020-06-28T08:08:55.000Z","_content":"![](https://img.hacpai.com/bing/20200109.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n#### 场景描述： \n如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。\n\n\n#### 首先，cd到redis的安装目录下，再cd到util，接着执行`./install_server.sh`\n\n```\ncd /usr/local/src/redis-3.0.7/utils\n./install_server.sh\n```\n\n- 说明：该过程会选择相关的配置，一般情况下，默认的就可以了\n\n#### 然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：\n\n``````````````````````````````````````\ncd /etc/init.d/ \nmv redis_6379 redisd\n``````````````````````````````````````\n\n#### 然后，就可以启动redis服务了\n\n`````````````````````\nservice redisd start\n`````````````````````\n\n*ps：如果是想按照自己的redis.conf配置文件启动redis，就需要进入到redis的安装目录，执行redis-server加上配置文件的全路径，如：*\n\n```sh\ncd /usr/local/src/\nredis-server /path/redis.conf\n```\n","source":"_posts/201910/如何使用serviceredisdstart启动redis服务.md","raw":"title: 如何使用service redisd start 启动redis服务\ndate: '2019-10-29 16:08:22'\nupdated: '2020-06-28 16:08:55'\ntags: [redis]\npermalink: /articles/2019/10/29/1572336502745.html\n---\n![](https://img.hacpai.com/bing/20200109.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n#### 场景描述： \n如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。\n\n\n#### 首先，cd到redis的安装目录下，再cd到util，接着执行`./install_server.sh`\n\n```\ncd /usr/local/src/redis-3.0.7/utils\n./install_server.sh\n```\n\n- 说明：该过程会选择相关的配置，一般情况下，默认的就可以了\n\n#### 然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：\n\n``````````````````````````````````````\ncd /etc/init.d/ \nmv redis_6379 redisd\n``````````````````````````````````````\n\n#### 然后，就可以启动redis服务了\n\n`````````````````````\nservice redisd start\n`````````````````````\n\n*ps：如果是想按照自己的redis.conf配置文件启动redis，就需要进入到redis的安装目录，执行redis-server加上配置文件的全路径，如：*\n\n```sh\ncd /usr/local/src/\nredis-server /path/redis.conf\n```\n","slug":"201910/如何使用serviceredisdstart启动redis服务","published":1,"__permalink":"/articles/2019/10/29/1572336502745.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzuq0004ogfd3wgh9r3h","content":"<p><img src=\"https://img.hacpai.com/bing/20200109.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h4 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h4><p>如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。</p>\n<h4 id=\"首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh\"><a href=\"#首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh\" class=\"headerlink\" title=\"首先，cd到redis的安装目录下，再cd到util，接着执行./install_server.sh\"></a>首先，cd到redis的安装目录下，再cd到util，接着执行<code>./install_server.sh</code></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-3.0.7&#x2F;utils</span><br><span class=\"line\">.&#x2F;install_server.sh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>说明：该过程会选择相关的配置，一般情况下，默认的就可以了</li>\n</ul>\n<h4 id=\"然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下：\"><a href=\"#然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下：\" class=\"headerlink\" title=\"然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：\"></a>然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;etc&#x2F;init.d&#x2F; </span><br><span class=\"line\">mv redis_6379 redisd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"然后，就可以启动redis服务了\"><a href=\"#然后，就可以启动redis服务了\" class=\"headerlink\" title=\"然后，就可以启动redis服务了\"></a>然后，就可以启动redis服务了</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service redisd start</span><br></pre></td></tr></table></figure>\n\n<p><em>ps：如果是想按照自己的redis.conf配置文件启动redis，就需要进入到redis的安装目录，执行redis-server加上配置文件的全路径，如：</em></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">redis-server /path/redis.conf</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"场景描述：\n如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。\n\n首先，cd到redis的安装目录下，再cd到util，接着执行./install_server.sh\n1\n2\n\n\ncd /usr/local/src/redis-3.0.7/utils\n./install_server.sh\n\n\n *","more":"<p><img src=\"https://img.hacpai.com/bing/20200109.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h4 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h4><p>如何使用service redisd start 启动redis服务。为了方便我们习惯使用service redisd start来启动redis服务，但是很多时候却发现直接运行service redisd start 并没有成功启动redis服务。这是因为我们并没有添加redis的service。如果你也遇到这样的问题，希望这篇文章可以帮助到你。</p>\n<h4 id=\"首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh\"><a href=\"#首先，cd到redis的安装目录下，再cd到util，接着执行-install-server-sh\" class=\"headerlink\" title=\"首先，cd到redis的安装目录下，再cd到util，接着执行./install_server.sh\"></a>首先，cd到redis的安装目录下，再cd到util，接着执行<code>./install_server.sh</code></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis-3.0.7&#x2F;utils</span><br><span class=\"line\">.&#x2F;install_server.sh</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>说明：该过程会选择相关的配置，一般情况下，默认的就可以了</li>\n</ul>\n<h4 id=\"然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下：\"><a href=\"#然后修改服务名称，将原来的redis-6379更名为redisd，这样下次启动比较方便，命令如下：\" class=\"headerlink\" title=\"然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：\"></a>然后修改服务名称，将原来的redis_6379更名为redisd，这样下次启动比较方便，命令如下：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;etc&#x2F;init.d&#x2F; </span><br><span class=\"line\">mv redis_6379 redisd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"然后，就可以启动redis服务了\"><a href=\"#然后，就可以启动redis服务了\" class=\"headerlink\" title=\"然后，就可以启动redis服务了\"></a>然后，就可以启动redis服务了</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service redisd start</span><br></pre></td></tr></table></figure>\n\n<p><em>ps：如果是想按照自己的redis.conf配置文件启动redis，就需要进入到redis的安装目录，执行redis-server加上配置文件的全路径，如：</em></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">redis-server /path/redis.conf</span><br></pre></td></tr></table></figure>\n"},{"title":"RabbitMQ的安装以及对应的PHP扩展的安装","date":"2020-03-17T02:49:44.000Z","updated":"2020-03-17T02:58:50.000Z","_content":"![](https://img.hacpai.com/bing/20180610.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n记于2019-2-27\n\n###### 环境：windows 平台，PHP7.1.9\n\n## 1、安装 Erlang\n\n- 因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址[http://www.erlang.org/downloads](http://www.erlang.org/downloads)\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b1a355b3.png)\n\n- 我选择的是图中的版本，一直next即可\n\n ## 2、下载安装RabbitMQ  \n\n- 下载地址[http://www.rabbitmq.com/download.html](http://www.rabbitmq.com/download.html)\n\n- 也是一直next\n- 安装完成后并没有启动RabbitMQ，需要执行下面的操作：\n\n![image.png](https://img.hacpai.com/file/2020/03/image-3ecf633e.png)\n\n\n```shell\n rabbitmq-plugins.bat enable rabbitmq_management\n\n rabbitmq-service.bat start\n```\n\n\nPS: 2019 年 2 月 12 日添加\n\n- 如果执行 rabbitmq-plugins.bat enable rabbitmq_management 报错，并且是设置好了环境变量后依然出现这个问题：\n\n![image.png](https://img.hacpai.com/file/2020/03/image-ce381e48.png)\n\n\n\n- 那么就执行下面的命令后，在执行上面的命令\n\n![image.png](https://img.hacpai.com/file/2020/03/image-fe471b8d.png)\n\n\n```\n set ERLANG_HOME=C:\\Program Files\\erl10.2\n```\n\n- 可能会报错提示 但已经运行 这个时候执行\n```\nrabbitmq-service.bat stop\n```\n- 访问[http://localhost:15672/](http://localhost:15672/) 即可。默认的帐号：guest  密码：guest\n\n![image.png](https://img.hacpai.com/file/2020/03/image-1458e7cd.png)\n\n\n## 3、安装PHP的rabbitMQ扩展\n\n#### 下载 dll 文件 地址  [http://pecl.php.net/package/amqp](http://pecl.php.net/package/amqp)\n\n1. 先查看 PHP 版本。\n\n![image.png](https://img.hacpai.com/file/2020/03/image-51e11d34.png)\n\n2. 选择问稳定版的 dll\n\n![image.png](https://img.hacpai.com/file/2020/03/image-1cbd4339.png)\n\n 我选择的是 1.9.3 。因为 Thread Safety  enable  ,所以选择的是 TS。\n\n![image.png](https://img.hacpai.com/file/2020/03/image-ae7f0118.png)\n\n3. 下载后解压\n\n![image.png](https://img.hacpai.com/file/2020/03/image-9c95aaed.png)\n\n4. 将 php_amqp.dll 文件放在 PHP 安装目录 ext 下\n\n![image.png](https://img.hacpai.com/file/2020/03/image-6a3a5330.png)\n\n5. php.ini 里面添加\n\n```\n extension=php_amqp.dll\n```\n\n6. 将 rabbitmq.4.dll 文件放在 php/php7.1.9/目录下，并在 apach 的 httpd.conf 文件中加上一句：\n\n```\n LoadFile \"C:/wamp64/bin/php/php7.1.9/rabbitmq.4.dll\"\n```\n![image.png](https://img.hacpai.com/file/2020/03/image-861d7af8.png)\n\n7. 重启 apache 和 PHP 服务。\n\n8. 访问 phpinfo();\n\n9. 有 amqp 则安装成功\n\n![image.png](https://img.hacpai.com/file/2020/03/image-77d95e4d.png)\n\n\n\n## 4、项目中安装php-amqplib库\n\n#### 使用 composer 安装\n\n1. 项目目录下的 composer.json 文件中增加下面内容\n\n```\n{\n    \"require\": {\n    \"php-amqplib/php-amqplib\": \"^2.8\",  //增加这行\n  }\n}\n````\n2. 然后执行:\n\n```\n composer update php-amqplib/php-amqplib。\n```\n\n#### 更加方便的做法是直接执行\n\n```\ncomposer require php-amqplib/php-amqplib \n```\n便可以直接进行安装了\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b6ba5d5b.png)\n\n\n\n## 5、接下来就可以尽情的玩耍了。。。\n","source":"_posts/202003/RabbitMQ的安装以及对应的PHP扩展的安装.md","raw":"title: RabbitMQ的安装以及对应的PHP扩展的安装\ndate: '2020-03-17 10:49:44'\nupdated: '2020-03-17 10:58:50'\ntags: [RabbitMQ, PHP]\npermalink: /articles/2020/03/17/1584413384830.html\n---\n![](https://img.hacpai.com/bing/20180610.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n记于2019-2-27\n\n###### 环境：windows 平台，PHP7.1.9\n\n## 1、安装 Erlang\n\n- 因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址[http://www.erlang.org/downloads](http://www.erlang.org/downloads)\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b1a355b3.png)\n\n- 我选择的是图中的版本，一直next即可\n\n ## 2、下载安装RabbitMQ  \n\n- 下载地址[http://www.rabbitmq.com/download.html](http://www.rabbitmq.com/download.html)\n\n- 也是一直next\n- 安装完成后并没有启动RabbitMQ，需要执行下面的操作：\n\n![image.png](https://img.hacpai.com/file/2020/03/image-3ecf633e.png)\n\n\n```shell\n rabbitmq-plugins.bat enable rabbitmq_management\n\n rabbitmq-service.bat start\n```\n\n\nPS: 2019 年 2 月 12 日添加\n\n- 如果执行 rabbitmq-plugins.bat enable rabbitmq_management 报错，并且是设置好了环境变量后依然出现这个问题：\n\n![image.png](https://img.hacpai.com/file/2020/03/image-ce381e48.png)\n\n\n\n- 那么就执行下面的命令后，在执行上面的命令\n\n![image.png](https://img.hacpai.com/file/2020/03/image-fe471b8d.png)\n\n\n```\n set ERLANG_HOME=C:\\Program Files\\erl10.2\n```\n\n- 可能会报错提示 但已经运行 这个时候执行\n```\nrabbitmq-service.bat stop\n```\n- 访问[http://localhost:15672/](http://localhost:15672/) 即可。默认的帐号：guest  密码：guest\n\n![image.png](https://img.hacpai.com/file/2020/03/image-1458e7cd.png)\n\n\n## 3、安装PHP的rabbitMQ扩展\n\n#### 下载 dll 文件 地址  [http://pecl.php.net/package/amqp](http://pecl.php.net/package/amqp)\n\n1. 先查看 PHP 版本。\n\n![image.png](https://img.hacpai.com/file/2020/03/image-51e11d34.png)\n\n2. 选择问稳定版的 dll\n\n![image.png](https://img.hacpai.com/file/2020/03/image-1cbd4339.png)\n\n 我选择的是 1.9.3 。因为 Thread Safety  enable  ,所以选择的是 TS。\n\n![image.png](https://img.hacpai.com/file/2020/03/image-ae7f0118.png)\n\n3. 下载后解压\n\n![image.png](https://img.hacpai.com/file/2020/03/image-9c95aaed.png)\n\n4. 将 php_amqp.dll 文件放在 PHP 安装目录 ext 下\n\n![image.png](https://img.hacpai.com/file/2020/03/image-6a3a5330.png)\n\n5. php.ini 里面添加\n\n```\n extension=php_amqp.dll\n```\n\n6. 将 rabbitmq.4.dll 文件放在 php/php7.1.9/目录下，并在 apach 的 httpd.conf 文件中加上一句：\n\n```\n LoadFile \"C:/wamp64/bin/php/php7.1.9/rabbitmq.4.dll\"\n```\n![image.png](https://img.hacpai.com/file/2020/03/image-861d7af8.png)\n\n7. 重启 apache 和 PHP 服务。\n\n8. 访问 phpinfo();\n\n9. 有 amqp 则安装成功\n\n![image.png](https://img.hacpai.com/file/2020/03/image-77d95e4d.png)\n\n\n\n## 4、项目中安装php-amqplib库\n\n#### 使用 composer 安装\n\n1. 项目目录下的 composer.json 文件中增加下面内容\n\n```\n{\n    \"require\": {\n    \"php-amqplib/php-amqplib\": \"^2.8\",  //增加这行\n  }\n}\n````\n2. 然后执行:\n\n```\n composer update php-amqplib/php-amqplib。\n```\n\n#### 更加方便的做法是直接执行\n\n```\ncomposer require php-amqplib/php-amqplib \n```\n便可以直接进行安装了\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b6ba5d5b.png)\n\n\n\n## 5、接下来就可以尽情的玩耍了。。。\n","slug":"202003/RabbitMQ的安装以及对应的PHP扩展的安装","published":1,"__permalink":"/articles/2020/03/17/1584413384830.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzur0005ogfd1kv3dks1","content":"<p><img src=\"https://img.hacpai.com/bing/20180610.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<p>记于2019-2-27</p>\n<h6 id=\"环境：windows-平台，PHP7-1-9\"><a href=\"#环境：windows-平台，PHP7-1-9\" class=\"headerlink\" title=\"环境：windows 平台，PHP7.1.9\"></a>环境：windows 平台，PHP7.1.9</h6><h2 id=\"1、安装-Erlang\"><a href=\"#1、安装-Erlang\" class=\"headerlink\" title=\"1、安装 Erlang\"></a>1、安装 Erlang</h2><ul>\n<li>因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址<a href=\"http://www.erlang.org/downloads\">http://www.erlang.org/downloads</a></li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-b1a355b3.png\" alt=\"image.png\"></p>\n<ul>\n<li><p>我选择的是图中的版本，一直next即可</p>\n<h2 id=\"2、下载安装RabbitMQ\"><a href=\"#2、下载安装RabbitMQ\" class=\"headerlink\" title=\"2、下载安装RabbitMQ\"></a>2、下载安装RabbitMQ</h2></li>\n<li><p>下载地址<a href=\"http://www.rabbitmq.com/download.html\">http://www.rabbitmq.com/download.html</a></p>\n</li>\n<li><p>也是一直next</p>\n</li>\n<li><p>安装完成后并没有启动RabbitMQ，需要执行下面的操作：</p>\n</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-3ecf633e.png\" alt=\"image.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-plugins.bat enable rabbitmq_management</span><br><span class=\"line\"></span><br><span class=\"line\">rabbitmq-service.bat start</span><br></pre></td></tr></table></figure>\n\n\n<p>PS: 2019 年 2 月 12 日添加</p>\n<ul>\n<li>如果执行 rabbitmq-plugins.bat enable rabbitmq_management 报错，并且是设置好了环境变量后依然出现这个问题：</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-ce381e48.png\" alt=\"image.png\"></p>\n<ul>\n<li>那么就执行下面的命令后，在执行上面的命令</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-fe471b8d.png\" alt=\"image.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set ERLANG_HOME&#x3D;C:\\Program Files\\erl10.2</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>可能会报错提示 但已经运行 这个时候执行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-service.bat stop</span><br></pre></td></tr></table></figure></li>\n<li>访问<a href=\"http://localhost:15672/\">http://localhost:15672/</a> 即可。默认的帐号：guest  密码：guest</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-1458e7cd.png\" alt=\"image.png\"></p>\n<h2 id=\"3、安装PHP的rabbitMQ扩展\"><a href=\"#3、安装PHP的rabbitMQ扩展\" class=\"headerlink\" title=\"3、安装PHP的rabbitMQ扩展\"></a>3、安装PHP的rabbitMQ扩展</h2><h4 id=\"下载-dll-文件-地址-http-pecl-php-net-package-amqp\"><a href=\"#下载-dll-文件-地址-http-pecl-php-net-package-amqp\" class=\"headerlink\" title=\"下载 dll 文件 地址  http://pecl.php.net/package/amqp\"></a>下载 dll 文件 地址  <a href=\"http://pecl.php.net/package/amqp\">http://pecl.php.net/package/amqp</a></h4><ol>\n<li>先查看 PHP 版本。</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-51e11d34.png\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>选择问稳定版的 dll</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-1cbd4339.png\" alt=\"image.png\"></p>\n<p> 我选择的是 1.9.3 。因为 Thread Safety  enable  ,所以选择的是 TS。</p>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-ae7f0118.png\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>下载后解压</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-9c95aaed.png\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>将 php_amqp.dll 文件放在 PHP 安装目录 ext 下</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-6a3a5330.png\" alt=\"image.png\"></p>\n<ol start=\"5\">\n<li>php.ini 里面添加</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extension&#x3D;php_amqp.dll</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>将 rabbitmq.4.dll 文件放在 php/php7.1.9/目录下，并在 apach 的 httpd.conf 文件中加上一句：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;php&#x2F;php7.1.9&#x2F;rabbitmq.4.dll&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-861d7af8.png\" alt=\"image.png\"></p>\n<ol start=\"7\">\n<li><p>重启 apache 和 PHP 服务。</p>\n</li>\n<li><p>访问 phpinfo();</p>\n</li>\n<li><p>有 amqp 则安装成功</p>\n</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-77d95e4d.png\" alt=\"image.png\"></p>\n<h2 id=\"4、项目中安装php-amqplib库\"><a href=\"#4、项目中安装php-amqplib库\" class=\"headerlink\" title=\"4、项目中安装php-amqplib库\"></a>4、项目中安装php-amqplib库</h2><h4 id=\"使用-composer-安装\"><a href=\"#使用-composer-安装\" class=\"headerlink\" title=\"使用 composer 安装\"></a>使用 composer 安装</h4><ol>\n<li>项目目录下的 composer.json 文件中增加下面内容</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;require&quot;: &#123;</span><br><span class=\"line\">    &quot;php-amqplib&#x2F;php-amqplib&quot;: &quot;^2.8&quot;,  &#x2F;&#x2F;增加这行</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#96;&#96;&#96;&#96;</span><br><span class=\"line\">2. 然后执行:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> composer update php-amqplib/php-amqplib。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 更加方便的做法是直接执行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>composer require php-amqplib/php-amqplib </p>\n<pre><code>便可以直接进行安装了\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b6ba5d5b.png)\n\n\n\n## 5、接下来就可以尽情的玩耍了。。。</code></pre>\n","site":{"data":{}},"excerpt":"记于2019-2-27\n\n环境：windows 平台，PHP7.1.9\n1、安装 Erlang\n * 因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址http://www.erlang.org/downloads\n\n\n\n * 我选择的是图中的版本，一直next即可\n   \n   2、下载安装RabbitMQ\n   \n * 下载地址http://www.rabbitmq.com/download.html\n   \n   \n * 也是一直next\n   \n   \n * 安装完成后并没有启动RabbitMQ，需要执行下面的操作：\n   \n   \n\n\n","more":"<p><img src=\"https://img.hacpai.com/bing/20180610.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<p>记于2019-2-27</p>\n<h6 id=\"环境：windows-平台，PHP7-1-9\"><a href=\"#环境：windows-平台，PHP7-1-9\" class=\"headerlink\" title=\"环境：windows 平台，PHP7.1.9\"></a>环境：windows 平台，PHP7.1.9</h6><h2 id=\"1、安装-Erlang\"><a href=\"#1、安装-Erlang\" class=\"headerlink\" title=\"1、安装 Erlang\"></a>1、安装 Erlang</h2><ul>\n<li>因为 RabbitMQ 是用 Erlang 语言编写，安装之前需要先安装 Erlang， 下载地址<a href=\"http://www.erlang.org/downloads\">http://www.erlang.org/downloads</a></li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-b1a355b3.png\" alt=\"image.png\"></p>\n<ul>\n<li><p>我选择的是图中的版本，一直next即可</p>\n<h2 id=\"2、下载安装RabbitMQ\"><a href=\"#2、下载安装RabbitMQ\" class=\"headerlink\" title=\"2、下载安装RabbitMQ\"></a>2、下载安装RabbitMQ</h2></li>\n<li><p>下载地址<a href=\"http://www.rabbitmq.com/download.html\">http://www.rabbitmq.com/download.html</a></p>\n</li>\n<li><p>也是一直next</p>\n</li>\n<li><p>安装完成后并没有启动RabbitMQ，需要执行下面的操作：</p>\n</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-3ecf633e.png\" alt=\"image.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-plugins.bat enable rabbitmq_management</span><br><span class=\"line\"></span><br><span class=\"line\">rabbitmq-service.bat start</span><br></pre></td></tr></table></figure>\n\n\n<p>PS: 2019 年 2 月 12 日添加</p>\n<ul>\n<li>如果执行 rabbitmq-plugins.bat enable rabbitmq_management 报错，并且是设置好了环境变量后依然出现这个问题：</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-ce381e48.png\" alt=\"image.png\"></p>\n<ul>\n<li>那么就执行下面的命令后，在执行上面的命令</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-fe471b8d.png\" alt=\"image.png\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set ERLANG_HOME&#x3D;C:\\Program Files\\erl10.2</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>可能会报错提示 但已经运行 这个时候执行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rabbitmq-service.bat stop</span><br></pre></td></tr></table></figure></li>\n<li>访问<a href=\"http://localhost:15672/\">http://localhost:15672/</a> 即可。默认的帐号：guest  密码：guest</li>\n</ul>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-1458e7cd.png\" alt=\"image.png\"></p>\n<h2 id=\"3、安装PHP的rabbitMQ扩展\"><a href=\"#3、安装PHP的rabbitMQ扩展\" class=\"headerlink\" title=\"3、安装PHP的rabbitMQ扩展\"></a>3、安装PHP的rabbitMQ扩展</h2><h4 id=\"下载-dll-文件-地址-http-pecl-php-net-package-amqp\"><a href=\"#下载-dll-文件-地址-http-pecl-php-net-package-amqp\" class=\"headerlink\" title=\"下载 dll 文件 地址  http://pecl.php.net/package/amqp\"></a>下载 dll 文件 地址  <a href=\"http://pecl.php.net/package/amqp\">http://pecl.php.net/package/amqp</a></h4><ol>\n<li>先查看 PHP 版本。</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-51e11d34.png\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>选择问稳定版的 dll</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-1cbd4339.png\" alt=\"image.png\"></p>\n<p> 我选择的是 1.9.3 。因为 Thread Safety  enable  ,所以选择的是 TS。</p>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-ae7f0118.png\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>下载后解压</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-9c95aaed.png\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>将 php_amqp.dll 文件放在 PHP 安装目录 ext 下</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-6a3a5330.png\" alt=\"image.png\"></p>\n<ol start=\"5\">\n<li>php.ini 里面添加</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extension&#x3D;php_amqp.dll</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>将 rabbitmq.4.dll 文件放在 php/php7.1.9/目录下，并在 apach 的 httpd.conf 文件中加上一句：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;php&#x2F;php7.1.9&#x2F;rabbitmq.4.dll&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-861d7af8.png\" alt=\"image.png\"></p>\n<ol start=\"7\">\n<li><p>重启 apache 和 PHP 服务。</p>\n</li>\n<li><p>访问 phpinfo();</p>\n</li>\n<li><p>有 amqp 则安装成功</p>\n</li>\n</ol>\n<p><img src=\"https://img.hacpai.com/file/2020/03/image-77d95e4d.png\" alt=\"image.png\"></p>\n<h2 id=\"4、项目中安装php-amqplib库\"><a href=\"#4、项目中安装php-amqplib库\" class=\"headerlink\" title=\"4、项目中安装php-amqplib库\"></a>4、项目中安装php-amqplib库</h2><h4 id=\"使用-composer-安装\"><a href=\"#使用-composer-安装\" class=\"headerlink\" title=\"使用 composer 安装\"></a>使用 composer 安装</h4><ol>\n<li>项目目录下的 composer.json 文件中增加下面内容</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;require&quot;: &#123;</span><br><span class=\"line\">    &quot;php-amqplib&#x2F;php-amqplib&quot;: &quot;^2.8&quot;,  &#x2F;&#x2F;增加这行</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#96;&#96;&#96;&#96;</span><br><span class=\"line\">2. 然后执行:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p> composer update php-amqplib/php-amqplib。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 更加方便的做法是直接执行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>composer require php-amqplib/php-amqplib </p>\n<pre><code>便可以直接进行安装了\n\n![image.png](https://img.hacpai.com/file/2020/03/image-b6ba5d5b.png)\n\n\n\n## 5、接下来就可以尽情的玩耍了。。。</code></pre>\n"},{"title":"PHP的常用工具函数","date":"2020-03-17T06:01:30.000Z","updated":"2020-07-03T02:22:06.000Z","_content":"![](https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 记录平时开发中经常使用的小工具\n\n#### 跳转链接\n\n```php\n/**\n * @param string $url 请求地址\n */\nstatic public function location($url){\n   echo \"<script language='javascript'>window.location.href='{$url}';</script>\";\n}\n```\n\n#### 请求链接获取数据\n```php\n    /**\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @return boolean\n     */\n    static public function makeRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n//        print_r($aStatus);die;\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n#### 获取客户端IP地址\n```php\n    /**\n     * 获取客户端IP地址\n     */\n    static public function getClientIP() {\n        static $ip = NULL;\n        if ( $ip !== NULL )\n            return $ip;\n        if ( isset( $_SERVER['HTTP_X_FORWARDED_FOR'] ) ) {\n            $arr = explode( ',', $_SERVER['HTTP_X_FORWARDED_FOR'] );\n            $pos = array_search( 'unknown', $arr );\n            if ( false !== $pos )\n                unset( $arr[$pos] );\n            $ip = trim( $arr[0] );\n        } elseif ( isset( $_SERVER['HTTP_CLIENT_IP'] ) ) {\n            $ip = $_SERVER['HTTP_CLIENT_IP'];\n        } elseif ( isset( $_SERVER['REMOTE_ADDR'] ) ) {\n            $ip = $_SERVER['REMOTE_ADDR'];\n        }\n        // IP地址合法验证\n        $ip = ( false !== ip2long( $ip ) ) ? $ip : '0.0.0.0';\n        return $ip;\n    }\n```\n#### 循环创建目录\n\n```\n    /**\n     * @instruction 循环创建目录\n     * @param $dir  目录\n     * @param $mode 权限\n     * @author Barry\n     * @date 2017-10-24\n     * @version v1.0\n     */\n    static public function mkdir( $dir, $mode = 0777 ) {\n\n        $aimUrl = str_replace('', '/', $dir);\n        $aimDir = '';\n        $arr = explode('/', $aimUrl);\n        $result = true;\n        foreach ($arr as $str) {\n            $aimDir .= $str . '/';\n            if (!file_exists($aimDir)) {\n                $result = mkdir($aimDir, $mode);\n            }\n        }\n        return $result;\n    }\n```\n\n#### 字符截取，多出的字符串显示省略号\n\n```php\n/**\n     * 字符截取\n     *\n     * @param $string\n     * @param $length\n     * @param $dot\n     */\n    public static function cutstr( $string, $length, $dot = '...', $charset = 'utf-8' ) {\n        if ( strlen( $string ) <= $length )\n            return $string;\n\n        $pre = chr( 1 );\n        $end = chr( 1 );\n        $string = str_replace( array ( '&amp;' , '&quot;' , '&lt;' , '&gt;' ), array ( $pre . '&' . $end , $pre . '\"' . $end , $pre . '<' . $end , $pre . '>' . $end ), $string );\n\n        $strcut = '';\n        if ( strtolower( $charset ) == 'utf-8' ) {\n\n            $n = $tn = $noc = 0;\n            while ( $n < strlen( $string ) ) {\n\n                $t = ord( $string[$n] );\n                if ( $t == 9 || $t == 10 || ( 32 <= $t && $t <= 126 ) ) {\n                    $tn = 1;\n                    $n ++;\n                    $noc ++;\n                } elseif ( 194 <= $t && $t <= 223 ) {\n                    $tn = 2;\n                    $n += 2;\n                    $noc += 2;\n                } elseif ( 224 <= $t && $t <= 239 ) {\n                    $tn = 3;\n                    $n += 3;\n                    $noc += 2;\n                } elseif ( 240 <= $t && $t <= 247 ) {\n                    $tn = 4;\n                    $n += 4;\n                    $noc += 2;\n                } elseif ( 248 <= $t && $t <= 251 ) {\n                    $tn = 5;\n                    $n += 5;\n                    $noc += 2;\n                } elseif ( $t == 252 || $t == 253 ) {\n                    $tn = 6;\n                    $n += 6;\n                    $noc += 2;\n                } else {\n                    $n ++;\n                }\n\n                if ( $noc >= $length ) {\n                    break;\n                }\n\n            }\n            if ( $noc > $length ) {\n                $n -= $tn;\n            }\n\n            $strcut = substr( $string, 0, $n );\n\n        } else {\n            for ( $i = 0; $i < $length; $i ++ ) {\n                $strcut .= ord( $string[$i] ) > 127 ? $string[$i] . $string[++ $i] : $string[$i];\n            }\n        }\n\n        $strcut = str_replace( array ( $pre . '&' . $end , $pre . '\"' . $end , $pre . '<' . $end , $pre . '>' . $end ), array ( '&amp;' , '&quot;' , '&lt;' , '&gt;' ), $strcut );\n\n        $pos = strrpos( $strcut, chr( 1 ) );\n        if ( $pos !== false ) {\n            $strcut = substr( $strcut, 0, $pos );\n        }\n        return $strcut . $dot;\n    }\n```\n\n#### 获得来源类型 post get\n\n```php\nstatic public function method() {\n       return strtoupper( isset( $_SERVER['REQUEST_METHOD'] ) ? $_SERVER['REQUEST_METHOD'] : 'GET' );\n }\n```\n\n#### 转换XML文档为数组\n\n```php\n   /**\n     * 转换XML文档为数组\n     *\n     * @author Barry\n     * @date 2017-10-24\n     * @param string xml内容\n     * @return mixed 返回的数组，如果失败，返回false\n     */\n    static public function xmlWx2array($xml) {\n        $xml = (Array)simplexml_load_string($xml, \"SimpleXMLElement\", LIBXML_NOCDATA);\n        return $xml;\n    }\n```\n\n#### 正则验证url是否合法\n\n```php\nstatic public function checkUrl($url){\n        if(!preg_match('/^(http|https|ftp):\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/is',$url)){\n            return false;\n        }\n        return true;\n}\n```\n\n\n#### 数组转xml\n\n```php\n   public function arrayToXml($arr) {\n        $xml = \"<xml>\";\n        foreach ($arr as $key=>$val) {\n            if (is_numeric($val)) {\n                $xml.=\"<\".$key.\">\".$val.\"</\".$key.\">\";\n            }\n            else {\n                $xml.=\"<\".$key.\"><![CDATA[\".$val.\"]]></\".$key.\">\";\n            }\n        }\n        $xml.=\"</xml>\";\n        //echo $xml;\n        return $xml;\n    }\n```\n\n#### 二维数组排序\n\n```php\n /**\n     * 二维数组排序\n     *<B>说明：</B>\n     *<pre>\n     *  略\n     *</pre>\n     *<B>示例：</B>\n     *<pre>\n     *  $array = array(\n     * \t\tarray('userId'=>'3','name'=>'admin3'),\n     *      array('userId'=>'1','name'=>'admin1'),\n     *      array('userId'=>'2','name'=>'admin2')\n     * )\n     * ArrayList::arraySort($array,'userId','desc');\n     * 结果\n     * \t *  $array = array(\n     * \t\tarray('userId'=>'3','name'=>'admin3'),\n     *      array('userId'=>'2','name'=>'admin2')\n     * \t\tarray('userId'=>'1','name'=>'admin1'),\n     * )\n     *</pre>\n     * @param array $arr 源数组\n     * @param string $key 数据项key\n     * @param string $order 排序规则 desc 降序 asc 升序\n     * @return int\n     */\n    static public function arraySort($arr, $key, $order = 'desc') {\n        $keysvalue = $new_array = array();\n        foreach ($arr as $k => $v) {\n            $keysvalue[$k] = $v[$key];\n        }\n\n        if ($order == 'asc') {\n            asort($keysvalue);\n        } else {\n            arsort($keysvalue);\n        }\n\n        reset($keysvalue);\n        foreach ($keysvalue as $k => $v) {\n            $new_array[$k] = $arr[$k];\n        }\n\n        return $new_array;\n    }\n```\n\n\n#### 判断是否是微信客户端请求\n```php\nstatic public function isWeixin() {\n        if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ) {\n            return true;\n        }\n        return false;\n    }\n```\n\n#### 计算两组经纬度坐标之间的距离\n\n```php\n    /**\n     * 计算两组经纬度坐标 之间的距离\n     * @params $lat1 纬度1；\n     * @params $lng1 经度1；\n     * @params $lat2 纬度2；\n     * @params $lng2 经度2；\n     * @params $len_type （1:m or 2:km);\n     * @return m or km\n     * @version 1.0\n     */\n    public static function getDistance($lat1, $lng1, $lat2, $lng2, $len_type = 1, $decimal = 2) {\n        $EARTH_RADIUS=6378.137;\n        $PI=3.1415926;\n        $radLat1 = $lat1 * $PI / 180.0;\n        $radLat2 = $lat2 * $PI / 180.0;\n        $a = $radLat1 - $radLat2;\n        $b = ($lng1 * $PI / 180.0) - ($lng2 * $PI / 180.0);\n        $s = 2 * asin(sqrt(pow(sin($a/2),2) + cos($radLat1) * cos($radLat2) * pow(sin($b/2),2)));\n        $s = $s * $EARTH_RADIUS; $s = round($s * 1000);\n        if ($len_type > 1) {\n            $s /= 1000;\n        }\n        return round($s,$decimal);\n    }\n```\n\n\n#### 将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\n\n```\n    /**\n     * 时间格式化 传入时间戳~~~~\n     */\n    static public function formatDate($time){\n        $rtime = date ( \"m-d H:i\", $time );\n        $htime = date ( \"H:i\", $time );\n\n        $time = time () - $time;\n\n        if ($time < 60) {\n            $str = '刚刚';\n        } elseif ($time < 60 * 60) {\n            $min = floor ( $time / 60 );\n            $str = $min . '分钟前';\n        } elseif ($time < 60 * 60 * 24) {\n            $h = floor ( $time / (60 * 60) );\n            $str = $h . '小时前 ' . $htime;\n        } elseif ($time < 60 * 60 * 24 * 3) {\n            $d = floor ( $time / (60 * 60 * 24) );\n            if ($d == 1)\n                $str = '昨天 ' . $rtime;\n            else\n                $str = '前天 ' . $rtime;\n        } else {\n            $str = $rtime;\n        }\n        return $str;\n    }\n```\n\n#### 求两个日期之间相差的天数\n```\n/**\n     * 求两个日期之间相差的天数\n     * @param string $datetime1\n     * @param string $datetime2\n     * @return number\n     */\n    static public function diffBetweenTwoDays($datetime1, $datetime2) {\n        $second1 = strtotime($datetime1);\n        $second2 = strtotime($datetime2);\n\n        if ($second1 < $second2) {\n            $tmp = $second2;\n            $second2 = $second1;\n            $second1 = $tmp;\n        }\n        return bcdiv(bcsub($second1, $second2, 3), 86400, 3);\n    }\n```\n\n#### 根据生日计算年龄\n```\nstatic public function Birthday($birthday) {\n        $age = $birthday;\n        if($age === false) {\n            return false;\n        }\n        list($y1,$m1,$d1) = explode(\"-\",date(\"Y-m-d\",$age));\n        $now = strtotime(\"now\");\n        list($y2,$m2,$d2) = explode(\"-\",date(\"Y-m-d\",$now));\n        $age = $y2 - $y1;\n        if((int)($m2.$d2) < (int)($m1.$d1))\n            $age -= 1;\n        return $age;\n    }\n```\n\n#### 秒转化成时分秒显示\n\n```php\n/**秒转化成是时分秒\n     * @author Barry\n     * @date 2017-10-24\n     * @param $seconds\n     * @return string\n     */\n    static public function changeTimeType($seconds){\n        if ($seconds > 3600){\n            $hours = intval($seconds/3600);\n            $minutes = $seconds % 3600;\n            $time = $hours.\":\".gmstrftime('%M:%S', $minutes);\n        }else{\n            $time = gmstrftime('%H:%M:%S', $seconds);\n        }\n        return $time;\n    }\n```\n\n#### 删除一个文件夹下面的所有的文件以及文件夹\n```php\n//删除一个文件夹下面的所有的文件以及文件夹\n    static public function delDir($path){\n        error_reporting(0);\n        //如果是目录则继续\n        if(is_dir($path)){\n            //扫描一个文件夹内的所有文件夹和文件并返回数组\n            $p = scandir($path);\n            foreach($p as $val){\n                //排除目录中的.和..\n                if($val !=\".\" && $val !=\"..\"){\n                    //如果是目录则递归子目录，继续操作\n                    if(is_dir($path.$val)){\n                        //子目录中操作删除文件夹和文件\n                        self::deldir($path.$val.'/');\n                        //目录清空后删除空文件夹\n                        @rmdir($path.$val.'/');\n                    }else{\n                        //如果是文件直接删除\n                        @unlink($path.$val);\n                    }\n                }\n            }\n            @rmdir($path);\n        }\n    }\n```\n\n#### PHP模拟发送异步请求\n\n```php\n/**\n     * PHP发送异步请求\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @param array $header\n     * @return boolean\n     */\n    static public function makeAsyncRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n        curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则下面设置毫秒级会报错\n        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, 18);//设置cURL允许执行的最长毫秒数\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n#### 隐藏手机号中间4位\n\n```\nfunction blur_phone_number($phoneNum)\n    {\n        $head = substr($phoneNum, 0, 3);\n        $tail = substr($phoneNum, -4, 4);\n        return ($head . '****' . $tail);\n    }\n```\n\n\n#### 取毫秒级时间戳\n```\n//取毫秒级时间戳\nfunction getMillisecond() {\n        list($t1, $t2) = explode(' ', microtime());\n        return (float)sprintf('%.0f',(floatval($t1)+floatval($t2))*1000);\n    }\n```\n\n","source":"_posts/202003/PHP的常用工具函数.md","raw":"title: PHP的常用工具函数\ndate: '2020-03-17 14:01:30'\nupdated: '2020-07-03 10:22:06'\ntags: [PHP, 工具]\npermalink: /articles/2020/03/17/1584424890414.html\n---\n![](https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 记录平时开发中经常使用的小工具\n\n#### 跳转链接\n\n```php\n/**\n * @param string $url 请求地址\n */\nstatic public function location($url){\n   echo \"<script language='javascript'>window.location.href='{$url}';</script>\";\n}\n```\n\n#### 请求链接获取数据\n```php\n    /**\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @return boolean\n     */\n    static public function makeRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n//        print_r($aStatus);die;\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n#### 获取客户端IP地址\n```php\n    /**\n     * 获取客户端IP地址\n     */\n    static public function getClientIP() {\n        static $ip = NULL;\n        if ( $ip !== NULL )\n            return $ip;\n        if ( isset( $_SERVER['HTTP_X_FORWARDED_FOR'] ) ) {\n            $arr = explode( ',', $_SERVER['HTTP_X_FORWARDED_FOR'] );\n            $pos = array_search( 'unknown', $arr );\n            if ( false !== $pos )\n                unset( $arr[$pos] );\n            $ip = trim( $arr[0] );\n        } elseif ( isset( $_SERVER['HTTP_CLIENT_IP'] ) ) {\n            $ip = $_SERVER['HTTP_CLIENT_IP'];\n        } elseif ( isset( $_SERVER['REMOTE_ADDR'] ) ) {\n            $ip = $_SERVER['REMOTE_ADDR'];\n        }\n        // IP地址合法验证\n        $ip = ( false !== ip2long( $ip ) ) ? $ip : '0.0.0.0';\n        return $ip;\n    }\n```\n#### 循环创建目录\n\n```\n    /**\n     * @instruction 循环创建目录\n     * @param $dir  目录\n     * @param $mode 权限\n     * @author Barry\n     * @date 2017-10-24\n     * @version v1.0\n     */\n    static public function mkdir( $dir, $mode = 0777 ) {\n\n        $aimUrl = str_replace('', '/', $dir);\n        $aimDir = '';\n        $arr = explode('/', $aimUrl);\n        $result = true;\n        foreach ($arr as $str) {\n            $aimDir .= $str . '/';\n            if (!file_exists($aimDir)) {\n                $result = mkdir($aimDir, $mode);\n            }\n        }\n        return $result;\n    }\n```\n\n#### 字符截取，多出的字符串显示省略号\n\n```php\n/**\n     * 字符截取\n     *\n     * @param $string\n     * @param $length\n     * @param $dot\n     */\n    public static function cutstr( $string, $length, $dot = '...', $charset = 'utf-8' ) {\n        if ( strlen( $string ) <= $length )\n            return $string;\n\n        $pre = chr( 1 );\n        $end = chr( 1 );\n        $string = str_replace( array ( '&amp;' , '&quot;' , '&lt;' , '&gt;' ), array ( $pre . '&' . $end , $pre . '\"' . $end , $pre . '<' . $end , $pre . '>' . $end ), $string );\n\n        $strcut = '';\n        if ( strtolower( $charset ) == 'utf-8' ) {\n\n            $n = $tn = $noc = 0;\n            while ( $n < strlen( $string ) ) {\n\n                $t = ord( $string[$n] );\n                if ( $t == 9 || $t == 10 || ( 32 <= $t && $t <= 126 ) ) {\n                    $tn = 1;\n                    $n ++;\n                    $noc ++;\n                } elseif ( 194 <= $t && $t <= 223 ) {\n                    $tn = 2;\n                    $n += 2;\n                    $noc += 2;\n                } elseif ( 224 <= $t && $t <= 239 ) {\n                    $tn = 3;\n                    $n += 3;\n                    $noc += 2;\n                } elseif ( 240 <= $t && $t <= 247 ) {\n                    $tn = 4;\n                    $n += 4;\n                    $noc += 2;\n                } elseif ( 248 <= $t && $t <= 251 ) {\n                    $tn = 5;\n                    $n += 5;\n                    $noc += 2;\n                } elseif ( $t == 252 || $t == 253 ) {\n                    $tn = 6;\n                    $n += 6;\n                    $noc += 2;\n                } else {\n                    $n ++;\n                }\n\n                if ( $noc >= $length ) {\n                    break;\n                }\n\n            }\n            if ( $noc > $length ) {\n                $n -= $tn;\n            }\n\n            $strcut = substr( $string, 0, $n );\n\n        } else {\n            for ( $i = 0; $i < $length; $i ++ ) {\n                $strcut .= ord( $string[$i] ) > 127 ? $string[$i] . $string[++ $i] : $string[$i];\n            }\n        }\n\n        $strcut = str_replace( array ( $pre . '&' . $end , $pre . '\"' . $end , $pre . '<' . $end , $pre . '>' . $end ), array ( '&amp;' , '&quot;' , '&lt;' , '&gt;' ), $strcut );\n\n        $pos = strrpos( $strcut, chr( 1 ) );\n        if ( $pos !== false ) {\n            $strcut = substr( $strcut, 0, $pos );\n        }\n        return $strcut . $dot;\n    }\n```\n\n#### 获得来源类型 post get\n\n```php\nstatic public function method() {\n       return strtoupper( isset( $_SERVER['REQUEST_METHOD'] ) ? $_SERVER['REQUEST_METHOD'] : 'GET' );\n }\n```\n\n#### 转换XML文档为数组\n\n```php\n   /**\n     * 转换XML文档为数组\n     *\n     * @author Barry\n     * @date 2017-10-24\n     * @param string xml内容\n     * @return mixed 返回的数组，如果失败，返回false\n     */\n    static public function xmlWx2array($xml) {\n        $xml = (Array)simplexml_load_string($xml, \"SimpleXMLElement\", LIBXML_NOCDATA);\n        return $xml;\n    }\n```\n\n#### 正则验证url是否合法\n\n```php\nstatic public function checkUrl($url){\n        if(!preg_match('/^(http|https|ftp):\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/is',$url)){\n            return false;\n        }\n        return true;\n}\n```\n\n\n#### 数组转xml\n\n```php\n   public function arrayToXml($arr) {\n        $xml = \"<xml>\";\n        foreach ($arr as $key=>$val) {\n            if (is_numeric($val)) {\n                $xml.=\"<\".$key.\">\".$val.\"</\".$key.\">\";\n            }\n            else {\n                $xml.=\"<\".$key.\"><![CDATA[\".$val.\"]]></\".$key.\">\";\n            }\n        }\n        $xml.=\"</xml>\";\n        //echo $xml;\n        return $xml;\n    }\n```\n\n#### 二维数组排序\n\n```php\n /**\n     * 二维数组排序\n     *<B>说明：</B>\n     *<pre>\n     *  略\n     *</pre>\n     *<B>示例：</B>\n     *<pre>\n     *  $array = array(\n     * \t\tarray('userId'=>'3','name'=>'admin3'),\n     *      array('userId'=>'1','name'=>'admin1'),\n     *      array('userId'=>'2','name'=>'admin2')\n     * )\n     * ArrayList::arraySort($array,'userId','desc');\n     * 结果\n     * \t *  $array = array(\n     * \t\tarray('userId'=>'3','name'=>'admin3'),\n     *      array('userId'=>'2','name'=>'admin2')\n     * \t\tarray('userId'=>'1','name'=>'admin1'),\n     * )\n     *</pre>\n     * @param array $arr 源数组\n     * @param string $key 数据项key\n     * @param string $order 排序规则 desc 降序 asc 升序\n     * @return int\n     */\n    static public function arraySort($arr, $key, $order = 'desc') {\n        $keysvalue = $new_array = array();\n        foreach ($arr as $k => $v) {\n            $keysvalue[$k] = $v[$key];\n        }\n\n        if ($order == 'asc') {\n            asort($keysvalue);\n        } else {\n            arsort($keysvalue);\n        }\n\n        reset($keysvalue);\n        foreach ($keysvalue as $k => $v) {\n            $new_array[$k] = $arr[$k];\n        }\n\n        return $new_array;\n    }\n```\n\n\n#### 判断是否是微信客户端请求\n```php\nstatic public function isWeixin() {\n        if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ) {\n            return true;\n        }\n        return false;\n    }\n```\n\n#### 计算两组经纬度坐标之间的距离\n\n```php\n    /**\n     * 计算两组经纬度坐标 之间的距离\n     * @params $lat1 纬度1；\n     * @params $lng1 经度1；\n     * @params $lat2 纬度2；\n     * @params $lng2 经度2；\n     * @params $len_type （1:m or 2:km);\n     * @return m or km\n     * @version 1.0\n     */\n    public static function getDistance($lat1, $lng1, $lat2, $lng2, $len_type = 1, $decimal = 2) {\n        $EARTH_RADIUS=6378.137;\n        $PI=3.1415926;\n        $radLat1 = $lat1 * $PI / 180.0;\n        $radLat2 = $lat2 * $PI / 180.0;\n        $a = $radLat1 - $radLat2;\n        $b = ($lng1 * $PI / 180.0) - ($lng2 * $PI / 180.0);\n        $s = 2 * asin(sqrt(pow(sin($a/2),2) + cos($radLat1) * cos($radLat2) * pow(sin($b/2),2)));\n        $s = $s * $EARTH_RADIUS; $s = round($s * 1000);\n        if ($len_type > 1) {\n            $s /= 1000;\n        }\n        return round($s,$decimal);\n    }\n```\n\n\n#### 将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\n\n```\n    /**\n     * 时间格式化 传入时间戳~~~~\n     */\n    static public function formatDate($time){\n        $rtime = date ( \"m-d H:i\", $time );\n        $htime = date ( \"H:i\", $time );\n\n        $time = time () - $time;\n\n        if ($time < 60) {\n            $str = '刚刚';\n        } elseif ($time < 60 * 60) {\n            $min = floor ( $time / 60 );\n            $str = $min . '分钟前';\n        } elseif ($time < 60 * 60 * 24) {\n            $h = floor ( $time / (60 * 60) );\n            $str = $h . '小时前 ' . $htime;\n        } elseif ($time < 60 * 60 * 24 * 3) {\n            $d = floor ( $time / (60 * 60 * 24) );\n            if ($d == 1)\n                $str = '昨天 ' . $rtime;\n            else\n                $str = '前天 ' . $rtime;\n        } else {\n            $str = $rtime;\n        }\n        return $str;\n    }\n```\n\n#### 求两个日期之间相差的天数\n```\n/**\n     * 求两个日期之间相差的天数\n     * @param string $datetime1\n     * @param string $datetime2\n     * @return number\n     */\n    static public function diffBetweenTwoDays($datetime1, $datetime2) {\n        $second1 = strtotime($datetime1);\n        $second2 = strtotime($datetime2);\n\n        if ($second1 < $second2) {\n            $tmp = $second2;\n            $second2 = $second1;\n            $second1 = $tmp;\n        }\n        return bcdiv(bcsub($second1, $second2, 3), 86400, 3);\n    }\n```\n\n#### 根据生日计算年龄\n```\nstatic public function Birthday($birthday) {\n        $age = $birthday;\n        if($age === false) {\n            return false;\n        }\n        list($y1,$m1,$d1) = explode(\"-\",date(\"Y-m-d\",$age));\n        $now = strtotime(\"now\");\n        list($y2,$m2,$d2) = explode(\"-\",date(\"Y-m-d\",$now));\n        $age = $y2 - $y1;\n        if((int)($m2.$d2) < (int)($m1.$d1))\n            $age -= 1;\n        return $age;\n    }\n```\n\n#### 秒转化成时分秒显示\n\n```php\n/**秒转化成是时分秒\n     * @author Barry\n     * @date 2017-10-24\n     * @param $seconds\n     * @return string\n     */\n    static public function changeTimeType($seconds){\n        if ($seconds > 3600){\n            $hours = intval($seconds/3600);\n            $minutes = $seconds % 3600;\n            $time = $hours.\":\".gmstrftime('%M:%S', $minutes);\n        }else{\n            $time = gmstrftime('%H:%M:%S', $seconds);\n        }\n        return $time;\n    }\n```\n\n#### 删除一个文件夹下面的所有的文件以及文件夹\n```php\n//删除一个文件夹下面的所有的文件以及文件夹\n    static public function delDir($path){\n        error_reporting(0);\n        //如果是目录则继续\n        if(is_dir($path)){\n            //扫描一个文件夹内的所有文件夹和文件并返回数组\n            $p = scandir($path);\n            foreach($p as $val){\n                //排除目录中的.和..\n                if($val !=\".\" && $val !=\"..\"){\n                    //如果是目录则递归子目录，继续操作\n                    if(is_dir($path.$val)){\n                        //子目录中操作删除文件夹和文件\n                        self::deldir($path.$val.'/');\n                        //目录清空后删除空文件夹\n                        @rmdir($path.$val.'/');\n                    }else{\n                        //如果是文件直接删除\n                        @unlink($path.$val);\n                    }\n                }\n            }\n            @rmdir($path);\n        }\n    }\n```\n\n#### PHP模拟发送异步请求\n\n```php\n/**\n     * PHP发送异步请求\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @param array $header\n     * @return boolean\n     */\n    static public function makeAsyncRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n        curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则下面设置毫秒级会报错\n        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, 18);//设置cURL允许执行的最长毫秒数\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n#### 隐藏手机号中间4位\n\n```\nfunction blur_phone_number($phoneNum)\n    {\n        $head = substr($phoneNum, 0, 3);\n        $tail = substr($phoneNum, -4, 4);\n        return ($head . '****' . $tail);\n    }\n```\n\n\n#### 取毫秒级时间戳\n```\n//取毫秒级时间戳\nfunction getMillisecond() {\n        list($t1, $t2) = explode(' ', microtime());\n        return (float)sprintf('%.0f',(floatval($t1)+floatval($t2))*1000);\n    }\n```\n\n","slug":"202003/PHP的常用工具函数","published":1,"__permalink":"/articles/2020/03/17/1584424890414.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzus0008ogfdgppp9g2g","content":"<p><img src=\"https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"记录平时开发中经常使用的小工具\"><a href=\"#记录平时开发中经常使用的小工具\" class=\"headerlink\" title=\"记录平时开发中经常使用的小工具\"></a>记录平时开发中经常使用的小工具</h2><h4 id=\"跳转链接\"><a href=\"#跳转链接\" class=\"headerlink\" title=\"跳转链接\"></a>跳转链接</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">location</span>(<span class=\"params\">$url</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;script language=&#x27;javascript&#x27;&gt;window.location.href=&#x27;<span class=\"subst\">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"请求链接获取数据\"><a href=\"#请求链接获取数据\" class=\"headerlink\" title=\"请求链接获取数据\"></a>请求链接获取数据</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\"><span class=\"comment\">//        print_r($aStatus);die;</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获取客户端IP地址\"><a href=\"#获取客户端IP地址\" class=\"headerlink\" title=\"获取客户端IP地址\"></a>获取客户端IP地址</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取客户端IP地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getClientIP</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> $ip = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( $ip !== <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $ip;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $arr = explode( <span class=\"string\">&#x27;,&#x27;</span>, $_SERVER[<span class=\"string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] );</span><br><span class=\"line\">        $pos = array_search( <span class=\"string\">&#x27;unknown&#x27;</span>, $arr );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( <span class=\"literal\">false</span> !== $pos )</span><br><span class=\"line\">            <span class=\"keyword\">unset</span>( $arr[$pos] );</span><br><span class=\"line\">        $ip = trim( $arr[<span class=\"number\">0</span>] );</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elseif</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;HTTP_CLIENT_IP&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $ip = $_SERVER[<span class=\"string\">&#x27;HTTP_CLIENT_IP&#x27;</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elseif</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $ip = $_SERVER[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// IP地址合法验证</span></span><br><span class=\"line\">    $ip = ( <span class=\"literal\">false</span> !== ip2long( $ip ) ) ? $ip : <span class=\"string\">&#x27;0.0.0.0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $ip;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环创建目录\"><a href=\"#循环创建目录\" class=\"headerlink\" title=\"循环创建目录\"></a>循环创建目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * @instruction 循环创建目录</span><br><span class=\"line\"> * @param $dir  目录</span><br><span class=\"line\"> * @param $mode 权限</span><br><span class=\"line\"> * @author Barry</span><br><span class=\"line\"> * @date 2017-10-24</span><br><span class=\"line\"> * @version v1.0</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static public function mkdir( $dir, $mode &#x3D; 0777 ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $aimUrl &#x3D; str_replace(&#39;&#39;, &#39;&#x2F;&#39;, $dir);</span><br><span class=\"line\">    $aimDir &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $arr &#x3D; explode(&#39;&#x2F;&#39;, $aimUrl);</span><br><span class=\"line\">    $result &#x3D; true;</span><br><span class=\"line\">    foreach ($arr as $str) &#123;</span><br><span class=\"line\">        $aimDir .&#x3D; $str . &#39;&#x2F;&#39;;</span><br><span class=\"line\">        if (!file_exists($aimDir)) &#123;</span><br><span class=\"line\">            $result &#x3D; mkdir($aimDir, $mode);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符截取，多出的字符串显示省略号\"><a href=\"#字符截取，多出的字符串显示省略号\" class=\"headerlink\" title=\"字符截取，多出的字符串显示省略号\"></a>字符截取，多出的字符串显示省略号</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字符截取</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $string</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $length</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $dot</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cutstr</span>(<span class=\"params\"> $string, $length, $dot = <span class=\"string\">&#x27;...&#x27;</span>, $charset = <span class=\"string\">&#x27;utf-8&#x27;</span> </span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strlen( $string ) &lt;= $length )</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $string;</span><br><span class=\"line\"></span><br><span class=\"line\">        $pre = chr( <span class=\"number\">1</span> );</span><br><span class=\"line\">        $end = chr( <span class=\"number\">1</span> );</span><br><span class=\"line\">        $string = str_replace( <span class=\"keyword\">array</span> ( <span class=\"string\">&#x27;&amp;amp;&#x27;</span> , <span class=\"string\">&#x27;&amp;quot;&#x27;</span> , <span class=\"string\">&#x27;&amp;lt;&#x27;</span> , <span class=\"string\">&#x27;&amp;gt;&#x27;</span> ), <span class=\"keyword\">array</span> ( $pre . <span class=\"string\">&#x27;&amp;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&quot;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&lt;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&gt;&#x27;</span> . $end ), $string );</span><br><span class=\"line\"></span><br><span class=\"line\">        $strcut = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strtolower( $charset ) == <span class=\"string\">&#x27;utf-8&#x27;</span> ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            $n = $tn = $noc = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ( $n &lt; strlen( $string ) ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                $t = ord( $string[$n] );</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( $t == <span class=\"number\">9</span> || $t == <span class=\"number\">10</span> || ( <span class=\"number\">32</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">126</span> ) ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    $n ++;</span><br><span class=\"line\">                    $noc ++;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">194</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">223</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">2</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">2</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">224</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">239</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">3</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">3</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">240</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">247</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">4</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">4</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">248</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">251</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">5</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">5</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( $t == <span class=\"number\">252</span> || $t == <span class=\"number\">253</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">6</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">6</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    $n ++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( $noc &gt;= $length ) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( $noc &gt; $length ) &#123;</span><br><span class=\"line\">                $n -= $tn;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $strcut = substr( $string, <span class=\"number\">0</span>, $n );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> ( $i = <span class=\"number\">0</span>; $i &lt; $length; $i ++ ) &#123;</span><br><span class=\"line\">                $strcut .= ord( $string[$i] ) &gt; <span class=\"number\">127</span> ? $string[$i] . $string[++ $i] : $string[$i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $strcut = str_replace( <span class=\"keyword\">array</span> ( $pre . <span class=\"string\">&#x27;&amp;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&quot;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&lt;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&gt;&#x27;</span> . $end ), <span class=\"keyword\">array</span> ( <span class=\"string\">&#x27;&amp;amp;&#x27;</span> , <span class=\"string\">&#x27;&amp;quot;&#x27;</span> , <span class=\"string\">&#x27;&amp;lt;&#x27;</span> , <span class=\"string\">&#x27;&amp;gt;&#x27;</span> ), $strcut );</span><br><span class=\"line\"></span><br><span class=\"line\">        $pos = strrpos( $strcut, chr( <span class=\"number\">1</span> ) );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( $pos !== <span class=\"literal\">false</span> ) &#123;</span><br><span class=\"line\">            $strcut = substr( $strcut, <span class=\"number\">0</span>, $pos );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $strcut . $dot;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获得来源类型-post-get\"><a href=\"#获得来源类型-post-get\" class=\"headerlink\" title=\"获得来源类型 post get\"></a>获得来源类型 post get</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">method</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> strtoupper( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] ) ? $_SERVER[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] : <span class=\"string\">&#x27;GET&#x27;</span> );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"转换XML文档为数组\"><a href=\"#转换XML文档为数组\" class=\"headerlink\" title=\"转换XML文档为数组\"></a>转换XML文档为数组</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 转换XML文档为数组</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> string xml内容</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span> mixed 返回的数组，如果失败，返回false</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xmlWx2array</span>(<span class=\"params\">$xml</span>) </span>&#123;</span><br><span class=\"line\">     $xml = (<span class=\"keyword\">Array</span>)simplexml_load_string($xml, <span class=\"string\">&quot;SimpleXMLElement&quot;</span>, LIBXML_NOCDATA);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $xml;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"正则验证url是否合法\"><a href=\"#正则验证url是否合法\" class=\"headerlink\" title=\"正则验证url是否合法\"></a>正则验证url是否合法</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkUrl</span>(<span class=\"params\">$url</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">&#x27;/^(http|https|ftp):\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&amp;\\+\\%]*/is&#x27;</span>,$url))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"数组转xml\"><a href=\"#数组转xml\" class=\"headerlink\" title=\"数组转xml\"></a>数组转xml</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arrayToXml</span>(<span class=\"params\">$arr</span>) </span>&#123;</span><br><span class=\"line\">     $xml = <span class=\"string\">&quot;&lt;xml&gt;&quot;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $key=&gt;$val) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (is_numeric($val)) &#123;</span><br><span class=\"line\">             $xml.=<span class=\"string\">&quot;&lt;&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>.$val.<span class=\"string\">&quot;&lt;/&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             $xml.=<span class=\"string\">&quot;&lt;&quot;</span>.$key.<span class=\"string\">&quot;&gt;&lt;![CDATA[&quot;</span>.$val.<span class=\"string\">&quot;]]&gt;&lt;/&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     $xml.=<span class=\"string\">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class=\"line\">     <span class=\"comment\">//echo $xml;</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> $xml;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二维数组排序\"><a href=\"#二维数组排序\" class=\"headerlink\" title=\"二维数组排序\"></a>二维数组排序</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 二维数组排序</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;B&gt;说明：&lt;/B&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *  略</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;B&gt;示例：&lt;/B&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *  $array = array(</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">    * )</span></span><br><span class=\"line\"><span class=\"comment\">    * ArrayList::arraySort($array,&#x27;userId&#x27;,&#x27;desc&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">    * 结果</span></span><br><span class=\"line\"><span class=\"comment\">    * \t *  $array = array(</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    * )</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> array $arr 源数组</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> string $key 数据项key</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> string $order 排序规则 desc 降序 asc 升序</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@return</span> int</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arraySort</span>(<span class=\"params\">$arr, $key, $order = <span class=\"string\">&#x27;desc&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">       $keysvalue = $new_array = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">           $keysvalue[$k] = $v[$key];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">if</span> ($order == <span class=\"string\">&#x27;asc&#x27;</span>) &#123;</span><br><span class=\"line\">           asort($keysvalue);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           arsort($keysvalue);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       reset($keysvalue);</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> ($keysvalue <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">           $new_array[$k] = $arr[$k];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> $new_array;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"判断是否是微信客户端请求\"><a href=\"#判断是否是微信客户端请求\" class=\"headerlink\" title=\"判断是否是微信客户端请求\"></a>判断是否是微信客户端请求</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isWeixin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strpos($_SERVER[<span class=\"string\">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class=\"string\">&#x27;MicroMessenger&#x27;</span>) !== <span class=\"literal\">false</span> ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"计算两组经纬度坐标之间的距离\"><a href=\"#计算两组经纬度坐标之间的距离\" class=\"headerlink\" title=\"计算两组经纬度坐标之间的距离\"></a>计算两组经纬度坐标之间的距离</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计算两组经纬度坐标 之间的距离</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lat1 纬度1；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lng1 经度1；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lat2 纬度2；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lng2 经度2；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $len_type （1:m or 2:km);</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> m or km</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDistance</span>(<span class=\"params\">$lat1, $lng1, $lat2, $lng2, $len_type = <span class=\"number\">1</span>, $decimal = <span class=\"number\">2</span></span>) </span>&#123;</span><br><span class=\"line\">    $EARTH_RADIUS=<span class=\"number\">6378.137</span>;</span><br><span class=\"line\">    $PI=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">    $radLat1 = $lat1 * $PI / <span class=\"number\">180.0</span>;</span><br><span class=\"line\">    $radLat2 = $lat2 * $PI / <span class=\"number\">180.0</span>;</span><br><span class=\"line\">    $a = $radLat1 - $radLat2;</span><br><span class=\"line\">    $b = ($lng1 * $PI / <span class=\"number\">180.0</span>) - ($lng2 * $PI / <span class=\"number\">180.0</span>);</span><br><span class=\"line\">    $s = <span class=\"number\">2</span> * asin(sqrt(pow(sin($a/<span class=\"number\">2</span>),<span class=\"number\">2</span>) + cos($radLat1) * cos($radLat2) * pow(sin($b/<span class=\"number\">2</span>),<span class=\"number\">2</span>)));</span><br><span class=\"line\">    $s = $s * $EARTH_RADIUS; $s = round($s * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($len_type &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        $s /= <span class=\"number\">1000</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> round($s,$decimal);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\"><a href=\"#将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\" class=\"headerlink\" title=\"将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\"></a>将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 时间格式化 传入时间戳~~~~</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static public function formatDate($time)&#123;</span><br><span class=\"line\">    $rtime &#x3D; date ( &quot;m-d H:i&quot;, $time );</span><br><span class=\"line\">    $htime &#x3D; date ( &quot;H:i&quot;, $time );</span><br><span class=\"line\"></span><br><span class=\"line\">    $time &#x3D; time () - $time;</span><br><span class=\"line\"></span><br><span class=\"line\">    if ($time &lt; 60) &#123;</span><br><span class=\"line\">        $str &#x3D; &#39;刚刚&#39;;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60) &#123;</span><br><span class=\"line\">        $min &#x3D; floor ( $time &#x2F; 60 );</span><br><span class=\"line\">        $str &#x3D; $min . &#39;分钟前&#39;;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60 * 24) &#123;</span><br><span class=\"line\">        $h &#x3D; floor ( $time &#x2F; (60 * 60) );</span><br><span class=\"line\">        $str &#x3D; $h . &#39;小时前 &#39; . $htime;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60 * 24 * 3) &#123;</span><br><span class=\"line\">        $d &#x3D; floor ( $time &#x2F; (60 * 60 * 24) );</span><br><span class=\"line\">        if ($d &#x3D;&#x3D; 1)</span><br><span class=\"line\">            $str &#x3D; &#39;昨天 &#39; . $rtime;</span><br><span class=\"line\">        else</span><br><span class=\"line\">            $str &#x3D; &#39;前天 &#39; . $rtime;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        $str &#x3D; $rtime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"求两个日期之间相差的天数\"><a href=\"#求两个日期之间相差的天数\" class=\"headerlink\" title=\"求两个日期之间相差的天数\"></a>求两个日期之间相差的天数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\">     * 求两个日期之间相差的天数</span><br><span class=\"line\">     * @param string $datetime1</span><br><span class=\"line\">     * @param string $datetime2</span><br><span class=\"line\">     * @return number</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    static public function diffBetweenTwoDays($datetime1, $datetime2) &#123;</span><br><span class=\"line\">        $second1 &#x3D; strtotime($datetime1);</span><br><span class=\"line\">        $second2 &#x3D; strtotime($datetime2);</span><br><span class=\"line\"></span><br><span class=\"line\">        if ($second1 &lt; $second2) &#123;</span><br><span class=\"line\">            $tmp &#x3D; $second2;</span><br><span class=\"line\">            $second2 &#x3D; $second1;</span><br><span class=\"line\">            $second1 &#x3D; $tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return bcdiv(bcsub($second1, $second2, 3), 86400, 3);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"根据生日计算年龄\"><a href=\"#根据生日计算年龄\" class=\"headerlink\" title=\"根据生日计算年龄\"></a>根据生日计算年龄</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static public function Birthday($birthday) &#123;</span><br><span class=\"line\">        $age &#x3D; $birthday;</span><br><span class=\"line\">        if($age &#x3D;&#x3D;&#x3D; false) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        list($y1,$m1,$d1) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$age));</span><br><span class=\"line\">        $now &#x3D; strtotime(&quot;now&quot;);</span><br><span class=\"line\">        list($y2,$m2,$d2) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$now));</span><br><span class=\"line\">        $age &#x3D; $y2 - $y1;</span><br><span class=\"line\">        if((int)($m2.$d2) &lt; (int)($m1.$d1))</span><br><span class=\"line\">            $age -&#x3D; 1;</span><br><span class=\"line\">        return $age;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"秒转化成时分秒显示\"><a href=\"#秒转化成时分秒显示\" class=\"headerlink\" title=\"秒转化成时分秒显示\"></a>秒转化成时分秒显示</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**秒转化成是时分秒</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $seconds</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> string</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeTimeType</span>(<span class=\"params\">$seconds</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($seconds &gt; <span class=\"number\">3600</span>)&#123;</span><br><span class=\"line\">            $hours = intval($seconds/<span class=\"number\">3600</span>);</span><br><span class=\"line\">            $minutes = $seconds % <span class=\"number\">3600</span>;</span><br><span class=\"line\">            $time = $hours.<span class=\"string\">&quot;:&quot;</span>.gmstrftime(<span class=\"string\">&#x27;%M:%S&#x27;</span>, $minutes);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            $time = gmstrftime(<span class=\"string\">&#x27;%H:%M:%S&#x27;</span>, $seconds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $time;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除一个文件夹下面的所有的文件以及文件夹\"><a href=\"#删除一个文件夹下面的所有的文件以及文件夹\" class=\"headerlink\" title=\"删除一个文件夹下面的所有的文件以及文件夹\"></a>删除一个文件夹下面的所有的文件以及文件夹</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delDir</span>(<span class=\"params\">$path</span>)</span>&#123;</span><br><span class=\"line\">        error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如果是目录则继续</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(is_dir($path))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class=\"line\">            $p = scandir($path);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span>($p <span class=\"keyword\">as</span> $val)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//排除目录中的.和..</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>($val !=<span class=\"string\">&quot;.&quot;</span> &amp;&amp; $val !=<span class=\"string\">&quot;..&quot;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//如果是目录则递归子目录，继续操作</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(is_dir($path.$val))&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//子目录中操作删除文件夹和文件</span></span><br><span class=\"line\">                        <span class=\"built_in\">self</span>::deldir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                        <span class=\"comment\">//目录清空后删除空文件夹</span></span><br><span class=\"line\">                        @rmdir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果是文件直接删除</span></span><br><span class=\"line\">                        @unlink($path.$val);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            @rmdir($path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"PHP模拟发送异步请求\"><a href=\"#PHP模拟发送异步请求\" class=\"headerlink\" title=\"PHP模拟发送异步请求\"></a>PHP模拟发送异步请求</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * PHP发送异步请求</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $header</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAsyncRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class=\"number\">1</span>);<span class=\"comment\">//必须加，否则下面设置毫秒级会报错</span></span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class=\"number\">18</span>);<span class=\"comment\">//设置cURL允许执行的最长毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"隐藏手机号中间4位\"><a href=\"#隐藏手机号中间4位\" class=\"headerlink\" title=\"隐藏手机号中间4位\"></a>隐藏手机号中间4位</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blur_phone_number($phoneNum)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $head &#x3D; substr($phoneNum, 0, 3);</span><br><span class=\"line\">        $tail &#x3D; substr($phoneNum, -4, 4);</span><br><span class=\"line\">        return ($head . &#39;****&#39; . $tail);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"取毫秒级时间戳\"><a href=\"#取毫秒级时间戳\" class=\"headerlink\" title=\"取毫秒级时间戳\"></a>取毫秒级时间戳</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;取毫秒级时间戳</span><br><span class=\"line\">function getMillisecond() &#123;</span><br><span class=\"line\">        list($t1, $t2) &#x3D; explode(&#39; &#39;, microtime());</span><br><span class=\"line\">        return (float)sprintf(&#39;%.0f&#39;,(floatval($t1)+floatval($t2))*1000);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"记录平时开发中经常使用的小工具\n跳转链接\n1\n2\n3\n4\n5\n6\n\n\n/**\n * @param string $url 请求地址\n */\nstatic public function location($url){\n   echo \"<script language='javascript'>window.location.href='{$url}';</script>\";\n}\n\n\n请求链接获取数据\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n3","more":"<p><img src=\"https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"记录平时开发中经常使用的小工具\"><a href=\"#记录平时开发中经常使用的小工具\" class=\"headerlink\" title=\"记录平时开发中经常使用的小工具\"></a>记录平时开发中经常使用的小工具</h2><h4 id=\"跳转链接\"><a href=\"#跳转链接\" class=\"headerlink\" title=\"跳转链接\"></a>跳转链接</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">location</span>(<span class=\"params\">$url</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;script language=&#x27;javascript&#x27;&gt;window.location.href=&#x27;<span class=\"subst\">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"请求链接获取数据\"><a href=\"#请求链接获取数据\" class=\"headerlink\" title=\"请求链接获取数据\"></a>请求链接获取数据</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\"><span class=\"comment\">//        print_r($aStatus);die;</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获取客户端IP地址\"><a href=\"#获取客户端IP地址\" class=\"headerlink\" title=\"获取客户端IP地址\"></a>获取客户端IP地址</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取客户端IP地址</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getClientIP</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> $ip = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( $ip !== <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $ip;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $arr = explode( <span class=\"string\">&#x27;,&#x27;</span>, $_SERVER[<span class=\"string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>] );</span><br><span class=\"line\">        $pos = array_search( <span class=\"string\">&#x27;unknown&#x27;</span>, $arr );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( <span class=\"literal\">false</span> !== $pos )</span><br><span class=\"line\">            <span class=\"keyword\">unset</span>( $arr[$pos] );</span><br><span class=\"line\">        $ip = trim( $arr[<span class=\"number\">0</span>] );</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elseif</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;HTTP_CLIENT_IP&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $ip = $_SERVER[<span class=\"string\">&#x27;HTTP_CLIENT_IP&#x27;</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">elseif</span> ( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>] ) ) &#123;</span><br><span class=\"line\">        $ip = $_SERVER[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// IP地址合法验证</span></span><br><span class=\"line\">    $ip = ( <span class=\"literal\">false</span> !== ip2long( $ip ) ) ? $ip : <span class=\"string\">&#x27;0.0.0.0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $ip;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"循环创建目录\"><a href=\"#循环创建目录\" class=\"headerlink\" title=\"循环创建目录\"></a>循环创建目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * @instruction 循环创建目录</span><br><span class=\"line\"> * @param $dir  目录</span><br><span class=\"line\"> * @param $mode 权限</span><br><span class=\"line\"> * @author Barry</span><br><span class=\"line\"> * @date 2017-10-24</span><br><span class=\"line\"> * @version v1.0</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static public function mkdir( $dir, $mode &#x3D; 0777 ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $aimUrl &#x3D; str_replace(&#39;&#39;, &#39;&#x2F;&#39;, $dir);</span><br><span class=\"line\">    $aimDir &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $arr &#x3D; explode(&#39;&#x2F;&#39;, $aimUrl);</span><br><span class=\"line\">    $result &#x3D; true;</span><br><span class=\"line\">    foreach ($arr as $str) &#123;</span><br><span class=\"line\">        $aimDir .&#x3D; $str . &#39;&#x2F;&#39;;</span><br><span class=\"line\">        if (!file_exists($aimDir)) &#123;</span><br><span class=\"line\">            $result &#x3D; mkdir($aimDir, $mode);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符截取，多出的字符串显示省略号\"><a href=\"#字符截取，多出的字符串显示省略号\" class=\"headerlink\" title=\"字符截取，多出的字符串显示省略号\"></a>字符截取，多出的字符串显示省略号</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 字符截取</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $string</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $length</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $dot</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cutstr</span>(<span class=\"params\"> $string, $length, $dot = <span class=\"string\">&#x27;...&#x27;</span>, $charset = <span class=\"string\">&#x27;utf-8&#x27;</span> </span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strlen( $string ) &lt;= $length )</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $string;</span><br><span class=\"line\"></span><br><span class=\"line\">        $pre = chr( <span class=\"number\">1</span> );</span><br><span class=\"line\">        $end = chr( <span class=\"number\">1</span> );</span><br><span class=\"line\">        $string = str_replace( <span class=\"keyword\">array</span> ( <span class=\"string\">&#x27;&amp;amp;&#x27;</span> , <span class=\"string\">&#x27;&amp;quot;&#x27;</span> , <span class=\"string\">&#x27;&amp;lt;&#x27;</span> , <span class=\"string\">&#x27;&amp;gt;&#x27;</span> ), <span class=\"keyword\">array</span> ( $pre . <span class=\"string\">&#x27;&amp;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&quot;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&lt;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&gt;&#x27;</span> . $end ), $string );</span><br><span class=\"line\"></span><br><span class=\"line\">        $strcut = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strtolower( $charset ) == <span class=\"string\">&#x27;utf-8&#x27;</span> ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            $n = $tn = $noc = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ( $n &lt; strlen( $string ) ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                $t = ord( $string[$n] );</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( $t == <span class=\"number\">9</span> || $t == <span class=\"number\">10</span> || ( <span class=\"number\">32</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">126</span> ) ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    $n ++;</span><br><span class=\"line\">                    $noc ++;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">194</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">223</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">2</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">2</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">224</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">239</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">3</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">3</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">240</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">247</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">4</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">4</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( <span class=\"number\">248</span> &lt;= $t &amp;&amp; $t &lt;= <span class=\"number\">251</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">5</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">5</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">elseif</span> ( $t == <span class=\"number\">252</span> || $t == <span class=\"number\">253</span> ) &#123;</span><br><span class=\"line\">                    $tn = <span class=\"number\">6</span>;</span><br><span class=\"line\">                    $n += <span class=\"number\">6</span>;</span><br><span class=\"line\">                    $noc += <span class=\"number\">2</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    $n ++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( $noc &gt;= $length ) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( $noc &gt; $length ) &#123;</span><br><span class=\"line\">                $n -= $tn;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $strcut = substr( $string, <span class=\"number\">0</span>, $n );</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> ( $i = <span class=\"number\">0</span>; $i &lt; $length; $i ++ ) &#123;</span><br><span class=\"line\">                $strcut .= ord( $string[$i] ) &gt; <span class=\"number\">127</span> ? $string[$i] . $string[++ $i] : $string[$i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        $strcut = str_replace( <span class=\"keyword\">array</span> ( $pre . <span class=\"string\">&#x27;&amp;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&quot;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&lt;&#x27;</span> . $end , $pre . <span class=\"string\">&#x27;&gt;&#x27;</span> . $end ), <span class=\"keyword\">array</span> ( <span class=\"string\">&#x27;&amp;amp;&#x27;</span> , <span class=\"string\">&#x27;&amp;quot;&#x27;</span> , <span class=\"string\">&#x27;&amp;lt;&#x27;</span> , <span class=\"string\">&#x27;&amp;gt;&#x27;</span> ), $strcut );</span><br><span class=\"line\"></span><br><span class=\"line\">        $pos = strrpos( $strcut, chr( <span class=\"number\">1</span> ) );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( $pos !== <span class=\"literal\">false</span> ) &#123;</span><br><span class=\"line\">            $strcut = substr( $strcut, <span class=\"number\">0</span>, $pos );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $strcut . $dot;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获得来源类型-post-get\"><a href=\"#获得来源类型-post-get\" class=\"headerlink\" title=\"获得来源类型 post get\"></a>获得来源类型 post get</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">method</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> strtoupper( <span class=\"keyword\">isset</span>( $_SERVER[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] ) ? $_SERVER[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] : <span class=\"string\">&#x27;GET&#x27;</span> );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"转换XML文档为数组\"><a href=\"#转换XML文档为数组\" class=\"headerlink\" title=\"转换XML文档为数组\"></a>转换XML文档为数组</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 转换XML文档为数组</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> string xml内容</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span> mixed 返回的数组，如果失败，返回false</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xmlWx2array</span>(<span class=\"params\">$xml</span>) </span>&#123;</span><br><span class=\"line\">     $xml = (<span class=\"keyword\">Array</span>)simplexml_load_string($xml, <span class=\"string\">&quot;SimpleXMLElement&quot;</span>, LIBXML_NOCDATA);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> $xml;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"正则验证url是否合法\"><a href=\"#正则验证url是否合法\" class=\"headerlink\" title=\"正则验证url是否合法\"></a>正则验证url是否合法</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkUrl</span>(<span class=\"params\">$url</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">&#x27;/^(http|https|ftp):\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&amp;\\+\\%]*/is&#x27;</span>,$url))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"数组转xml\"><a href=\"#数组转xml\" class=\"headerlink\" title=\"数组转xml\"></a>数组转xml</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arrayToXml</span>(<span class=\"params\">$arr</span>) </span>&#123;</span><br><span class=\"line\">     $xml = <span class=\"string\">&quot;&lt;xml&gt;&quot;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $key=&gt;$val) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (is_numeric($val)) &#123;</span><br><span class=\"line\">             $xml.=<span class=\"string\">&quot;&lt;&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>.$val.<span class=\"string\">&quot;&lt;/&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             $xml.=<span class=\"string\">&quot;&lt;&quot;</span>.$key.<span class=\"string\">&quot;&gt;&lt;![CDATA[&quot;</span>.$val.<span class=\"string\">&quot;]]&gt;&lt;/&quot;</span>.$key.<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     $xml.=<span class=\"string\">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class=\"line\">     <span class=\"comment\">//echo $xml;</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> $xml;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二维数组排序\"><a href=\"#二维数组排序\" class=\"headerlink\" title=\"二维数组排序\"></a>二维数组排序</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 二维数组排序</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;B&gt;说明：&lt;/B&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *  略</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;B&gt;示例：&lt;/B&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    *  $array = array(</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">    * )</span></span><br><span class=\"line\"><span class=\"comment\">    * ArrayList::arraySort($array,&#x27;userId&#x27;,&#x27;desc&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">    * 结果</span></span><br><span class=\"line\"><span class=\"comment\">    * \t *  $array = array(</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;3&#x27;,&#x27;name&#x27;=&gt;&#x27;admin3&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    *      array(&#x27;userId&#x27;=&gt;&#x27;2&#x27;,&#x27;name&#x27;=&gt;&#x27;admin2&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">    * \t\tarray(&#x27;userId&#x27;=&gt;&#x27;1&#x27;,&#x27;name&#x27;=&gt;&#x27;admin1&#x27;),</span></span><br><span class=\"line\"><span class=\"comment\">    * )</span></span><br><span class=\"line\"><span class=\"comment\">    *&lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> array $arr 源数组</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> string $key 数据项key</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> string $order 排序规则 desc 降序 asc 升序</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@return</span> int</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arraySort</span>(<span class=\"params\">$arr, $key, $order = <span class=\"string\">&#x27;desc&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">       $keysvalue = $new_array = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> ($arr <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">           $keysvalue[$k] = $v[$key];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">if</span> ($order == <span class=\"string\">&#x27;asc&#x27;</span>) &#123;</span><br><span class=\"line\">           asort($keysvalue);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           arsort($keysvalue);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       reset($keysvalue);</span><br><span class=\"line\">       <span class=\"keyword\">foreach</span> ($keysvalue <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">           $new_array[$k] = $arr[$k];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> $new_array;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"判断是否是微信客户端请求\"><a href=\"#判断是否是微信客户端请求\" class=\"headerlink\" title=\"判断是否是微信客户端请求\"></a>判断是否是微信客户端请求</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isWeixin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( strpos($_SERVER[<span class=\"string\">&#x27;HTTP_USER_AGENT&#x27;</span>], <span class=\"string\">&#x27;MicroMessenger&#x27;</span>) !== <span class=\"literal\">false</span> ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"计算两组经纬度坐标之间的距离\"><a href=\"#计算两组经纬度坐标之间的距离\" class=\"headerlink\" title=\"计算两组经纬度坐标之间的距离\"></a>计算两组经纬度坐标之间的距离</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 计算两组经纬度坐标 之间的距离</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lat1 纬度1；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lng1 经度1；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lat2 纬度2；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $lng2 经度2；</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> $len_type （1:m or 2:km);</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> m or km</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDistance</span>(<span class=\"params\">$lat1, $lng1, $lat2, $lng2, $len_type = <span class=\"number\">1</span>, $decimal = <span class=\"number\">2</span></span>) </span>&#123;</span><br><span class=\"line\">    $EARTH_RADIUS=<span class=\"number\">6378.137</span>;</span><br><span class=\"line\">    $PI=<span class=\"number\">3.1415926</span>;</span><br><span class=\"line\">    $radLat1 = $lat1 * $PI / <span class=\"number\">180.0</span>;</span><br><span class=\"line\">    $radLat2 = $lat2 * $PI / <span class=\"number\">180.0</span>;</span><br><span class=\"line\">    $a = $radLat1 - $radLat2;</span><br><span class=\"line\">    $b = ($lng1 * $PI / <span class=\"number\">180.0</span>) - ($lng2 * $PI / <span class=\"number\">180.0</span>);</span><br><span class=\"line\">    $s = <span class=\"number\">2</span> * asin(sqrt(pow(sin($a/<span class=\"number\">2</span>),<span class=\"number\">2</span>) + cos($radLat1) * cos($radLat2) * pow(sin($b/<span class=\"number\">2</span>),<span class=\"number\">2</span>)));</span><br><span class=\"line\">    $s = $s * $EARTH_RADIUS; $s = round($s * <span class=\"number\">1000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($len_type &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        $s /= <span class=\"number\">1000</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> round($s,$decimal);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\"><a href=\"#将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\" class=\"headerlink\" title=\"将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等\"></a>将时间戳显示为刚刚、几分钟前、几小时前、昨天、前天等</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\"> * 时间格式化 传入时间戳~~~~</span><br><span class=\"line\"> *&#x2F;</span><br><span class=\"line\">static public function formatDate($time)&#123;</span><br><span class=\"line\">    $rtime &#x3D; date ( &quot;m-d H:i&quot;, $time );</span><br><span class=\"line\">    $htime &#x3D; date ( &quot;H:i&quot;, $time );</span><br><span class=\"line\"></span><br><span class=\"line\">    $time &#x3D; time () - $time;</span><br><span class=\"line\"></span><br><span class=\"line\">    if ($time &lt; 60) &#123;</span><br><span class=\"line\">        $str &#x3D; &#39;刚刚&#39;;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60) &#123;</span><br><span class=\"line\">        $min &#x3D; floor ( $time &#x2F; 60 );</span><br><span class=\"line\">        $str &#x3D; $min . &#39;分钟前&#39;;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60 * 24) &#123;</span><br><span class=\"line\">        $h &#x3D; floor ( $time &#x2F; (60 * 60) );</span><br><span class=\"line\">        $str &#x3D; $h . &#39;小时前 &#39; . $htime;</span><br><span class=\"line\">    &#125; elseif ($time &lt; 60 * 60 * 24 * 3) &#123;</span><br><span class=\"line\">        $d &#x3D; floor ( $time &#x2F; (60 * 60 * 24) );</span><br><span class=\"line\">        if ($d &#x3D;&#x3D; 1)</span><br><span class=\"line\">            $str &#x3D; &#39;昨天 &#39; . $rtime;</span><br><span class=\"line\">        else</span><br><span class=\"line\">            $str &#x3D; &#39;前天 &#39; . $rtime;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        $str &#x3D; $rtime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return $str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"求两个日期之间相差的天数\"><a href=\"#求两个日期之间相差的天数\" class=\"headerlink\" title=\"求两个日期之间相差的天数\"></a>求两个日期之间相差的天数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span><br><span class=\"line\">     * 求两个日期之间相差的天数</span><br><span class=\"line\">     * @param string $datetime1</span><br><span class=\"line\">     * @param string $datetime2</span><br><span class=\"line\">     * @return number</span><br><span class=\"line\">     *&#x2F;</span><br><span class=\"line\">    static public function diffBetweenTwoDays($datetime1, $datetime2) &#123;</span><br><span class=\"line\">        $second1 &#x3D; strtotime($datetime1);</span><br><span class=\"line\">        $second2 &#x3D; strtotime($datetime2);</span><br><span class=\"line\"></span><br><span class=\"line\">        if ($second1 &lt; $second2) &#123;</span><br><span class=\"line\">            $tmp &#x3D; $second2;</span><br><span class=\"line\">            $second2 &#x3D; $second1;</span><br><span class=\"line\">            $second1 &#x3D; $tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return bcdiv(bcsub($second1, $second2, 3), 86400, 3);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"根据生日计算年龄\"><a href=\"#根据生日计算年龄\" class=\"headerlink\" title=\"根据生日计算年龄\"></a>根据生日计算年龄</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static public function Birthday($birthday) &#123;</span><br><span class=\"line\">        $age &#x3D; $birthday;</span><br><span class=\"line\">        if($age &#x3D;&#x3D;&#x3D; false) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        list($y1,$m1,$d1) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$age));</span><br><span class=\"line\">        $now &#x3D; strtotime(&quot;now&quot;);</span><br><span class=\"line\">        list($y2,$m2,$d2) &#x3D; explode(&quot;-&quot;,date(&quot;Y-m-d&quot;,$now));</span><br><span class=\"line\">        $age &#x3D; $y2 - $y1;</span><br><span class=\"line\">        if((int)($m2.$d2) &lt; (int)($m1.$d1))</span><br><span class=\"line\">            $age -&#x3D; 1;</span><br><span class=\"line\">        return $age;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"秒转化成时分秒显示\"><a href=\"#秒转化成时分秒显示\" class=\"headerlink\" title=\"秒转化成时分秒显示\"></a>秒转化成时分秒显示</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**秒转化成是时分秒</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $seconds</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> string</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeTimeType</span>(<span class=\"params\">$seconds</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($seconds &gt; <span class=\"number\">3600</span>)&#123;</span><br><span class=\"line\">            $hours = intval($seconds/<span class=\"number\">3600</span>);</span><br><span class=\"line\">            $minutes = $seconds % <span class=\"number\">3600</span>;</span><br><span class=\"line\">            $time = $hours.<span class=\"string\">&quot;:&quot;</span>.gmstrftime(<span class=\"string\">&#x27;%M:%S&#x27;</span>, $minutes);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            $time = gmstrftime(<span class=\"string\">&#x27;%H:%M:%S&#x27;</span>, $seconds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $time;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除一个文件夹下面的所有的文件以及文件夹\"><a href=\"#删除一个文件夹下面的所有的文件以及文件夹\" class=\"headerlink\" title=\"删除一个文件夹下面的所有的文件以及文件夹\"></a>删除一个文件夹下面的所有的文件以及文件夹</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delDir</span>(<span class=\"params\">$path</span>)</span>&#123;</span><br><span class=\"line\">        error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如果是目录则继续</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(is_dir($path))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class=\"line\">            $p = scandir($path);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span>($p <span class=\"keyword\">as</span> $val)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//排除目录中的.和..</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>($val !=<span class=\"string\">&quot;.&quot;</span> &amp;&amp; $val !=<span class=\"string\">&quot;..&quot;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//如果是目录则递归子目录，继续操作</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(is_dir($path.$val))&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//子目录中操作删除文件夹和文件</span></span><br><span class=\"line\">                        <span class=\"built_in\">self</span>::deldir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                        <span class=\"comment\">//目录清空后删除空文件夹</span></span><br><span class=\"line\">                        @rmdir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果是文件直接删除</span></span><br><span class=\"line\">                        @unlink($path.$val);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            @rmdir($path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"PHP模拟发送异步请求\"><a href=\"#PHP模拟发送异步请求\" class=\"headerlink\" title=\"PHP模拟发送异步请求\"></a>PHP模拟发送异步请求</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * PHP发送异步请求</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $header</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> boolean</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAsyncRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class=\"number\">1</span>);<span class=\"comment\">//必须加，否则下面设置毫秒级会报错</span></span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class=\"number\">18</span>);<span class=\"comment\">//设置cURL允许执行的最长毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"隐藏手机号中间4位\"><a href=\"#隐藏手机号中间4位\" class=\"headerlink\" title=\"隐藏手机号中间4位\"></a>隐藏手机号中间4位</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function blur_phone_number($phoneNum)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $head &#x3D; substr($phoneNum, 0, 3);</span><br><span class=\"line\">        $tail &#x3D; substr($phoneNum, -4, 4);</span><br><span class=\"line\">        return ($head . &#39;****&#39; . $tail);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n<h4 id=\"取毫秒级时间戳\"><a href=\"#取毫秒级时间戳\" class=\"headerlink\" title=\"取毫秒级时间戳\"></a>取毫秒级时间戳</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;取毫秒级时间戳</span><br><span class=\"line\">function getMillisecond() &#123;</span><br><span class=\"line\">        list($t1, $t2) &#x3D; explode(&#39; &#39;, microtime());</span><br><span class=\"line\">        return (float)sprintf(&#39;%.0f&#39;,(floatval($t1)+floatval($t2))*1000);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Yii 根据公司id来产品分表，以及读取产品表时的一些操作","date":"2020-03-03T03:43:36.000Z","updated":"2020-03-03T05:47:29.000Z","_content":"![](https://img.hacpai.com/bing/20180314.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n###### 由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\n\n###### 当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\n\n## 开发环境\n\n `PHP` `Yii` `MySql` \n\n## 如何创建产品表\n\n#### 在添加一个公司的信息时自动创建公司对应的产品表\n\n```php\n//新增一个公司信息，返回公司id\n$companyId= $this->CompanyModel()->add($data);\nif (false !== $companyId) {\n    //创建公司对应的产品表\n    ProductTable::create($companyId);\n    Tools::sendJson(0, \"添加成功\", \\Yii::$app->urlManager->createUrl(['company/lists']));\n} else {\n    Tools::sendJson(40000205, \"添加失败\");\n}\n```\n\n#### ProductTable::create($companyId) 方法的实现\n\n```php\nclass ProductTable\n{\n    static public function create($companyId){\n        $tableName = 'test_product_'.$companyId;\n        $sql = <<<EOT\nCREATE TABLE if not exists `$tableName` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `cid` int(11) unsigned NOT NULL COMMENT '公司id',\n  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '产品名称',\n  `barcode` varchar(30) NOT NULL DEFAULT '' COMMENT '条码',\n  `image` varchar(225) NOT NULL DEFAULT '' COMMENT '产品图片',\n  `company_classify_id` int(11) unsigned NOT NULL COMMENT '公司分类id',\n  `size` varchar(20) NOT NULL COMMENT '规格',\n  `expire_date` date NOT NULL COMMENT '保质期',\n  `production_date` datetime NOT NULL COMMENT '生产日期',\n  `batch_num` varchar(20) DEFAULT NULL COMMENT '生产批次',\n  `status` tinyint(2) unsigned NOT NULL COMMENT '状态：0，停用；1，启用',\n  `classify_id` int(11) unsigned NOT NULL COMMENT '系统分类id',\n  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',\n  `created_id` int(11) unsigned DEFAULT NULL COMMENT '创建者id',\n  `updated_id` int(11) unsigned DEFAULT NULL COMMENT '更新者id',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COMMENT='公司产品信息表';\nEOT;\n\n        $connection = Yii::$app->db;\n        $command = $connection->createCommand($sql);\n        $rowCount = $command->execute();\n        return $rowCount;\n\n    }\n\n}\n```\n\n## 如何调用产品表，将产品存入对应公司的产品表\n\n#### 当添加产品信息时\n\n```php\n$data = array(\n            'cid' => $companyId,\n            'name' => $name,\n            'barcode' => $barcode,\n            'image' => $res['url'],\n            'company_classify_id' => $company_classify_id,\n            'classify_id' => $classify_id,\n            'size' => $size,\n            'expire_date' => $expire_date,\n            'production_date' => $production_date,\n            'created_id' => Yii::$app->user->id,\n            'status' => $status,\n        );\n$result = $this->ProductModel($companyId)->add($data);\n```\n\n#### ProductModel($companyId)的实现\n\n```php\n protected function ProductModel($companyId){\n        ProductModel::resetPartitionIndex($companyId);\n        return new ProductModel();\n  }\n```\n\n#### ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作\n\n```php\n/**\n * This is the model class for table \"{{%test_product}}\".\n\n */\nclass ProductModel extends \\common\\PopToolActiveRecord\n{\n\n    static private $partitionIndex;\n\n\n    /**\n     * 初始化 partitionIndex\n     * @param $companyId\n     */\n    static public function resetPartitionIndex($companyId){\n        self::$partitionIndex = '_'.$companyId;\n    }\n\n    /**\n     * 将表名拼接上公司id\n     * @inheritdoc\n     */\n    public static function tableName()\n    {\n        return '{{test_product'.self::$partitionIndex.'}}';\n    }\n\n\n    /**\n     * 添加\n     */\n    public function add($data = []) {\n        $mix_result = false;\n        if(true == empty($data)) {\n            return $mix_result;\n        }\n        PopToolActiveRecord::beginTransaction();\n        try {\n\n            $result = $this->setData($data)->insert();\n            if (false == $result) {\n                throw new \\Exception(\"添加信息失败，请重试\", 1004001);\n            }\n            $int_adves_id = (int)$this->id;\n\n            PopToolActiveRecord::commit();\n            $mix_result = $int_adves_id;\n        } catch(\\Exception $e) {\n            PopToolActiveRecord::rollback();\n            $mix_result = false;\n        }\n\n        return $mix_result;\n    }\n\n\n   /*下面是具体对tableName进行增删改查的函数实现就不一一列出了*/\n```\n\n- ps：以前的写业务时遇到的问题以及处理方案，拿出来做一下笔记。\n","source":"_posts/202003/Yii根据公司id来产品分表以及读取产品表时的一些操作.md","raw":"title: Yii 根据公司id来产品分表，以及读取产品表时的一些操作\ndate: '2020-03-03 11:43:36'\nupdated: '2020-03-03 13:47:29'\ntags: [PHP, mysql, Yii]\npermalink: /articles/2020/03/03/1583207015907.html\n---\n![](https://img.hacpai.com/bing/20180314.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n###### 由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\n\n###### 当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\n\n## 开发环境\n\n `PHP` `Yii` `MySql` \n\n## 如何创建产品表\n\n#### 在添加一个公司的信息时自动创建公司对应的产品表\n\n```php\n//新增一个公司信息，返回公司id\n$companyId= $this->CompanyModel()->add($data);\nif (false !== $companyId) {\n    //创建公司对应的产品表\n    ProductTable::create($companyId);\n    Tools::sendJson(0, \"添加成功\", \\Yii::$app->urlManager->createUrl(['company/lists']));\n} else {\n    Tools::sendJson(40000205, \"添加失败\");\n}\n```\n\n#### ProductTable::create($companyId) 方法的实现\n\n```php\nclass ProductTable\n{\n    static public function create($companyId){\n        $tableName = 'test_product_'.$companyId;\n        $sql = <<<EOT\nCREATE TABLE if not exists `$tableName` (\n  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  `cid` int(11) unsigned NOT NULL COMMENT '公司id',\n  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '产品名称',\n  `barcode` varchar(30) NOT NULL DEFAULT '' COMMENT '条码',\n  `image` varchar(225) NOT NULL DEFAULT '' COMMENT '产品图片',\n  `company_classify_id` int(11) unsigned NOT NULL COMMENT '公司分类id',\n  `size` varchar(20) NOT NULL COMMENT '规格',\n  `expire_date` date NOT NULL COMMENT '保质期',\n  `production_date` datetime NOT NULL COMMENT '生产日期',\n  `batch_num` varchar(20) DEFAULT NULL COMMENT '生产批次',\n  `status` tinyint(2) unsigned NOT NULL COMMENT '状态：0，停用；1，启用',\n  `classify_id` int(11) unsigned NOT NULL COMMENT '系统分类id',\n  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',\n  `created_id` int(11) unsigned DEFAULT NULL COMMENT '创建者id',\n  `updated_id` int(11) unsigned DEFAULT NULL COMMENT '更新者id',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COMMENT='公司产品信息表';\nEOT;\n\n        $connection = Yii::$app->db;\n        $command = $connection->createCommand($sql);\n        $rowCount = $command->execute();\n        return $rowCount;\n\n    }\n\n}\n```\n\n## 如何调用产品表，将产品存入对应公司的产品表\n\n#### 当添加产品信息时\n\n```php\n$data = array(\n            'cid' => $companyId,\n            'name' => $name,\n            'barcode' => $barcode,\n            'image' => $res['url'],\n            'company_classify_id' => $company_classify_id,\n            'classify_id' => $classify_id,\n            'size' => $size,\n            'expire_date' => $expire_date,\n            'production_date' => $production_date,\n            'created_id' => Yii::$app->user->id,\n            'status' => $status,\n        );\n$result = $this->ProductModel($companyId)->add($data);\n```\n\n#### ProductModel($companyId)的实现\n\n```php\n protected function ProductModel($companyId){\n        ProductModel::resetPartitionIndex($companyId);\n        return new ProductModel();\n  }\n```\n\n#### ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作\n\n```php\n/**\n * This is the model class for table \"{{%test_product}}\".\n\n */\nclass ProductModel extends \\common\\PopToolActiveRecord\n{\n\n    static private $partitionIndex;\n\n\n    /**\n     * 初始化 partitionIndex\n     * @param $companyId\n     */\n    static public function resetPartitionIndex($companyId){\n        self::$partitionIndex = '_'.$companyId;\n    }\n\n    /**\n     * 将表名拼接上公司id\n     * @inheritdoc\n     */\n    public static function tableName()\n    {\n        return '{{test_product'.self::$partitionIndex.'}}';\n    }\n\n\n    /**\n     * 添加\n     */\n    public function add($data = []) {\n        $mix_result = false;\n        if(true == empty($data)) {\n            return $mix_result;\n        }\n        PopToolActiveRecord::beginTransaction();\n        try {\n\n            $result = $this->setData($data)->insert();\n            if (false == $result) {\n                throw new \\Exception(\"添加信息失败，请重试\", 1004001);\n            }\n            $int_adves_id = (int)$this->id;\n\n            PopToolActiveRecord::commit();\n            $mix_result = $int_adves_id;\n        } catch(\\Exception $e) {\n            PopToolActiveRecord::rollback();\n            $mix_result = false;\n        }\n\n        return $mix_result;\n    }\n\n\n   /*下面是具体对tableName进行增删改查的函数实现就不一一列出了*/\n```\n\n- ps：以前的写业务时遇到的问题以及处理方案，拿出来做一下笔记。\n","slug":"202003/Yii根据公司id来产品分表以及读取产品表时的一些操作","published":1,"__permalink":"/articles/2020/03/03/1583207015907.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzut0009ogfda8ue9t4e","content":"<p><img src=\"https://img.hacpai.com/bing/20180314.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><h6 id=\"由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\"><a href=\"#由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\" class=\"headerlink\" title=\"由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\"></a>由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。</h6><h6 id=\"当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\"><a href=\"#当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\" class=\"headerlink\" title=\"当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\"></a>当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。</h6><h2 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><p> <code>PHP</code> <code>Yii</code> <code>MySql</code> </p>\n<h2 id=\"如何创建产品表\"><a href=\"#如何创建产品表\" class=\"headerlink\" title=\"如何创建产品表\"></a>如何创建产品表</h2><h4 id=\"在添加一个公司的信息时自动创建公司对应的产品表\"><a href=\"#在添加一个公司的信息时自动创建公司对应的产品表\" class=\"headerlink\" title=\"在添加一个公司的信息时自动创建公司对应的产品表\"></a>在添加一个公司的信息时自动创建公司对应的产品表</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//新增一个公司信息，返回公司id</span></span><br><span class=\"line\">$companyId= <span class=\"keyword\">$this</span>-&gt;CompanyModel()-&gt;add($data);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">false</span> !== $companyId) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建公司对应的产品表</span></span><br><span class=\"line\">    ProductTable::create($companyId);</span><br><span class=\"line\">    Tools::sendJson(<span class=\"number\">0</span>, <span class=\"string\">&quot;添加成功&quot;</span>, \\Yii::$app-&gt;urlManager-&gt;createUrl([<span class=\"string\">&#x27;company/lists&#x27;</span>]));</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    Tools::sendJson(<span class=\"number\">40000205</span>, <span class=\"string\">&quot;添加失败&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductTable-create-companyId-方法的实现\"><a href=\"#ProductTable-create-companyId-方法的实现\" class=\"headerlink\" title=\"ProductTable::create($companyId) 方法的实现\"></a>ProductTable::create($companyId) 方法的实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductTable</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">create</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">        $tableName = <span class=\"string\">&#x27;test_product_&#x27;</span>.$companyId;</span><br><span class=\"line\">        $sql = &lt;&lt;&lt;EOT</span><br><span class=\"line\">CREATE TABLE <span class=\"keyword\">if</span> not exists `$tableName` (</span><br><span class=\"line\">  `id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `cid` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;公司id&#x27;</span>,</span><br><span class=\"line\">  `name` varchar(<span class=\"number\">30</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;产品名称&#x27;</span>,</span><br><span class=\"line\">  `barcode` varchar(<span class=\"number\">30</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;条码&#x27;</span>,</span><br><span class=\"line\">  `image` varchar(<span class=\"number\">225</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;产品图片&#x27;</span>,</span><br><span class=\"line\">  `company_classify_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;公司分类id&#x27;</span>,</span><br><span class=\"line\">  `size` varchar(<span class=\"number\">20</span>) NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;规格&#x27;</span>,</span><br><span class=\"line\">  `expire_date` date NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;保质期&#x27;</span>,</span><br><span class=\"line\">  `production_date` datetime NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;生产日期&#x27;</span>,</span><br><span class=\"line\">  `batch_num` varchar(<span class=\"number\">20</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;生产批次&#x27;</span>,</span><br><span class=\"line\">  `status` tinyint(<span class=\"number\">2</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;状态：0，停用；1，启用&#x27;</span>,</span><br><span class=\"line\">  `classify_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;系统分类id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime <span class=\"keyword\">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime <span class=\"keyword\">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `created_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;创建者id&#x27;</span>,</span><br><span class=\"line\">  `updated_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;更新者id&#x27;</span>,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=<span class=\"number\">1</span> <span class=\"keyword\">DEFAULT</span> CHARSET=utf8mb4 COMMENT=<span class=\"string\">&#x27;公司产品信息表&#x27;</span>;</span><br><span class=\"line\">EOT;</span><br><span class=\"line\"></span><br><span class=\"line\">        $connection = Yii::$app-&gt;db;</span><br><span class=\"line\">        $command = $connection-&gt;createCommand($sql);</span><br><span class=\"line\">        $rowCount = $command-&gt;execute();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $rowCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何调用产品表，将产品存入对应公司的产品表\"><a href=\"#如何调用产品表，将产品存入对应公司的产品表\" class=\"headerlink\" title=\"如何调用产品表，将产品存入对应公司的产品表\"></a>如何调用产品表，将产品存入对应公司的产品表</h2><h4 id=\"当添加产品信息时\"><a href=\"#当添加产品信息时\" class=\"headerlink\" title=\"当添加产品信息时\"></a>当添加产品信息时</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$data = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;cid&#x27;</span> =&gt; $companyId,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span> =&gt; $name,</span><br><span class=\"line\">            <span class=\"string\">&#x27;barcode&#x27;</span> =&gt; $barcode,</span><br><span class=\"line\">            <span class=\"string\">&#x27;image&#x27;</span> =&gt; $res[<span class=\"string\">&#x27;url&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;company_classify_id&#x27;</span> =&gt; $company_classify_id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;classify_id&#x27;</span> =&gt; $classify_id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;size&#x27;</span> =&gt; $size,</span><br><span class=\"line\">            <span class=\"string\">&#x27;expire_date&#x27;</span> =&gt; $expire_date,</span><br><span class=\"line\">            <span class=\"string\">&#x27;production_date&#x27;</span> =&gt; $production_date,</span><br><span class=\"line\">            <span class=\"string\">&#x27;created_id&#x27;</span> =&gt; Yii::$app-&gt;user-&gt;id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span> =&gt; $status,</span><br><span class=\"line\">        );</span><br><span class=\"line\">$result = <span class=\"keyword\">$this</span>-&gt;ProductModel($companyId)-&gt;add($data);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductModel-companyId-的实现\"><a href=\"#ProductModel-companyId-的实现\" class=\"headerlink\" title=\"ProductModel($companyId)的实现\"></a>ProductModel($companyId)的实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ProductModel</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">       ProductModel::resetPartitionIndex($companyId);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ProductModel();</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作\"><a href=\"#ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作\" class=\"headerlink\" title=\"ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作\"></a>ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is the model class for table &quot;&#123;&#123;%test_product&#125;&#125;&quot;.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductModel</span> <span class=\"keyword\">extends</span> \\<span class=\"title\">common</span>\\<span class=\"title\">PopToolActiveRecord</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">private</span> $partitionIndex;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化 partitionIndex</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $companyId</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resetPartitionIndex</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">self</span>::$partitionIndex = <span class=\"string\">&#x27;_&#x27;</span>.$companyId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将表名拼接上公司id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@inheritdoc</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">tableName</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#123;&#123;test_product&#x27;</span>.<span class=\"built_in\">self</span>::$partitionIndex.<span class=\"string\">&#x27;&#125;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">$data = []</span>) </span>&#123;</span><br><span class=\"line\">        $mix_result = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"literal\">true</span> == <span class=\"keyword\">empty</span>($data)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $mix_result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        PopToolActiveRecord::beginTransaction();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            $result = <span class=\"keyword\">$this</span>-&gt;setData($data)-&gt;insert();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == $result) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"built_in\">Exception</span>(<span class=\"string\">&quot;添加信息失败，请重试&quot;</span>, <span class=\"number\">1004001</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $int_adves_id = (<span class=\"keyword\">int</span>)<span class=\"keyword\">$this</span>-&gt;id;</span><br><span class=\"line\"></span><br><span class=\"line\">            PopToolActiveRecord::commit();</span><br><span class=\"line\">            $mix_result = $int_adves_id;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(\\<span class=\"built_in\">Exception</span> $e) &#123;</span><br><span class=\"line\">            PopToolActiveRecord::rollback();</span><br><span class=\"line\">            $mix_result = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $mix_result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/*下面是具体对tableName进行增删改查的函数实现就不一一列出了*/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ps：以前的写业务时遇到的问题以及处理方案，拿出来做一下笔记。</li>\n</ul>\n","site":{"data":{}},"excerpt":"场景描述\n由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\n当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\n开发环境\n PHP Yii MySql \n\n如何创建产品表\n在添加一个公司的信息时自动创建公司对应的产品表\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n//新增一个公司信息，返回公司id\n$companyId= $this->CompanyMode","more":"<p><img src=\"https://img.hacpai.com/bing/20180314.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><h6 id=\"由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\"><a href=\"#由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的-id-来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\" class=\"headerlink\" title=\"由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。\"></a>由于业务需求要存储很多家的公司以及公司的产品详情，那我就想着根据公司的 id 来建立一一对应的产品详情表。这样便于管理，也分摊了只有一张产品表的查询压力，也会优化查询的速度。</h6><h6 id=\"当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\"><a href=\"#当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品-id-取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\" class=\"headerlink\" title=\"当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。\"></a>当然如果一个公司的产品足够多，那么也要对于该公司对应的产品表进行分表。这时分表的核心思想可以采取对产品 id 取余的方式存储、读取。这个方式在这篇笔记里就不详细说明了。</h6><h2 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><p> <code>PHP</code> <code>Yii</code> <code>MySql</code> </p>\n<h2 id=\"如何创建产品表\"><a href=\"#如何创建产品表\" class=\"headerlink\" title=\"如何创建产品表\"></a>如何创建产品表</h2><h4 id=\"在添加一个公司的信息时自动创建公司对应的产品表\"><a href=\"#在添加一个公司的信息时自动创建公司对应的产品表\" class=\"headerlink\" title=\"在添加一个公司的信息时自动创建公司对应的产品表\"></a>在添加一个公司的信息时自动创建公司对应的产品表</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//新增一个公司信息，返回公司id</span></span><br><span class=\"line\">$companyId= <span class=\"keyword\">$this</span>-&gt;CompanyModel()-&gt;add($data);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">false</span> !== $companyId) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建公司对应的产品表</span></span><br><span class=\"line\">    ProductTable::create($companyId);</span><br><span class=\"line\">    Tools::sendJson(<span class=\"number\">0</span>, <span class=\"string\">&quot;添加成功&quot;</span>, \\Yii::$app-&gt;urlManager-&gt;createUrl([<span class=\"string\">&#x27;company/lists&#x27;</span>]));</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    Tools::sendJson(<span class=\"number\">40000205</span>, <span class=\"string\">&quot;添加失败&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductTable-create-companyId-方法的实现\"><a href=\"#ProductTable-create-companyId-方法的实现\" class=\"headerlink\" title=\"ProductTable::create($companyId) 方法的实现\"></a>ProductTable::create($companyId) 方法的实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductTable</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">create</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">        $tableName = <span class=\"string\">&#x27;test_product_&#x27;</span>.$companyId;</span><br><span class=\"line\">        $sql = &lt;&lt;&lt;EOT</span><br><span class=\"line\">CREATE TABLE <span class=\"keyword\">if</span> not exists `$tableName` (</span><br><span class=\"line\">  `id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `cid` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;公司id&#x27;</span>,</span><br><span class=\"line\">  `name` varchar(<span class=\"number\">30</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;产品名称&#x27;</span>,</span><br><span class=\"line\">  `barcode` varchar(<span class=\"number\">30</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;条码&#x27;</span>,</span><br><span class=\"line\">  `image` varchar(<span class=\"number\">225</span>) NOT <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;产品图片&#x27;</span>,</span><br><span class=\"line\">  `company_classify_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;公司分类id&#x27;</span>,</span><br><span class=\"line\">  `size` varchar(<span class=\"number\">20</span>) NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;规格&#x27;</span>,</span><br><span class=\"line\">  `expire_date` date NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;保质期&#x27;</span>,</span><br><span class=\"line\">  `production_date` datetime NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;生产日期&#x27;</span>,</span><br><span class=\"line\">  `batch_num` varchar(<span class=\"number\">20</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;生产批次&#x27;</span>,</span><br><span class=\"line\">  `status` tinyint(<span class=\"number\">2</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;状态：0，停用；1，启用&#x27;</span>,</span><br><span class=\"line\">  `classify_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned NOT <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;系统分类id&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime <span class=\"keyword\">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class=\"string\">&#x27;创建时间&#x27;</span>,</span><br><span class=\"line\">  `update_time` datetime <span class=\"keyword\">DEFAULT</span> CURRENT_TIMESTAMP COMMENT <span class=\"string\">&#x27;更新时间&#x27;</span>,</span><br><span class=\"line\">  `created_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;创建者id&#x27;</span>,</span><br><span class=\"line\">  `updated_id` <span class=\"keyword\">int</span>(<span class=\"number\">11</span>) unsigned <span class=\"keyword\">DEFAULT</span> <span class=\"literal\">NULL</span> COMMENT <span class=\"string\">&#x27;更新者id&#x27;</span>,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=<span class=\"number\">1</span> <span class=\"keyword\">DEFAULT</span> CHARSET=utf8mb4 COMMENT=<span class=\"string\">&#x27;公司产品信息表&#x27;</span>;</span><br><span class=\"line\">EOT;</span><br><span class=\"line\"></span><br><span class=\"line\">        $connection = Yii::$app-&gt;db;</span><br><span class=\"line\">        $command = $connection-&gt;createCommand($sql);</span><br><span class=\"line\">        $rowCount = $command-&gt;execute();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> $rowCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何调用产品表，将产品存入对应公司的产品表\"><a href=\"#如何调用产品表，将产品存入对应公司的产品表\" class=\"headerlink\" title=\"如何调用产品表，将产品存入对应公司的产品表\"></a>如何调用产品表，将产品存入对应公司的产品表</h2><h4 id=\"当添加产品信息时\"><a href=\"#当添加产品信息时\" class=\"headerlink\" title=\"当添加产品信息时\"></a>当添加产品信息时</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$data = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">            <span class=\"string\">&#x27;cid&#x27;</span> =&gt; $companyId,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name&#x27;</span> =&gt; $name,</span><br><span class=\"line\">            <span class=\"string\">&#x27;barcode&#x27;</span> =&gt; $barcode,</span><br><span class=\"line\">            <span class=\"string\">&#x27;image&#x27;</span> =&gt; $res[<span class=\"string\">&#x27;url&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;company_classify_id&#x27;</span> =&gt; $company_classify_id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;classify_id&#x27;</span> =&gt; $classify_id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;size&#x27;</span> =&gt; $size,</span><br><span class=\"line\">            <span class=\"string\">&#x27;expire_date&#x27;</span> =&gt; $expire_date,</span><br><span class=\"line\">            <span class=\"string\">&#x27;production_date&#x27;</span> =&gt; $production_date,</span><br><span class=\"line\">            <span class=\"string\">&#x27;created_id&#x27;</span> =&gt; Yii::$app-&gt;user-&gt;id,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span> =&gt; $status,</span><br><span class=\"line\">        );</span><br><span class=\"line\">$result = <span class=\"keyword\">$this</span>-&gt;ProductModel($companyId)-&gt;add($data);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductModel-companyId-的实现\"><a href=\"#ProductModel-companyId-的实现\" class=\"headerlink\" title=\"ProductModel($companyId)的实现\"></a>ProductModel($companyId)的实现</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ProductModel</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">       ProductModel::resetPartitionIndex($companyId);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ProductModel();</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作\"><a href=\"#ProductModel-resetPartitionIndex-cid-的实现以及数据表的操作\" class=\"headerlink\" title=\"ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作\"></a>ProductModel::resetPartitionIndex($cid)的实现以及数据表的操作</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is the model class for table &quot;&#123;&#123;%test_product&#125;&#125;&quot;.</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductModel</span> <span class=\"keyword\">extends</span> \\<span class=\"title\">common</span>\\<span class=\"title\">PopToolActiveRecord</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">private</span> $partitionIndex;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化 partitionIndex</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $companyId</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resetPartitionIndex</span>(<span class=\"params\">$companyId</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">self</span>::$partitionIndex = <span class=\"string\">&#x27;_&#x27;</span>.$companyId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将表名拼接上公司id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@inheritdoc</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">tableName</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#123;&#123;test_product&#x27;</span>.<span class=\"built_in\">self</span>::$partitionIndex.<span class=\"string\">&#x27;&#125;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">$data = []</span>) </span>&#123;</span><br><span class=\"line\">        $mix_result = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"literal\">true</span> == <span class=\"keyword\">empty</span>($data)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $mix_result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        PopToolActiveRecord::beginTransaction();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            $result = <span class=\"keyword\">$this</span>-&gt;setData($data)-&gt;insert();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == $result) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> \\<span class=\"built_in\">Exception</span>(<span class=\"string\">&quot;添加信息失败，请重试&quot;</span>, <span class=\"number\">1004001</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            $int_adves_id = (<span class=\"keyword\">int</span>)<span class=\"keyword\">$this</span>-&gt;id;</span><br><span class=\"line\"></span><br><span class=\"line\">            PopToolActiveRecord::commit();</span><br><span class=\"line\">            $mix_result = $int_adves_id;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(\\<span class=\"built_in\">Exception</span> $e) &#123;</span><br><span class=\"line\">            PopToolActiveRecord::rollback();</span><br><span class=\"line\">            $mix_result = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $mix_result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/*下面是具体对tableName进行增删改查的函数实现就不一一列出了*/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ps：以前的写业务时遇到的问题以及处理方案，拿出来做一下笔记。</li>\n</ul>\n"},{"title":"如何使用github当作自己的静态文件库","date":"2020-03-11T09:33:38.000Z","updated":"2020-04-22T14:11:21.000Z","_content":"![](https://img.hacpai.com/bing/20200218.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 场景描述\n\n很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。\n\n## 一、在 GitHub 上创建一个图床仓库\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-c1eaf3b5.png)\n\n- PS：一定要选 Public 不然无法访问到资源\n\n## 二、将项目克隆到本地\n\n```shell\n git clone git@github.com:barryzpc/pic-repo.git\n```\n\n## 三、创建自己的项目\n\n#### 在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-589b7be6.png)\n\n## 四、添加静态文件到对应的目录中\n\n#### 比如，我添加一张图片到我的 img 目录下\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-7f90875c.png)\n\n ## 五、提交到 GitHub\n\n```\ngit add .\ngit commit -m \"add pic\"\ngit push \n```\n\n这时图片的已经提交到 GitHub 上\n\n- PS: 如果包含有大量的图片，可以选择用 **[PicGo](https://github.com/Molunerfinn/PicGo)** 这个工具来上传\n\n## 六、如何访问到静态文件\n\n#### 访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 [jsDelivr](https://www.jsdelivr.com/ \"jsDelivr\")\n\n-  `jsDelivr` 为开发者提供免费公共 CDN 加速服务\n- 在中国大陆唯一有 license 的公有 CDN，而且使用中的访问速度也很快\n- 并且 `JSDelivr` 能够集成 GitHub、NPM、WordPress 资源，只需要通过符合 JSDelivr 规则的 URL 引用，即可直接使用他们中资源。\n\n#### 获取直链\n\n###### 找到刚才上传图片的链接\n\n```url\nhttps://github.com/barryzpc/pic-repo/blob/master/my-blog/img/04481283.jpg\n```\n\n###### 但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 `JSDelivr` 的链接，就能在浏览器中直接访问到图片了\n\n```url\nhttps://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/04481283.jpg\n```\n\n###### 注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 [jsDelivr](https://www.jsdelivr.com/ \"jsDelivr\") 的官网\n\n---\n\n## GitHub 地址\n\n#### **[pic-repo](https://github.com/barryzpc/pic-repo)**\n\n## 博客地址\n\n#### **[http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html](http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html)**\n\n## 说明\n本文中所有图片均以此种方式存放。可进入github中查看\n","source":"_posts/202003/如何使用github当作自己的静态文件库.md","raw":"title: 如何使用github当作自己的静态文件库\ndate: '2020-03-11 17:33:38'\nupdated: '2020-04-22 22:11:21'\ntags: [github, JSDelivr]\npermalink: /articles/2020/03/11/1583919217986.html\n---\n![](https://img.hacpai.com/bing/20200218.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 场景描述\n\n很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。\n\n## 一、在 GitHub 上创建一个图床仓库\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-c1eaf3b5.png)\n\n- PS：一定要选 Public 不然无法访问到资源\n\n## 二、将项目克隆到本地\n\n```shell\n git clone git@github.com:barryzpc/pic-repo.git\n```\n\n## 三、创建自己的项目\n\n#### 在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-589b7be6.png)\n\n## 四、添加静态文件到对应的目录中\n\n#### 比如，我添加一张图片到我的 img 目录下\n\n![image.png](https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-7f90875c.png)\n\n ## 五、提交到 GitHub\n\n```\ngit add .\ngit commit -m \"add pic\"\ngit push \n```\n\n这时图片的已经提交到 GitHub 上\n\n- PS: 如果包含有大量的图片，可以选择用 **[PicGo](https://github.com/Molunerfinn/PicGo)** 这个工具来上传\n\n## 六、如何访问到静态文件\n\n#### 访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 [jsDelivr](https://www.jsdelivr.com/ \"jsDelivr\")\n\n-  `jsDelivr` 为开发者提供免费公共 CDN 加速服务\n- 在中国大陆唯一有 license 的公有 CDN，而且使用中的访问速度也很快\n- 并且 `JSDelivr` 能够集成 GitHub、NPM、WordPress 资源，只需要通过符合 JSDelivr 规则的 URL 引用，即可直接使用他们中资源。\n\n#### 获取直链\n\n###### 找到刚才上传图片的链接\n\n```url\nhttps://github.com/barryzpc/pic-repo/blob/master/my-blog/img/04481283.jpg\n```\n\n###### 但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 `JSDelivr` 的链接，就能在浏览器中直接访问到图片了\n\n```url\nhttps://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/04481283.jpg\n```\n\n###### 注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 [jsDelivr](https://www.jsdelivr.com/ \"jsDelivr\") 的官网\n\n---\n\n## GitHub 地址\n\n#### **[pic-repo](https://github.com/barryzpc/pic-repo)**\n\n## 博客地址\n\n#### **[http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html](http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html)**\n\n## 说明\n本文中所有图片均以此种方式存放。可进入github中查看\n","slug":"202003/如何使用github当作自己的静态文件库","published":1,"__permalink":"/articles/2020/03/11/1583919217986.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzuv000bogfd12dy79u9","content":"<p><img src=\"https://img.hacpai.com/bing/20200218.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。</p>\n<h2 id=\"一、在-GitHub-上创建一个图床仓库\"><a href=\"#一、在-GitHub-上创建一个图床仓库\" class=\"headerlink\" title=\"一、在 GitHub 上创建一个图床仓库\"></a>一、在 GitHub 上创建一个图床仓库</h2><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-c1eaf3b5.png\" alt=\"image.png\"></p>\n<ul>\n<li>PS：一定要选 Public 不然无法访问到资源</li>\n</ul>\n<h2 id=\"二、将项目克隆到本地\"><a href=\"#二、将项目克隆到本地\" class=\"headerlink\" title=\"二、将项目克隆到本地\"></a>二、将项目克隆到本地</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:barryzpc/pic-repo.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、创建自己的项目\"><a href=\"#三、创建自己的项目\" class=\"headerlink\" title=\"三、创建自己的项目\"></a>三、创建自己的项目</h2><h4 id=\"在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录：\"><a href=\"#在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录：\" class=\"headerlink\" title=\"在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：\"></a>在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：</h4><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-589b7be6.png\" alt=\"image.png\"></p>\n<h2 id=\"四、添加静态文件到对应的目录中\"><a href=\"#四、添加静态文件到对应的目录中\" class=\"headerlink\" title=\"四、添加静态文件到对应的目录中\"></a>四、添加静态文件到对应的目录中</h2><h4 id=\"比如，我添加一张图片到我的-img-目录下\"><a href=\"#比如，我添加一张图片到我的-img-目录下\" class=\"headerlink\" title=\"比如，我添加一张图片到我的 img 目录下\"></a>比如，我添加一张图片到我的 img 目录下</h4><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-7f90875c.png\" alt=\"image.png\"></p>\n<h2 id=\"五、提交到-GitHub\"><a href=\"#五、提交到-GitHub\" class=\"headerlink\" title=\"五、提交到 GitHub\"></a>五、提交到 GitHub</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;add pic&quot;</span><br><span class=\"line\">git push </span><br></pre></td></tr></table></figure>\n\n<p>这时图片的已经提交到 GitHub 上</p>\n<ul>\n<li>PS: 如果包含有大量的图片，可以选择用 <strong><a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a></strong> 这个工具来上传</li>\n</ul>\n<h2 id=\"六、如何访问到静态文件\"><a href=\"#六、如何访问到静态文件\" class=\"headerlink\" title=\"六、如何访问到静态文件\"></a>六、如何访问到静态文件</h2><h4 id=\"访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr\"><a href=\"#访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr\" class=\"headerlink\" title=\"访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 jsDelivr\"></a>访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 <a href=\"https://www.jsdelivr.com/\" title=\"jsDelivr\">jsDelivr</a></h4><ul>\n<li> <code>jsDelivr</code> 为开发者提供免费公共 CDN 加速服务</li>\n<li>在中国大陆唯一有 license 的公有 CDN，而且使用中的访问速度也很快</li>\n<li>并且 <code>JSDelivr</code> 能够集成 GitHub、NPM、WordPress 资源，只需要通过符合 JSDelivr 规则的 URL 引用，即可直接使用他们中资源。</li>\n</ul>\n<h4 id=\"获取直链\"><a href=\"#获取直链\" class=\"headerlink\" title=\"获取直链\"></a>获取直链</h4><h6 id=\"找到刚才上传图片的链接\"><a href=\"#找到刚才上传图片的链接\" class=\"headerlink\" title=\"找到刚才上传图片的链接\"></a>找到刚才上传图片的链接</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;github.com&#x2F;barryzpc&#x2F;pic-repo&#x2F;blob&#x2F;master&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了\"><a href=\"#但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了\" class=\"headerlink\" title=\"但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 JSDelivr 的链接，就能在浏览器中直接访问到图片了\"></a>但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 <code>JSDelivr</code> 的链接，就能在浏览器中直接访问到图片了</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;barryzpc&#x2F;pic-repo&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网\"><a href=\"#注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网\" class=\"headerlink\" title=\"注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 jsDelivr 的官网\"></a>注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 <a href=\"https://www.jsdelivr.com/\" title=\"jsDelivr\">jsDelivr</a> 的官网</h6><hr>\n<h2 id=\"GitHub-地址\"><a href=\"#GitHub-地址\" class=\"headerlink\" title=\"GitHub 地址\"></a>GitHub 地址</h2><h4 id=\"pic-repo\"><a href=\"#pic-repo\" class=\"headerlink\" title=\"pic-repo\"></a><strong><a href=\"https://github.com/barryzpc/pic-repo\">pic-repo</a></strong></h4><h2 id=\"博客地址\"><a href=\"#博客地址\" class=\"headerlink\" title=\"博客地址\"></a>博客地址</h2><h4 id=\"http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\"><a href=\"#http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\" class=\"headerlink\" title=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\"></a><strong><a href=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\">http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</a></strong></h4><h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>本文中所有图片均以此种方式存放。可进入github中查看</p>\n","site":{"data":{}},"excerpt":"场景描述\n很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。\n\n一、在 GitHub 上创建一个图床仓库\n\n\n * PS：一定要选 Public 不然无法访问到资源\n\n二、将项目克隆到本地\n1\n\n\ngit clone git@github.com:barryzpc/pic-repo.git\n\n\n三、创建自己的项目\n在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 m","more":"<p><img src=\"https://img.hacpai.com/bing/20200218.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多时候自己的博客或者是网站项目都会涉及到一些静态文件的访问，如图片、js 文件，CSS 文件。如果全放在自己的服务器上，将会产生不必要的费用，并且访问的速度也不能得到保证。这个时候就需要一个方式能够提供免费高效稳定的方式来存放及访问我们的静态文件。</p>\n<h2 id=\"一、在-GitHub-上创建一个图床仓库\"><a href=\"#一、在-GitHub-上创建一个图床仓库\" class=\"headerlink\" title=\"一、在 GitHub 上创建一个图床仓库\"></a>一、在 GitHub 上创建一个图床仓库</h2><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-c1eaf3b5.png\" alt=\"image.png\"></p>\n<ul>\n<li>PS：一定要选 Public 不然无法访问到资源</li>\n</ul>\n<h2 id=\"二、将项目克隆到本地\"><a href=\"#二、将项目克隆到本地\" class=\"headerlink\" title=\"二、将项目克隆到本地\"></a>二、将项目克隆到本地</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:barryzpc/pic-repo.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、创建自己的项目\"><a href=\"#三、创建自己的项目\" class=\"headerlink\" title=\"三、创建自己的项目\"></a>三、创建自己的项目</h2><h4 id=\"在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录：\"><a href=\"#在-pic-repo-项目中创建自己的项目，比如我有个博客的项目那么我就建立一个-my-blog-的文件夹，并在在文件夹下面分别创建-img-js-等目录：\" class=\"headerlink\" title=\"在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：\"></a>在 pic-repo 项目中创建自己的项目，比如我有个博客的项目那么我就建立一个 my-blog 的文件夹，并在在文件夹下面分别创建 img,js 等目录：</h4><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-589b7be6.png\" alt=\"image.png\"></p>\n<h2 id=\"四、添加静态文件到对应的目录中\"><a href=\"#四、添加静态文件到对应的目录中\" class=\"headerlink\" title=\"四、添加静态文件到对应的目录中\"></a>四、添加静态文件到对应的目录中</h2><h4 id=\"比如，我添加一张图片到我的-img-目录下\"><a href=\"#比如，我添加一张图片到我的-img-目录下\" class=\"headerlink\" title=\"比如，我添加一张图片到我的 img 目录下\"></a>比如，我添加一张图片到我的 img 目录下</h4><p><img src=\"https://cdn.jsdelivr.net/gh/barryzpc/pic-repo/my-blog/img/image-7f90875c.png\" alt=\"image.png\"></p>\n<h2 id=\"五、提交到-GitHub\"><a href=\"#五、提交到-GitHub\" class=\"headerlink\" title=\"五、提交到 GitHub\"></a>五、提交到 GitHub</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;add pic&quot;</span><br><span class=\"line\">git push </span><br></pre></td></tr></table></figure>\n\n<p>这时图片的已经提交到 GitHub 上</p>\n<ul>\n<li>PS: 如果包含有大量的图片，可以选择用 <strong><a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a></strong> 这个工具来上传</li>\n</ul>\n<h2 id=\"六、如何访问到静态文件\"><a href=\"#六、如何访问到静态文件\" class=\"headerlink\" title=\"六、如何访问到静态文件\"></a>六、如何访问到静态文件</h2><h4 id=\"访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr\"><a href=\"#访问的连接如何获取呢？这里就不得不提到一个厉害的-CDN-加速服务-jsDelivr\" class=\"headerlink\" title=\"访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 jsDelivr\"></a>访问的连接如何获取呢？这里就不得不提到一个厉害的 CDN 加速服务 <a href=\"https://www.jsdelivr.com/\" title=\"jsDelivr\">jsDelivr</a></h4><ul>\n<li> <code>jsDelivr</code> 为开发者提供免费公共 CDN 加速服务</li>\n<li>在中国大陆唯一有 license 的公有 CDN，而且使用中的访问速度也很快</li>\n<li>并且 <code>JSDelivr</code> 能够集成 GitHub、NPM、WordPress 资源，只需要通过符合 JSDelivr 规则的 URL 引用，即可直接使用他们中资源。</li>\n</ul>\n<h4 id=\"获取直链\"><a href=\"#获取直链\" class=\"headerlink\" title=\"获取直链\"></a>获取直链</h4><h6 id=\"找到刚才上传图片的链接\"><a href=\"#找到刚才上传图片的链接\" class=\"headerlink\" title=\"找到刚才上传图片的链接\"></a>找到刚才上传图片的链接</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;github.com&#x2F;barryzpc&#x2F;pic-repo&#x2F;blob&#x2F;master&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了\"><a href=\"#但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成-JSDelivr-的链接，就能在浏览器中直接访问到图片了\" class=\"headerlink\" title=\"但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 JSDelivr 的链接，就能在浏览器中直接访问到图片了\"></a>但是这个链接是无法直接访问的，这个时候就可以直接见前面的部分链接直接替换成 <code>JSDelivr</code> 的链接，就能在浏览器中直接访问到图片了</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;barryzpc&#x2F;pic-repo&#x2F;my-blog&#x2F;img&#x2F;04481283.jpg</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网\"><a href=\"#注意链接替换的规则，如果-GitHub-的图床项目要-release-多个版本，那就需要在链接中加上版本号，具体规则可以查看-jsDelivr-的官网\" class=\"headerlink\" title=\"注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 jsDelivr 的官网\"></a>注意链接替换的规则，如果 GitHub 的图床项目要 release 多个版本，那就需要在链接中加上版本号，具体规则可以查看 <a href=\"https://www.jsdelivr.com/\" title=\"jsDelivr\">jsDelivr</a> 的官网</h6><hr>\n<h2 id=\"GitHub-地址\"><a href=\"#GitHub-地址\" class=\"headerlink\" title=\"GitHub 地址\"></a>GitHub 地址</h2><h4 id=\"pic-repo\"><a href=\"#pic-repo\" class=\"headerlink\" title=\"pic-repo\"></a><strong><a href=\"https://github.com/barryzpc/pic-repo\">pic-repo</a></strong></h4><h2 id=\"博客地址\"><a href=\"#博客地址\" class=\"headerlink\" title=\"博客地址\"></a>博客地址</h2><h4 id=\"http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\"><a href=\"#http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\" class=\"headerlink\" title=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\"></a><strong><a href=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\">http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</a></strong></h4><h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>本文中所有图片均以此种方式存放。可进入github中查看</p>\n"},{"title":"Tmux: linux下的分屏神器","date":"2019-11-08T03:50:41.000Z","updated":"2019-12-29T14:51:23.000Z","_content":"![](https://img.hacpai.com/bing/20181103.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## tmux\n#### tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\n\n## 安装  \n#### Tmux 的安装。\n\t# Ubuntu\n\t$ sudo apt-get install tmux\n\n\t# CentOS\n\t$ sudo yum install tmux\n\n\t# Mac\n\t$ brew install tmux\n\n## 启动与退出\n#### 安装完成后，键入`tmux`命令，就进入了 Tmux 窗口。\n\t$ tmux\n\n#### 按下`Ctrl+d`或者显式输入`exit`命令，就可以退出 Tmux 窗口。\n\t$ exit\n\n\n## tmux的基础操作\n#### 基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\n\n一般使用命令和快捷键进行操作，可在系统shell终端和tmux命令模式（类似vim的命令模式）下使用命令，或者在tmux终端使用快捷键。\ntmux默认的快捷键前缀是**Ctrl+b**(下文用**prefix**指代)，按下前缀组合键后松开，再按下命令键进行快捷操作，比如使用**prefix d**分离会话（应该写作**prefix d**而不是**prefix+d，**因为**d**键不需要与**prefix**同时按下）。\n\n## 会话管理　\n\n#### 常用命令\n`tmux new`　　创建默认名称的会话（在tmux命令模式使用**new**命令可实现同样的功能，其他命令同理，后文不再列出tmux终端命令）\n\n`tmux new -s mytest`　　创建名为mytest的会话\n\n`tmux ls`　　显示会话列表\n\n`tmux a`　　连接上一个会话\n\n`tmux a -t mytest`　　连接指定会话\n\n`tmux rename -t s1 s2`\t重命名会话s1为s2\n\n`tmux kill-session`　　关闭上次打开的会话\n\n`tmux kill-session -t s1`　　关闭会话s1\n\n`tmux kill-session -a -t s1`　　关闭除s1外的所有会话\n\n`tmux kill-server`　　关闭所有会话\n\n####  常用快捷键\n\n`prefix s`　　列出会话，可进行切换\n\n`prefix $`　　重命名会话\n\n`prefix d`　　分离当前会话\n\n`prefix D`　　分离指定会话\n\n\n#### 窗口管理\n\n`prefix c`　　创建一个新窗口\n\n`prefix ,`　　重命名当前窗口\n\n`prefix w`　　列出所有窗口，可进行切换\n\n`prefix n`　　进入下一个窗口\n\n`prefix p`　　进入上一个窗口\n\n`prefix l`　　进入之前操作的窗口\n\n`prefix 0~9`　　选择编号0~9对应的窗口\n\n`prefix .`　　修改当前窗口索引编号\n\n`prefix '`　　切换至指定编号（可大于9）的窗口\n\n`prefix f`　　根据显示的内容搜索窗格\n\n`prefix &`　　关闭当前窗口\n\n\n#### 窗格管理\n\n`prefix %`　　水平方向创建窗格\n\n`prefix \"`　　垂直方向创建窗格\n\n`prefix Up|Down|Left|Right`　　根据箭头方向切换窗格\n\n`prefix q`　　显示窗格编号\n\n`prefix o`　　顺时针切换窗格\n\n`prefix }`　　与下一个窗格交换位置\n\n`prefix {`　　与上一个窗格交换位置\n\n`prefix x`　　关闭当前窗格\n\n`prefix space(空格键)`　　重新排列当前窗口下的所有窗格\n\n`prefix !`　　将当前窗格置于新窗口\n\n`prefix Ctrl+o`　　逆时针旋转当前窗口的窗格\n\n`prefix t`　　在当前窗格显示时间\n\n`prefix z`　　放大当前窗格(再次按下将还原)\n\n`prefix i`　　显示当前窗格信息\n\n\n#### 其他命令\n\n`tmux list-key`　　列出所有绑定的键，等同于**prefix ?**\n\n`tmux list-command`　　列出所有命令\n","source":"_posts/201911/Tmuxlinux下的分屏神器.md","raw":"title: 'Tmux: linux下的分屏神器'\ndate: '2019-11-08 11:50:41'\nupdated: '2019-12-29 22:51:23'\ntags: [linux, tmux]\npermalink: /articles/2019/11/08/1573185041865.html\n---\n![](https://img.hacpai.com/bing/20181103.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## tmux\n#### tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\n\n## 安装  \n#### Tmux 的安装。\n\t# Ubuntu\n\t$ sudo apt-get install tmux\n\n\t# CentOS\n\t$ sudo yum install tmux\n\n\t# Mac\n\t$ brew install tmux\n\n## 启动与退出\n#### 安装完成后，键入`tmux`命令，就进入了 Tmux 窗口。\n\t$ tmux\n\n#### 按下`Ctrl+d`或者显式输入`exit`命令，就可以退出 Tmux 窗口。\n\t$ exit\n\n\n## tmux的基础操作\n#### 基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\n\n一般使用命令和快捷键进行操作，可在系统shell终端和tmux命令模式（类似vim的命令模式）下使用命令，或者在tmux终端使用快捷键。\ntmux默认的快捷键前缀是**Ctrl+b**(下文用**prefix**指代)，按下前缀组合键后松开，再按下命令键进行快捷操作，比如使用**prefix d**分离会话（应该写作**prefix d**而不是**prefix+d，**因为**d**键不需要与**prefix**同时按下）。\n\n## 会话管理　\n\n#### 常用命令\n`tmux new`　　创建默认名称的会话（在tmux命令模式使用**new**命令可实现同样的功能，其他命令同理，后文不再列出tmux终端命令）\n\n`tmux new -s mytest`　　创建名为mytest的会话\n\n`tmux ls`　　显示会话列表\n\n`tmux a`　　连接上一个会话\n\n`tmux a -t mytest`　　连接指定会话\n\n`tmux rename -t s1 s2`\t重命名会话s1为s2\n\n`tmux kill-session`　　关闭上次打开的会话\n\n`tmux kill-session -t s1`　　关闭会话s1\n\n`tmux kill-session -a -t s1`　　关闭除s1外的所有会话\n\n`tmux kill-server`　　关闭所有会话\n\n####  常用快捷键\n\n`prefix s`　　列出会话，可进行切换\n\n`prefix $`　　重命名会话\n\n`prefix d`　　分离当前会话\n\n`prefix D`　　分离指定会话\n\n\n#### 窗口管理\n\n`prefix c`　　创建一个新窗口\n\n`prefix ,`　　重命名当前窗口\n\n`prefix w`　　列出所有窗口，可进行切换\n\n`prefix n`　　进入下一个窗口\n\n`prefix p`　　进入上一个窗口\n\n`prefix l`　　进入之前操作的窗口\n\n`prefix 0~9`　　选择编号0~9对应的窗口\n\n`prefix .`　　修改当前窗口索引编号\n\n`prefix '`　　切换至指定编号（可大于9）的窗口\n\n`prefix f`　　根据显示的内容搜索窗格\n\n`prefix &`　　关闭当前窗口\n\n\n#### 窗格管理\n\n`prefix %`　　水平方向创建窗格\n\n`prefix \"`　　垂直方向创建窗格\n\n`prefix Up|Down|Left|Right`　　根据箭头方向切换窗格\n\n`prefix q`　　显示窗格编号\n\n`prefix o`　　顺时针切换窗格\n\n`prefix }`　　与下一个窗格交换位置\n\n`prefix {`　　与上一个窗格交换位置\n\n`prefix x`　　关闭当前窗格\n\n`prefix space(空格键)`　　重新排列当前窗口下的所有窗格\n\n`prefix !`　　将当前窗格置于新窗口\n\n`prefix Ctrl+o`　　逆时针旋转当前窗口的窗格\n\n`prefix t`　　在当前窗格显示时间\n\n`prefix z`　　放大当前窗格(再次按下将还原)\n\n`prefix i`　　显示当前窗格信息\n\n\n#### 其他命令\n\n`tmux list-key`　　列出所有绑定的键，等同于**prefix ?**\n\n`tmux list-command`　　列出所有命令\n","slug":"201911/Tmuxlinux下的分屏神器","published":1,"__permalink":"/articles/2019/11/08/1573185041865.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzuw000cogfd6qjs7css","content":"<p><img src=\"https://img.hacpai.com/bing/20181103.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"tmux\"><a href=\"#tmux\" class=\"headerlink\" title=\"tmux\"></a>tmux</h2><h4 id=\"tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\"><a href=\"#tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\" class=\"headerlink\" title=\"tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\"></a>tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。</h4><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h4 id=\"Tmux-的安装。\"><a href=\"#Tmux-的安装。\" class=\"headerlink\" title=\"Tmux 的安装。\"></a>Tmux 的安装。</h4><pre><code># Ubuntu\n$ sudo apt-get install tmux\n\n# CentOS\n$ sudo yum install tmux\n\n# Mac\n$ brew install tmux</code></pre>\n<h2 id=\"启动与退出\"><a href=\"#启动与退出\" class=\"headerlink\" title=\"启动与退出\"></a>启动与退出</h2><h4 id=\"安装完成后，键入tmux命令，就进入了-Tmux-窗口。\"><a href=\"#安装完成后，键入tmux命令，就进入了-Tmux-窗口。\" class=\"headerlink\" title=\"安装完成后，键入tmux命令，就进入了 Tmux 窗口。\"></a>安装完成后，键入<code>tmux</code>命令，就进入了 Tmux 窗口。</h4><pre><code>$ tmux</code></pre>\n<h4 id=\"按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。\"><a href=\"#按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。\" class=\"headerlink\" title=\"按下Ctrl+d或者显式输入exit命令，就可以退出 Tmux 窗口。\"></a>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</h4><pre><code>$ exit</code></pre>\n<h2 id=\"tmux的基础操作\"><a href=\"#tmux的基础操作\" class=\"headerlink\" title=\"tmux的基础操作\"></a>tmux的基础操作</h2><h4 id=\"基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\"><a href=\"#基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\" class=\"headerlink\" title=\"基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\"></a>基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。</h4><p>一般使用命令和快捷键进行操作，可在系统shell终端和tmux命令模式（类似vim的命令模式）下使用命令，或者在tmux终端使用快捷键。<br>tmux默认的快捷键前缀是<strong>Ctrl+b</strong>(下文用<strong>prefix</strong>指代)，按下前缀组合键后松开，再按下命令键进行快捷操作，比如使用<strong>prefix d</strong>分离会话（应该写作<strong>prefix d</strong>而不是<strong>prefix+d，</strong>因为<strong>d</strong>键不需要与<strong>prefix</strong>同时按下）。</p>\n<h2 id=\"会话管理\"><a href=\"#会话管理\" class=\"headerlink\" title=\"会话管理　\"></a>会话管理　</h2><h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>tmux new</code>　　创建默认名称的会话（在tmux命令模式使用<strong>new</strong>命令可实现同样的功能，其他命令同理，后文不再列出tmux终端命令）</p>\n<p><code>tmux new -s mytest</code>　　创建名为mytest的会话</p>\n<p><code>tmux ls</code>　　显示会话列表</p>\n<p><code>tmux a</code>　　连接上一个会话</p>\n<p><code>tmux a -t mytest</code>　　连接指定会话</p>\n<p><code>tmux rename -t s1 s2</code>    重命名会话s1为s2</p>\n<p><code>tmux kill-session</code>　　关闭上次打开的会话</p>\n<p><code>tmux kill-session -t s1</code>　　关闭会话s1</p>\n<p><code>tmux kill-session -a -t s1</code>　　关闭除s1外的所有会话</p>\n<p><code>tmux kill-server</code>　　关闭所有会话</p>\n<h4 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h4><p><code>prefix s</code>　　列出会话，可进行切换</p>\n<p><code>prefix $</code>　　重命名会话</p>\n<p><code>prefix d</code>　　分离当前会话</p>\n<p><code>prefix D</code>　　分离指定会话</p>\n<h4 id=\"窗口管理\"><a href=\"#窗口管理\" class=\"headerlink\" title=\"窗口管理\"></a>窗口管理</h4><p><code>prefix c</code>　　创建一个新窗口</p>\n<p><code>prefix ,</code>　　重命名当前窗口</p>\n<p><code>prefix w</code>　　列出所有窗口，可进行切换</p>\n<p><code>prefix n</code>　　进入下一个窗口</p>\n<p><code>prefix p</code>　　进入上一个窗口</p>\n<p><code>prefix l</code>　　进入之前操作的窗口</p>\n<p><code>prefix 0~9</code>　　选择编号0~9对应的窗口</p>\n<p><code>prefix .</code>　　修改当前窗口索引编号</p>\n<p><code>prefix &#39;</code>　　切换至指定编号（可大于9）的窗口</p>\n<p><code>prefix f</code>　　根据显示的内容搜索窗格</p>\n<p><code>prefix &amp;</code>　　关闭当前窗口</p>\n<h4 id=\"窗格管理\"><a href=\"#窗格管理\" class=\"headerlink\" title=\"窗格管理\"></a>窗格管理</h4><p><code>prefix %</code>　　水平方向创建窗格</p>\n<p><code>prefix &quot;</code>　　垂直方向创建窗格</p>\n<p><code>prefix Up|Down|Left|Right</code>　　根据箭头方向切换窗格</p>\n<p><code>prefix q</code>　　显示窗格编号</p>\n<p><code>prefix o</code>　　顺时针切换窗格</p>\n<p><code>prefix &#125;</code>　　与下一个窗格交换位置</p>\n<p><code>prefix &#123;</code>　　与上一个窗格交换位置</p>\n<p><code>prefix x</code>　　关闭当前窗格</p>\n<p><code>prefix space(空格键)</code>　　重新排列当前窗口下的所有窗格</p>\n<p><code>prefix !</code>　　将当前窗格置于新窗口</p>\n<p><code>prefix Ctrl+o</code>　　逆时针旋转当前窗口的窗格</p>\n<p><code>prefix t</code>　　在当前窗格显示时间</p>\n<p><code>prefix z</code>　　放大当前窗格(再次按下将还原)</p>\n<p><code>prefix i</code>　　显示当前窗格信息</p>\n<h4 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h4><p><code>tmux list-key</code>　　列出所有绑定的键，等同于<strong>prefix ?</strong></p>\n<p><code>tmux list-command</code>　　列出所有命令</p>\n","site":{"data":{}},"excerpt":"tmux\ntmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\n安装\nTmux 的安装。\n# Ubuntu\n$ sudo apt-get install tmux\n\n# CentOS\n$ sudo yum install tmux\n\n# Mac\n$ brew install tmux\n\n启动与退出\n安装完成后，键入tmux命令，就进入了 Tmux 窗口。\n$ tmux\n\n按下Ctrl+d或者显式输入exit命令，就可以退出 Tmux 窗口。\n$ exit\n\ntmux的基础操作\n基本的操作无非就是对会话、窗口、窗格进行管理","more":"<p><img src=\"https://img.hacpai.com/bing/20181103.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"tmux\"><a href=\"#tmux\" class=\"headerlink\" title=\"tmux\"></a>tmux</h2><h4 id=\"tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\"><a href=\"#tmux（terminal-multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\" class=\"headerlink\" title=\"tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。\"></a>tmux（terminal multiplexer）是Linux上的终端窗口的分屏神器。在一个终端窗口中可以分多个屏同时使用。</h4><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h4 id=\"Tmux-的安装。\"><a href=\"#Tmux-的安装。\" class=\"headerlink\" title=\"Tmux 的安装。\"></a>Tmux 的安装。</h4><pre><code># Ubuntu\n$ sudo apt-get install tmux\n\n# CentOS\n$ sudo yum install tmux\n\n# Mac\n$ brew install tmux</code></pre>\n<h2 id=\"启动与退出\"><a href=\"#启动与退出\" class=\"headerlink\" title=\"启动与退出\"></a>启动与退出</h2><h4 id=\"安装完成后，键入tmux命令，就进入了-Tmux-窗口。\"><a href=\"#安装完成后，键入tmux命令，就进入了-Tmux-窗口。\" class=\"headerlink\" title=\"安装完成后，键入tmux命令，就进入了 Tmux 窗口。\"></a>安装完成后，键入<code>tmux</code>命令，就进入了 Tmux 窗口。</h4><pre><code>$ tmux</code></pre>\n<h4 id=\"按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。\"><a href=\"#按下Ctrl-d或者显式输入exit命令，就可以退出-Tmux-窗口。\" class=\"headerlink\" title=\"按下Ctrl+d或者显式输入exit命令，就可以退出 Tmux 窗口。\"></a>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</h4><pre><code>$ exit</code></pre>\n<h2 id=\"tmux的基础操作\"><a href=\"#tmux的基础操作\" class=\"headerlink\" title=\"tmux的基础操作\"></a>tmux的基础操作</h2><h4 id=\"基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\"><a href=\"#基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\" class=\"headerlink\" title=\"基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。\"></a>基本的操作无非就是对会话、窗口、窗格进行管理，包括创建、关闭、重命名、连接、分离、选择等等。</h4><p>一般使用命令和快捷键进行操作，可在系统shell终端和tmux命令模式（类似vim的命令模式）下使用命令，或者在tmux终端使用快捷键。<br>tmux默认的快捷键前缀是<strong>Ctrl+b</strong>(下文用<strong>prefix</strong>指代)，按下前缀组合键后松开，再按下命令键进行快捷操作，比如使用<strong>prefix d</strong>分离会话（应该写作<strong>prefix d</strong>而不是<strong>prefix+d，</strong>因为<strong>d</strong>键不需要与<strong>prefix</strong>同时按下）。</p>\n<h2 id=\"会话管理\"><a href=\"#会话管理\" class=\"headerlink\" title=\"会话管理　\"></a>会话管理　</h2><h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p><code>tmux new</code>　　创建默认名称的会话（在tmux命令模式使用<strong>new</strong>命令可实现同样的功能，其他命令同理，后文不再列出tmux终端命令）</p>\n<p><code>tmux new -s mytest</code>　　创建名为mytest的会话</p>\n<p><code>tmux ls</code>　　显示会话列表</p>\n<p><code>tmux a</code>　　连接上一个会话</p>\n<p><code>tmux a -t mytest</code>　　连接指定会话</p>\n<p><code>tmux rename -t s1 s2</code>    重命名会话s1为s2</p>\n<p><code>tmux kill-session</code>　　关闭上次打开的会话</p>\n<p><code>tmux kill-session -t s1</code>　　关闭会话s1</p>\n<p><code>tmux kill-session -a -t s1</code>　　关闭除s1外的所有会话</p>\n<p><code>tmux kill-server</code>　　关闭所有会话</p>\n<h4 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h4><p><code>prefix s</code>　　列出会话，可进行切换</p>\n<p><code>prefix $</code>　　重命名会话</p>\n<p><code>prefix d</code>　　分离当前会话</p>\n<p><code>prefix D</code>　　分离指定会话</p>\n<h4 id=\"窗口管理\"><a href=\"#窗口管理\" class=\"headerlink\" title=\"窗口管理\"></a>窗口管理</h4><p><code>prefix c</code>　　创建一个新窗口</p>\n<p><code>prefix ,</code>　　重命名当前窗口</p>\n<p><code>prefix w</code>　　列出所有窗口，可进行切换</p>\n<p><code>prefix n</code>　　进入下一个窗口</p>\n<p><code>prefix p</code>　　进入上一个窗口</p>\n<p><code>prefix l</code>　　进入之前操作的窗口</p>\n<p><code>prefix 0~9</code>　　选择编号0~9对应的窗口</p>\n<p><code>prefix .</code>　　修改当前窗口索引编号</p>\n<p><code>prefix &#39;</code>　　切换至指定编号（可大于9）的窗口</p>\n<p><code>prefix f</code>　　根据显示的内容搜索窗格</p>\n<p><code>prefix &amp;</code>　　关闭当前窗口</p>\n<h4 id=\"窗格管理\"><a href=\"#窗格管理\" class=\"headerlink\" title=\"窗格管理\"></a>窗格管理</h4><p><code>prefix %</code>　　水平方向创建窗格</p>\n<p><code>prefix &quot;</code>　　垂直方向创建窗格</p>\n<p><code>prefix Up|Down|Left|Right</code>　　根据箭头方向切换窗格</p>\n<p><code>prefix q</code>　　显示窗格编号</p>\n<p><code>prefix o</code>　　顺时针切换窗格</p>\n<p><code>prefix &#125;</code>　　与下一个窗格交换位置</p>\n<p><code>prefix &#123;</code>　　与上一个窗格交换位置</p>\n<p><code>prefix x</code>　　关闭当前窗格</p>\n<p><code>prefix space(空格键)</code>　　重新排列当前窗口下的所有窗格</p>\n<p><code>prefix !</code>　　将当前窗格置于新窗口</p>\n<p><code>prefix Ctrl+o</code>　　逆时针旋转当前窗口的窗格</p>\n<p><code>prefix t</code>　　在当前窗格显示时间</p>\n<p><code>prefix z</code>　　放大当前窗格(再次按下将还原)</p>\n<p><code>prefix i</code>　　显示当前窗格信息</p>\n<h4 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h4><p><code>tmux list-key</code>　　列出所有绑定的键，等同于<strong>prefix ?</strong></p>\n<p><code>tmux list-command</code>　　列出所有命令</p>\n"},{"title":"PHP遍历删除文件夹以及文件夹里的文件","date":"2019-12-30T07:36:58.000Z","updated":"2019-12-30T08:33:00.000Z","_content":"![](https://img.hacpai.com/bing/20190108.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n## 场景描述：\n\n#### 遍历去清空一个目录下的文件夹以及文件\n\n## 代码示例：\n\n```PHP\n//删除一个文件夹下面的所有的文件以及文件夹\n    static public function delDir($path){\n        error_reporting(0);\n        //如果是目录则继续\n        if(is_dir($path)){\n            //扫描一个文件夹内的所有文件夹和文件并返回数组\n            $p = scandir($path);\n            foreach($p as $val){\n                //排除目录中的.和..\n                if($val !=\".\" && $val !=\"..\"){\n                    //如果是目录则递归子目录，继续操作\n                    if(is_dir($path.$val)){\n                        //子目录中操作删除文件夹和文件\n                        self::deldir($path.$val.'/');\n                        //目录清空后删除空文件夹\n                        @rmdir($path.$val.'/');\n                    }else{\n                        //如果是文件直接删除\n                        @unlink($path.$val);\n                    }\n                }\n            }\n            @rmdir($path);\n        }\n    }\n```\n\t\n\n","source":"_posts/201912/PHP遍历删除文件夹以及文件夹里的文件.md","raw":"title: PHP遍历删除文件夹以及文件夹里的文件\ndate: '2019-12-30 15:36:58'\nupdated: '2019-12-30 16:33:00'\ntags: [PHP]\npermalink: /articles/2019/12/30/1577691418354.html\n---\n![](https://img.hacpai.com/bing/20190108.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n## 场景描述：\n\n#### 遍历去清空一个目录下的文件夹以及文件\n\n## 代码示例：\n\n```PHP\n//删除一个文件夹下面的所有的文件以及文件夹\n    static public function delDir($path){\n        error_reporting(0);\n        //如果是目录则继续\n        if(is_dir($path)){\n            //扫描一个文件夹内的所有文件夹和文件并返回数组\n            $p = scandir($path);\n            foreach($p as $val){\n                //排除目录中的.和..\n                if($val !=\".\" && $val !=\"..\"){\n                    //如果是目录则递归子目录，继续操作\n                    if(is_dir($path.$val)){\n                        //子目录中操作删除文件夹和文件\n                        self::deldir($path.$val.'/');\n                        //目录清空后删除空文件夹\n                        @rmdir($path.$val.'/');\n                    }else{\n                        //如果是文件直接删除\n                        @unlink($path.$val);\n                    }\n                }\n            }\n            @rmdir($path);\n        }\n    }\n```\n\t\n\n","slug":"201912/PHP遍历删除文件夹以及文件夹里的文件","published":1,"__permalink":"/articles/2019/12/30/1577691418354.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzuz000eogfdgdcg4zcu","content":"<p><img src=\"https://img.hacpai.com/bing/20190108.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h2><h4 id=\"遍历去清空一个目录下的文件夹以及文件\"><a href=\"#遍历去清空一个目录下的文件夹以及文件\" class=\"headerlink\" title=\"遍历去清空一个目录下的文件夹以及文件\"></a>遍历去清空一个目录下的文件夹以及文件</h4><h2 id=\"代码示例：\"><a href=\"#代码示例：\" class=\"headerlink\" title=\"代码示例：\"></a>代码示例：</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delDir</span>(<span class=\"params\">$path</span>)</span>&#123;</span><br><span class=\"line\">        error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如果是目录则继续</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(is_dir($path))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class=\"line\">            $p = scandir($path);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span>($p <span class=\"keyword\">as</span> $val)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//排除目录中的.和..</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>($val !=<span class=\"string\">&quot;.&quot;</span> &amp;&amp; $val !=<span class=\"string\">&quot;..&quot;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//如果是目录则递归子目录，继续操作</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(is_dir($path.$val))&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//子目录中操作删除文件夹和文件</span></span><br><span class=\"line\">                        <span class=\"built_in\">self</span>::deldir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                        <span class=\"comment\">//目录清空后删除空文件夹</span></span><br><span class=\"line\">                        @rmdir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果是文件直接删除</span></span><br><span class=\"line\">                        @unlink($path.$val);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            @rmdir($path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"场景描述：\n遍历去清空一个目录下的文件夹以及文件\n代码示例：\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n//删除一个文件夹下面的所有的文件以及文件夹\n    static public function delDir($path){\n        error_reporting(0);\n        //如果是目录则继续\n        if(is_dir($path)){\n            //扫描一个文件夹内的所有文件夹和文件并返回数组\n            $p = scandir(","more":"<p><img src=\"https://img.hacpai.com/bing/20190108.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述：\"><a href=\"#场景描述：\" class=\"headerlink\" title=\"场景描述：\"></a>场景描述：</h2><h4 id=\"遍历去清空一个目录下的文件夹以及文件\"><a href=\"#遍历去清空一个目录下的文件夹以及文件\" class=\"headerlink\" title=\"遍历去清空一个目录下的文件夹以及文件\"></a>遍历去清空一个目录下的文件夹以及文件</h4><h2 id=\"代码示例：\"><a href=\"#代码示例：\" class=\"headerlink\" title=\"代码示例：\"></a>代码示例：</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除一个文件夹下面的所有的文件以及文件夹</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delDir</span>(<span class=\"params\">$path</span>)</span>&#123;</span><br><span class=\"line\">        error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如果是目录则继续</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(is_dir($path))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描一个文件夹内的所有文件夹和文件并返回数组</span></span><br><span class=\"line\">            $p = scandir($path);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span>($p <span class=\"keyword\">as</span> $val)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//排除目录中的.和..</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>($val !=<span class=\"string\">&quot;.&quot;</span> &amp;&amp; $val !=<span class=\"string\">&quot;..&quot;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//如果是目录则递归子目录，继续操作</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(is_dir($path.$val))&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//子目录中操作删除文件夹和文件</span></span><br><span class=\"line\">                        <span class=\"built_in\">self</span>::deldir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                        <span class=\"comment\">//目录清空后删除空文件夹</span></span><br><span class=\"line\">                        @rmdir($path.$val.<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果是文件直接删除</span></span><br><span class=\"line\">                        @unlink($path.$val);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            @rmdir($path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"如何隐藏HTTP响应头里的server和X-Powered-By","date":"2019-11-21T10:35:17.000Z","updated":"2019-12-30T07:46:46.000Z","_content":"![](https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By\n\n## 未隐藏时http响应头中包含了如下信息\n\n![image.png](https://img.hacpai.com/file/2019/11/image-0226a7ee.png)\n\n## apache 隐藏 server\n\n修改httpd.conf 设置 \n\n\tServerSignature Off\n\tServerTokens Prod\n\n## nginx 隐藏 server\n\n修改nginx.conf  在http里面设置 \n\t\n\tserver_tokens off;\n\n## 隐藏X-Powered-By  \n  \n修改 php.ini 文件 设置 \n\t\n\texpose_php = Off\n\n## 隐藏之后显示\n\n![image.png](https://img.hacpai.com/file/2019/11/image-04c2fd90.png)\n\n\n\n","source":"_posts/201911/如何隐藏HTTP响应头里的server和XPoweredBy.md","raw":"title: 如何隐藏HTTP响应头里的server和X-Powered-By\ndate: '2019-11-21 18:35:17'\nupdated: '2019-12-30 15:46:46'\ntags: [运维, PHP]\npermalink: /articles/2019/11/21/1574332517065.html\n---\n![](https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By\n\n## 未隐藏时http响应头中包含了如下信息\n\n![image.png](https://img.hacpai.com/file/2019/11/image-0226a7ee.png)\n\n## apache 隐藏 server\n\n修改httpd.conf 设置 \n\n\tServerSignature Off\n\tServerTokens Prod\n\n## nginx 隐藏 server\n\n修改nginx.conf  在http里面设置 \n\t\n\tserver_tokens off;\n\n## 隐藏X-Powered-By  \n  \n修改 php.ini 文件 设置 \n\t\n\texpose_php = Off\n\n## 隐藏之后显示\n\n![image.png](https://img.hacpai.com/file/2019/11/image-04c2fd90.png)\n\n\n\n","slug":"201911/如何隐藏HTTP响应头里的server和XPoweredBy","published":1,"__permalink":"/articles/2019/11/21/1574332517065.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzv0000gogfdcy4sex7r","content":"<p><img src=\"https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By</p>\n<h2 id=\"未隐藏时http响应头中包含了如下信息\"><a href=\"#未隐藏时http响应头中包含了如下信息\" class=\"headerlink\" title=\"未隐藏时http响应头中包含了如下信息\"></a>未隐藏时http响应头中包含了如下信息</h2><p><img src=\"https://img.hacpai.com/file/2019/11/image-0226a7ee.png\" alt=\"image.png\"></p>\n<h2 id=\"apache-隐藏-server\"><a href=\"#apache-隐藏-server\" class=\"headerlink\" title=\"apache 隐藏 server\"></a>apache 隐藏 server</h2><p>修改httpd.conf 设置 </p>\n<pre><code>ServerSignature Off\nServerTokens Prod</code></pre>\n<h2 id=\"nginx-隐藏-server\"><a href=\"#nginx-隐藏-server\" class=\"headerlink\" title=\"nginx 隐藏 server\"></a>nginx 隐藏 server</h2><p>修改nginx.conf  在http里面设置 </p>\n<pre><code>server_tokens off;</code></pre>\n<h2 id=\"隐藏X-Powered-By\"><a href=\"#隐藏X-Powered-By\" class=\"headerlink\" title=\"隐藏X-Powered-By\"></a>隐藏X-Powered-By</h2><p>修改 php.ini 文件 设置 </p>\n<pre><code>expose_php = Off</code></pre>\n<h2 id=\"隐藏之后显示\"><a href=\"#隐藏之后显示\" class=\"headerlink\" title=\"隐藏之后显示\"></a>隐藏之后显示</h2><p><img src=\"https://img.hacpai.com/file/2019/11/image-04c2fd90.png\" alt=\"image.png\"></p>\n","site":{"data":{}},"excerpt":"场景描述\n很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By\n\n未隐藏时http响应头中包含了如下信息\n\n\napache 隐藏 server\n修改httpd.conf 设置 \n\nServerSignature Off\nServerTokens Prod\n\nnginx 隐藏 server\n修改nginx.conf 在http里面设置 \n\nserver_tokens off;\n\n隐藏X-Powered-By\n修改 php.ini 文件 设置 \n\nexpose_php = Off\n\n隐藏之后显示","more":"<p><img src=\"https://img.hacpai.com/bing/20180107.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多时候我们为了安全考虑，需要隐藏我们环境的一些版本号，如：server、X-Powered-By</p>\n<h2 id=\"未隐藏时http响应头中包含了如下信息\"><a href=\"#未隐藏时http响应头中包含了如下信息\" class=\"headerlink\" title=\"未隐藏时http响应头中包含了如下信息\"></a>未隐藏时http响应头中包含了如下信息</h2><p><img src=\"https://img.hacpai.com/file/2019/11/image-0226a7ee.png\" alt=\"image.png\"></p>\n<h2 id=\"apache-隐藏-server\"><a href=\"#apache-隐藏-server\" class=\"headerlink\" title=\"apache 隐藏 server\"></a>apache 隐藏 server</h2><p>修改httpd.conf 设置 </p>\n<pre><code>ServerSignature Off\nServerTokens Prod</code></pre>\n<h2 id=\"nginx-隐藏-server\"><a href=\"#nginx-隐藏-server\" class=\"headerlink\" title=\"nginx 隐藏 server\"></a>nginx 隐藏 server</h2><p>修改nginx.conf  在http里面设置 </p>\n<pre><code>server_tokens off;</code></pre>\n<h2 id=\"隐藏X-Powered-By\"><a href=\"#隐藏X-Powered-By\" class=\"headerlink\" title=\"隐藏X-Powered-By\"></a>隐藏X-Powered-By</h2><p>修改 php.ini 文件 设置 </p>\n<pre><code>expose_php = Off</code></pre>\n<h2 id=\"隐藏之后显示\"><a href=\"#隐藏之后显示\" class=\"headerlink\" title=\"隐藏之后显示\"></a>隐藏之后显示</h2><p><img src=\"https://img.hacpai.com/file/2019/11/image-04c2fd90.png\" alt=\"image.png\"></p>\n"},{"title":"PHP实现输入一个整数n，输出一个n×n蛇形矩阵","date":"2020-04-20T13:51:31.000Z","updated":"2020-05-11T01:28:46.000Z","_content":"![](https://img.hacpai.com/bing/20180309.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n###### 前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\n\n## 题目：\n\n#### 实现输入一个整数n，输出一个n×n蛇形阵。例如：\n\n```\n//输入 3,输出：\n 1   2   3\n 8   9   4\n 7   6   5\n \n```\n\n```\n//输入 4，输出：\n 1    2   3   4\n 12   13  14  5\n 11   16  15  6\n 10   9   8   7\n```\n\n## 思路：\n\n####  1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\n\n#### 2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\n\n## 代码实现：\n\n#### 创建php脚本文件snake_matrix.php\n\n```php\n\n<?php\n\n/**\n * 输入一个整数n，要求输出一个n×n蛇形阵（n<10），比如输入整数4，则输出如下蛇形阵：\n * 1    2   3   4\n * 12   13  14  5\n * 11   16  15  6\n * 10   9   8   7\n */\n\n//收到的参数\n$param = getopt(\"n:\");\n$input_num = $param['n'];\n$value = 1; //矩阵的第一个值\n$matrix_arr = [];\n\n/**\n * 察可以发现，矩阵的值的规律是依次递增的；这也是这个算法的突破口。\n * 而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\n */\n\n//圈数\n$circle_num = ceil($input_num / 2);\nfor ($i = 0; $i < $circle_num; $i++) {//一圈一圈的来\n\n    //用于每一圈的第一行赋值\n    for ($j = $i; $j < $input_num - $i; $j++) {\n        $matrix_arr[$i][$j] = $value++;\n    }\n\n    //用于每圈的最后一列赋值\n    for ($j = $i + 1; $j < $input_num - $i - 1; $j++) {\n        $matrix_arr[$j][$input_num - $i - 1] = $value++;\n    }\n\n    //用于每圈的最后一行赋值\n    for ($j = $input_num - $i - 1; $j > $i; $j--) {\n        $matrix_arr[$input_num - $i - 1][$j] = $value++;\n    }\n\n    //用于每圈的第一列赋值\n    for ($j = $input_num - $i - 1; $j > $i; $j--) {\n        $matrix_arr[$j][$i] = $value++;\n    }\n\n\n}\n\n//按照索引依次打印出来\nforeach ($matrix_arr as $key => $row_val) {\n    ksort($row_val);\n    $str = \"\";\n    foreach ($row_val as $value) {\n        echo $value;\n        echo \" \";\n\n    }\n    echo PHP_EOL;\n}\n\n```\n\n#### 运行php脚本\n\n```\nphp snake_matrix.php -n 4\n```\n\n#### 输出\n\n```\n 1    2   3   4\n 12   13  14  5\n 11   16  15  6\n 10   9   8   7\n```\n\nps: 如果大家还有别的实现方式，可以在评论区贴出来，大家一起学习。语言不限\n","source":"_posts/202004/PHP实现输入一个整数n输出一个nn蛇形矩阵.md","raw":"title: PHP实现输入一个整数n，输出一个n×n蛇形矩阵\ndate: '2020-04-20 21:51:31'\nupdated: '2020-05-11 09:28:46'\ntags: [PHP, 算法]\npermalink: /articles/2020/04/20/1587390691737.html\n---\n![](https://img.hacpai.com/bing/20180309.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n###### 前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\n\n## 题目：\n\n#### 实现输入一个整数n，输出一个n×n蛇形阵。例如：\n\n```\n//输入 3,输出：\n 1   2   3\n 8   9   4\n 7   6   5\n \n```\n\n```\n//输入 4，输出：\n 1    2   3   4\n 12   13  14  5\n 11   16  15  6\n 10   9   8   7\n```\n\n## 思路：\n\n####  1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\n\n#### 2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\n\n## 代码实现：\n\n#### 创建php脚本文件snake_matrix.php\n\n```php\n\n<?php\n\n/**\n * 输入一个整数n，要求输出一个n×n蛇形阵（n<10），比如输入整数4，则输出如下蛇形阵：\n * 1    2   3   4\n * 12   13  14  5\n * 11   16  15  6\n * 10   9   8   7\n */\n\n//收到的参数\n$param = getopt(\"n:\");\n$input_num = $param['n'];\n$value = 1; //矩阵的第一个值\n$matrix_arr = [];\n\n/**\n * 察可以发现，矩阵的值的规律是依次递增的；这也是这个算法的突破口。\n * 而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\n */\n\n//圈数\n$circle_num = ceil($input_num / 2);\nfor ($i = 0; $i < $circle_num; $i++) {//一圈一圈的来\n\n    //用于每一圈的第一行赋值\n    for ($j = $i; $j < $input_num - $i; $j++) {\n        $matrix_arr[$i][$j] = $value++;\n    }\n\n    //用于每圈的最后一列赋值\n    for ($j = $i + 1; $j < $input_num - $i - 1; $j++) {\n        $matrix_arr[$j][$input_num - $i - 1] = $value++;\n    }\n\n    //用于每圈的最后一行赋值\n    for ($j = $input_num - $i - 1; $j > $i; $j--) {\n        $matrix_arr[$input_num - $i - 1][$j] = $value++;\n    }\n\n    //用于每圈的第一列赋值\n    for ($j = $input_num - $i - 1; $j > $i; $j--) {\n        $matrix_arr[$j][$i] = $value++;\n    }\n\n\n}\n\n//按照索引依次打印出来\nforeach ($matrix_arr as $key => $row_val) {\n    ksort($row_val);\n    $str = \"\";\n    foreach ($row_val as $value) {\n        echo $value;\n        echo \" \";\n\n    }\n    echo PHP_EOL;\n}\n\n```\n\n#### 运行php脚本\n\n```\nphp snake_matrix.php -n 4\n```\n\n#### 输出\n\n```\n 1    2   3   4\n 12   13  14  5\n 11   16  15  6\n 10   9   8   7\n```\n\nps: 如果大家还有别的实现方式，可以在评论区贴出来，大家一起学习。语言不限\n","slug":"202004/PHP实现输入一个整数n输出一个nn蛇形矩阵","published":1,"__permalink":"/articles/2020/04/20/1587390691737.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzv1000jogfdconj8zbo","content":"<p><img src=\"https://img.hacpai.com/bing/20180309.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h6 id=\"前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\"><a href=\"#前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\" class=\"headerlink\" title=\"前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\"></a>前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。</h6><h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><h4 id=\"实现输入一个整数n，输出一个n×n蛇形阵。例如：\"><a href=\"#实现输入一个整数n，输出一个n×n蛇形阵。例如：\" class=\"headerlink\" title=\"实现输入一个整数n，输出一个n×n蛇形阵。例如：\"></a>实现输入一个整数n，输出一个n×n蛇形阵。例如：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;输入 3,输出：</span><br><span class=\"line\"> 1   2   3</span><br><span class=\"line\"> 8   9   4</span><br><span class=\"line\"> 7   6   5</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;输入 4，输出：</span><br><span class=\"line\"> 1    2   3   4</span><br><span class=\"line\"> 12   13  14  5</span><br><span class=\"line\"> 11   16  15  6</span><br><span class=\"line\"> 10   9   8   7</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><h4 id=\"1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\"><a href=\"#1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\" class=\"headerlink\" title=\"1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\"></a>1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值</h4><h4 id=\"2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1\"><a href=\"#2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1\" class=\"headerlink\" title=\"2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\"></a>2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</h4><h2 id=\"代码实现：\"><a href=\"#代码实现：\" class=\"headerlink\" title=\"代码实现：\"></a>代码实现：</h2><h4 id=\"创建php脚本文件snake-matrix-php\"><a href=\"#创建php脚本文件snake-matrix-php\" class=\"headerlink\" title=\"创建php脚本文件snake_matrix.php\"></a>创建php脚本文件snake_matrix.php</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 输入一个整数n，要求输出一个n×n蛇形阵（n&lt;10），比如输入整数4，则输出如下蛇形阵：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1    2   3   4</span></span><br><span class=\"line\"><span class=\"comment\"> * 12   13  14  5</span></span><br><span class=\"line\"><span class=\"comment\"> * 11   16  15  6</span></span><br><span class=\"line\"><span class=\"comment\"> * 10   9   8   7</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//收到的参数</span></span><br><span class=\"line\">$param = getopt(<span class=\"string\">&quot;n:&quot;</span>);</span><br><span class=\"line\">$input_num = $param[<span class=\"string\">&#x27;n&#x27;</span>];</span><br><span class=\"line\">$value = <span class=\"number\">1</span>; <span class=\"comment\">//矩阵的第一个值</span></span><br><span class=\"line\">$matrix_arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 察可以发现，矩阵的值的规律是依次递增的；这也是这个算法的突破口。</span></span><br><span class=\"line\"><span class=\"comment\"> * 而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//圈数</span></span><br><span class=\"line\">$circle_num = ceil($input_num / <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; $circle_num; $i++) &#123;<span class=\"comment\">//一圈一圈的来</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每一圈的第一行赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $i; $j &lt; $input_num - $i; $j++) &#123;</span><br><span class=\"line\">        $matrix_arr[$i][$j] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的最后一列赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $i + <span class=\"number\">1</span>; $j &lt; $input_num - $i - <span class=\"number\">1</span>; $j++) &#123;</span><br><span class=\"line\">        $matrix_arr[$j][$input_num - $i - <span class=\"number\">1</span>] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的最后一行赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $input_num - $i - <span class=\"number\">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class=\"line\">        $matrix_arr[$input_num - $i - <span class=\"number\">1</span>][$j] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的第一列赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $input_num - $i - <span class=\"number\">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class=\"line\">        $matrix_arr[$j][$i] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//按照索引依次打印出来</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($matrix_arr <span class=\"keyword\">as</span> $key =&gt; $row_val) &#123;</span><br><span class=\"line\">    ksort($row_val);</span><br><span class=\"line\">    $str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($row_val <span class=\"keyword\">as</span> $value) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $value;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行php脚本\"><a href=\"#运行php脚本\" class=\"headerlink\" title=\"运行php脚本\"></a>运行php脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php snake_matrix.php -n 4</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1    2   3   4</span><br><span class=\"line\">12   13  14  5</span><br><span class=\"line\">11   16  15  6</span><br><span class=\"line\">10   9   8   7</span><br></pre></td></tr></table></figure>\n\n<p>ps: 如果大家还有别的实现方式，可以在评论区贴出来，大家一起学习。语言不限</p>\n","site":{"data":{}},"excerpt":"前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\n题目：\n实现输入一个整数n，输出一个n×n蛇形阵。例如：\n1\n2\n3\n4\n5\n\n\n//输入 3,输出：\n 1   2   3\n 8   9   4\n 7   6   5\n \n\n\n1\n2\n3\n4\n5\n\n\n//输入 4，输出：\n 1    2   3   4\n 12   13  14  5\n 11   16  15  6\n 10   9   8   7\n\n\n思路：\n1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\n2、而且转的圈数为 n 除以2(也就是行数，","more":"<p><img src=\"https://img.hacpai.com/bing/20180309.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h6 id=\"前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\"><a href=\"#前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\" class=\"headerlink\" title=\"前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。\"></a>前段时间群里发了一个有意思题，自己试着简单粗暴的实现一下。</h6><h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><h4 id=\"实现输入一个整数n，输出一个n×n蛇形阵。例如：\"><a href=\"#实现输入一个整数n，输出一个n×n蛇形阵。例如：\" class=\"headerlink\" title=\"实现输入一个整数n，输出一个n×n蛇形阵。例如：\"></a>实现输入一个整数n，输出一个n×n蛇形阵。例如：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;输入 3,输出：</span><br><span class=\"line\"> 1   2   3</span><br><span class=\"line\"> 8   9   4</span><br><span class=\"line\"> 7   6   5</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;输入 4，输出：</span><br><span class=\"line\"> 1    2   3   4</span><br><span class=\"line\"> 12   13  14  5</span><br><span class=\"line\"> 11   16  15  6</span><br><span class=\"line\"> 10   9   8   7</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><h4 id=\"1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\"><a href=\"#1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\" class=\"headerlink\" title=\"1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值\"></a>1、观察可以发现，矩阵的值的规律是由外向内画圈依次递增的卷入（排列），这是这个题的突破口。可以按照这个依次递增的值的位置来依次赋值</h4><h4 id=\"2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1\"><a href=\"#2、而且转的圈数为-n-除以2-也就是行数，或者是列数-，如果-n-为奇数，则向上取整，即-1\" class=\"headerlink\" title=\"2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1\"></a>2、而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</h4><h2 id=\"代码实现：\"><a href=\"#代码实现：\" class=\"headerlink\" title=\"代码实现：\"></a>代码实现：</h2><h4 id=\"创建php脚本文件snake-matrix-php\"><a href=\"#创建php脚本文件snake-matrix-php\" class=\"headerlink\" title=\"创建php脚本文件snake_matrix.php\"></a>创建php脚本文件snake_matrix.php</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 输入一个整数n，要求输出一个n×n蛇形阵（n&lt;10），比如输入整数4，则输出如下蛇形阵：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1    2   3   4</span></span><br><span class=\"line\"><span class=\"comment\"> * 12   13  14  5</span></span><br><span class=\"line\"><span class=\"comment\"> * 11   16  15  6</span></span><br><span class=\"line\"><span class=\"comment\"> * 10   9   8   7</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//收到的参数</span></span><br><span class=\"line\">$param = getopt(<span class=\"string\">&quot;n:&quot;</span>);</span><br><span class=\"line\">$input_num = $param[<span class=\"string\">&#x27;n&#x27;</span>];</span><br><span class=\"line\">$value = <span class=\"number\">1</span>; <span class=\"comment\">//矩阵的第一个值</span></span><br><span class=\"line\">$matrix_arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 察可以发现，矩阵的值的规律是依次递增的；这也是这个算法的突破口。</span></span><br><span class=\"line\"><span class=\"comment\"> * 而且转的圈数为 n 除以2(也就是行数，或者是列数)，如果 n 为奇数，则向上取整，即+1</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//圈数</span></span><br><span class=\"line\">$circle_num = ceil($input_num / <span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; $circle_num; $i++) &#123;<span class=\"comment\">//一圈一圈的来</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每一圈的第一行赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $i; $j &lt; $input_num - $i; $j++) &#123;</span><br><span class=\"line\">        $matrix_arr[$i][$j] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的最后一列赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $i + <span class=\"number\">1</span>; $j &lt; $input_num - $i - <span class=\"number\">1</span>; $j++) &#123;</span><br><span class=\"line\">        $matrix_arr[$j][$input_num - $i - <span class=\"number\">1</span>] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的最后一行赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $input_num - $i - <span class=\"number\">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class=\"line\">        $matrix_arr[$input_num - $i - <span class=\"number\">1</span>][$j] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于每圈的第一列赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ($j = $input_num - $i - <span class=\"number\">1</span>; $j &gt; $i; $j--) &#123;</span><br><span class=\"line\">        $matrix_arr[$j][$i] = $value++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//按照索引依次打印出来</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> ($matrix_arr <span class=\"keyword\">as</span> $key =&gt; $row_val) &#123;</span><br><span class=\"line\">    ksort($row_val);</span><br><span class=\"line\">    $str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> ($row_val <span class=\"keyword\">as</span> $value) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $value;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> PHP_EOL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行php脚本\"><a href=\"#运行php脚本\" class=\"headerlink\" title=\"运行php脚本\"></a>运行php脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php snake_matrix.php -n 4</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1    2   3   4</span><br><span class=\"line\">12   13  14  5</span><br><span class=\"line\">11   16  15  6</span><br><span class=\"line\">10   9   8   7</span><br></pre></td></tr></table></figure>\n\n<p>ps: 如果大家还有别的实现方式，可以在评论区贴出来，大家一起学习。语言不限</p>\n"},{"title":"网上收集的PHP知识点和面试汇总","date":"2020-04-22T07:48:21.000Z","updated":"2020-10-10T06:15:51.000Z","_content":"![](https://img.hacpai.com/bing/20180919.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 简书\n\n1. [PHP面试题总结](https://www.jianshu.com/p/8ace7a078923)\n2. [PHP面试题汇总](https://www.jianshu.com/p/499317bd2ee7)\n3. [MySQL存储引擎－－MyISAM与InnoDB区别](https://www.jianshu.com/p/a957b18ba40d)\n4. [关于HTTP协议，一篇就够了](https://www.jianshu.com/p/80e25cb1d81a)\n\n## 掘金\n\n1. [PHP面试总结](https://juejin.im/post/5b97618bf265da0aff17204f#heading-14)\n\n## 博客园\n\n1. [PHP的几种排序算法的比较](https://www.cnblogs.com/jing1208/p/6289840.html)\n2. [Redis实战](https://www.cnblogs.com/pangzizhe/tag/Redis/)\n3. [Mysql的select加锁分析](https://www.cnblogs.com/wintersoft/p/10787474.html)\n\n## 酷 壳\n\n1. [MYSQL性能优化的最佳20+条经验](https://coolshell.cn/articles/1846.html)\n\n## GitHub\n\n1. [PHP面试问答](https://github.com/colinlet/PHP-Interview-QA/)\n\n## LearnKu\n\n1. [PHP 内核与原生扩展开发(译)](https://learnku.com/docs/php-internals/php7)\n2. [ PHP 设计模式全集(译)](https://learnku.com/docs/php-design-patterns/2018)\n3. [PHP PSR 标准规范(译)](https://learnku.com/docs/psr)\n\n## 知乎\n\n1. [PHP面试题汇总](https://zhuanlan.zhihu.com/p/202873171)\n\n","source":"_posts/202004/网上收集的PHP知识点和面试汇总.md","raw":"title: 网上收集的PHP知识点和面试汇总\ndate: '2020-04-22 15:48:21'\nupdated: '2020-10-10 14:15:51'\ntags: [PHP, 面试, mysql]\npermalink: /articles/2020/04/22/1587541701093.html\n---\n![](https://img.hacpai.com/bing/20180919.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 简书\n\n1. [PHP面试题总结](https://www.jianshu.com/p/8ace7a078923)\n2. [PHP面试题汇总](https://www.jianshu.com/p/499317bd2ee7)\n3. [MySQL存储引擎－－MyISAM与InnoDB区别](https://www.jianshu.com/p/a957b18ba40d)\n4. [关于HTTP协议，一篇就够了](https://www.jianshu.com/p/80e25cb1d81a)\n\n## 掘金\n\n1. [PHP面试总结](https://juejin.im/post/5b97618bf265da0aff17204f#heading-14)\n\n## 博客园\n\n1. [PHP的几种排序算法的比较](https://www.cnblogs.com/jing1208/p/6289840.html)\n2. [Redis实战](https://www.cnblogs.com/pangzizhe/tag/Redis/)\n3. [Mysql的select加锁分析](https://www.cnblogs.com/wintersoft/p/10787474.html)\n\n## 酷 壳\n\n1. [MYSQL性能优化的最佳20+条经验](https://coolshell.cn/articles/1846.html)\n\n## GitHub\n\n1. [PHP面试问答](https://github.com/colinlet/PHP-Interview-QA/)\n\n## LearnKu\n\n1. [PHP 内核与原生扩展开发(译)](https://learnku.com/docs/php-internals/php7)\n2. [ PHP 设计模式全集(译)](https://learnku.com/docs/php-design-patterns/2018)\n3. [PHP PSR 标准规范(译)](https://learnku.com/docs/psr)\n\n## 知乎\n\n1. [PHP面试题汇总](https://zhuanlan.zhihu.com/p/202873171)\n\n","slug":"202004/网上收集的PHP知识点和面试汇总","published":1,"__permalink":"/articles/2020/04/22/1587541701093.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvg000logfdflb34w4w","content":"<p><img src=\"https://img.hacpai.com/bing/20180919.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"简书\"><a href=\"#简书\" class=\"headerlink\" title=\"简书\"></a>简书</h2><ol>\n<li><a href=\"https://www.jianshu.com/p/8ace7a078923\">PHP面试题总结</a></li>\n<li><a href=\"https://www.jianshu.com/p/499317bd2ee7\">PHP面试题汇总</a></li>\n<li><a href=\"https://www.jianshu.com/p/a957b18ba40d\">MySQL存储引擎－－MyISAM与InnoDB区别</a></li>\n<li><a href=\"https://www.jianshu.com/p/80e25cb1d81a\">关于HTTP协议，一篇就够了</a></li>\n</ol>\n<h2 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a>掘金</h2><ol>\n<li><a href=\"https://juejin.im/post/5b97618bf265da0aff17204f#heading-14\">PHP面试总结</a></li>\n</ol>\n<h2 id=\"博客园\"><a href=\"#博客园\" class=\"headerlink\" title=\"博客园\"></a>博客园</h2><ol>\n<li><a href=\"https://www.cnblogs.com/jing1208/p/6289840.html\">PHP的几种排序算法的比较</a></li>\n<li><a href=\"https://www.cnblogs.com/pangzizhe/tag/Redis/\">Redis实战</a></li>\n<li><a href=\"https://www.cnblogs.com/wintersoft/p/10787474.html\">Mysql的select加锁分析</a></li>\n</ol>\n<h2 id=\"酷-壳\"><a href=\"#酷-壳\" class=\"headerlink\" title=\"酷 壳\"></a>酷 壳</h2><ol>\n<li><a href=\"https://coolshell.cn/articles/1846.html\">MYSQL性能优化的最佳20+条经验</a></li>\n</ol>\n<h2 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h2><ol>\n<li><a href=\"https://github.com/colinlet/PHP-Interview-QA/\">PHP面试问答</a></li>\n</ol>\n<h2 id=\"LearnKu\"><a href=\"#LearnKu\" class=\"headerlink\" title=\"LearnKu\"></a>LearnKu</h2><ol>\n<li><a href=\"https://learnku.com/docs/php-internals/php7\">PHP 内核与原生扩展开发(译)</a></li>\n<li><a href=\"https://learnku.com/docs/php-design-patterns/2018\"> PHP 设计模式全集(译)</a></li>\n<li><a href=\"https://learnku.com/docs/psr\">PHP PSR 标准规范(译)</a></li>\n</ol>\n<h2 id=\"知乎\"><a href=\"#知乎\" class=\"headerlink\" title=\"知乎\"></a>知乎</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/202873171\">PHP面试题汇总</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"简书\n 1. PHP面试题总结\n 2. PHP面试题汇总\n 3. MySQL存储引擎－－MyISAM与InnoDB区别\n 4. 关于HTTP协议，一篇就够了\n\n掘金\n 1. PHP面试总结\n\n博客园\n 1. PHP的几种排序算法的比较\n 2. Redis实战\n 3. Mysql的select加锁分析\n\n酷 壳\n 1. MYSQL性能优化的最佳20+条经验\n\nGitHub\n 1. PHP面试问答\n\nLearnKu\n 1. PHP 内核与原生扩展开发(译)\n 2.  PHP 设计模式全集(译)\n 3. PHP PSR 标准规范(译)\n\n知乎\n 1. PHP面试题汇总","more":"<p><img src=\"https://img.hacpai.com/bing/20180919.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"简书\"><a href=\"#简书\" class=\"headerlink\" title=\"简书\"></a>简书</h2><ol>\n<li><a href=\"https://www.jianshu.com/p/8ace7a078923\">PHP面试题总结</a></li>\n<li><a href=\"https://www.jianshu.com/p/499317bd2ee7\">PHP面试题汇总</a></li>\n<li><a href=\"https://www.jianshu.com/p/a957b18ba40d\">MySQL存储引擎－－MyISAM与InnoDB区别</a></li>\n<li><a href=\"https://www.jianshu.com/p/80e25cb1d81a\">关于HTTP协议，一篇就够了</a></li>\n</ol>\n<h2 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a>掘金</h2><ol>\n<li><a href=\"https://juejin.im/post/5b97618bf265da0aff17204f#heading-14\">PHP面试总结</a></li>\n</ol>\n<h2 id=\"博客园\"><a href=\"#博客园\" class=\"headerlink\" title=\"博客园\"></a>博客园</h2><ol>\n<li><a href=\"https://www.cnblogs.com/jing1208/p/6289840.html\">PHP的几种排序算法的比较</a></li>\n<li><a href=\"https://www.cnblogs.com/pangzizhe/tag/Redis/\">Redis实战</a></li>\n<li><a href=\"https://www.cnblogs.com/wintersoft/p/10787474.html\">Mysql的select加锁分析</a></li>\n</ol>\n<h2 id=\"酷-壳\"><a href=\"#酷-壳\" class=\"headerlink\" title=\"酷 壳\"></a>酷 壳</h2><ol>\n<li><a href=\"https://coolshell.cn/articles/1846.html\">MYSQL性能优化的最佳20+条经验</a></li>\n</ol>\n<h2 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h2><ol>\n<li><a href=\"https://github.com/colinlet/PHP-Interview-QA/\">PHP面试问答</a></li>\n</ol>\n<h2 id=\"LearnKu\"><a href=\"#LearnKu\" class=\"headerlink\" title=\"LearnKu\"></a>LearnKu</h2><ol>\n<li><a href=\"https://learnku.com/docs/php-internals/php7\">PHP 内核与原生扩展开发(译)</a></li>\n<li><a href=\"https://learnku.com/docs/php-design-patterns/2018\"> PHP 设计模式全集(译)</a></li>\n<li><a href=\"https://learnku.com/docs/psr\">PHP PSR 标准规范(译)</a></li>\n</ol>\n<h2 id=\"知乎\"><a href=\"#知乎\" class=\"headerlink\" title=\"知乎\"></a>知乎</h2><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/202873171\">PHP面试题汇总</a></li>\n</ol>\n"},{"title":"转载： 你知道缓存的正确打开方式么？","date":"2020-04-16T06:15:27.000Z","updated":"2020-04-16T06:15:27.000Z","_content":"说明：本文为转载内容\n\n# 你知道缓存的正确打开方式么？\n\n## 第一篇\n[原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg](https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg)\n\n\n## 第二篇\n[原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA](https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA)\n\n\n本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息\n\n\n","source":"_posts/202004/转载你知道缓存的正确打开方式么.md","raw":"title: 转载： 你知道缓存的正确打开方式么？\ndate: '2020-04-16 14:15:27'\nupdated: '2020-04-16 14:15:27'\ntags: [转载, 缓存, PHP]\npermalink: /articles/2020/04/16/1587017727206.html\n---\n说明：本文为转载内容\n\n# 你知道缓存的正确打开方式么？\n\n## 第一篇\n[原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg](https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg)\n\n\n## 第二篇\n[原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA](https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA)\n\n\n本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息\n\n\n","slug":"202004/转载你知道缓存的正确打开方式么","published":1,"__permalink":"/articles/2020/04/16/1587017727206.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvh000nogfdcb3afjsc","content":"<p>说明：本文为转载内容</p>\n<h1 id=\"你知道缓存的正确打开方式么？\"><a href=\"#你知道缓存的正确打开方式么？\" class=\"headerlink\" title=\"你知道缓存的正确打开方式么？\"></a>你知道缓存的正确打开方式么？</h1><h2 id=\"第一篇\"><a href=\"#第一篇\" class=\"headerlink\" title=\"第一篇\"></a>第一篇</h2><p><a href=\"https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg\">原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg</a></p>\n<h2 id=\"第二篇\"><a href=\"#第二篇\" class=\"headerlink\" title=\"第二篇\"></a>第二篇</h2><p><a href=\"https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA\">原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA</a></p>\n<p>本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息</p>\n","site":{"data":{}},"excerpt":"说明：本文为转载内容\n\n你知道缓存的正确打开方式么？\n第一篇\n原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg\n\n第二篇\n原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA\n\n本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息","more":"<p>说明：本文为转载内容</p>\n<h1 id=\"你知道缓存的正确打开方式么？\"><a href=\"#你知道缓存的正确打开方式么？\" class=\"headerlink\" title=\"你知道缓存的正确打开方式么？\"></a>你知道缓存的正确打开方式么？</h1><h2 id=\"第一篇\"><a href=\"#第一篇\" class=\"headerlink\" title=\"第一篇\"></a>第一篇</h2><p><a href=\"https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg\">原文地址：https://mp.weixin.qq.com/s/evyse2RD_v25MI52umPReg</a></p>\n<h2 id=\"第二篇\"><a href=\"#第二篇\" class=\"headerlink\" title=\"第二篇\"></a>第二篇</h2><p><a href=\"https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA\">原文地址：https://mp.weixin.qq.com/s/JQbOqv55zXA0TTHPohb9jA</a></p>\n<p>本文由 桶哥 授权 饭米粒 发布，转载请注明本来源信息</p>\n"},{"title":"我在 GitHub 上的开源项目","date":"2020-05-13T03:06:50.000Z","updated":"2020-05-13T03:06:50.000Z","_content":"<!-- 该页面会被定时任务自动覆盖，所以请勿手工更新 -->\n<!-- 如果你有更漂亮的排版方式，请发 issue 告诉我们 -->\n\n### 1. [pic-repo](https://github.com/barryzpc/pic-repo) <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/pic-repo/watchers \"关注数\")&nbsp;&nbsp;[⭐️`1`](https://github.com/barryzpc/pic-repo/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/pic-repo/network/members \"分叉数\")&nbsp;&nbsp;[🏠`http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html`](http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html \"项目主页\")</span>\n\n个人图床，用来存放个人项目的静态文件库，便于直链访问\n\n\n\n---\n\n### 2. [nav.github.io](https://github.com/barryzpc/nav.github.io) <kbd title=\"主要编程语言\">HTML</kbd> <span style=\"font-size: 12px;\">[🤩`2`](https://github.com/barryzpc/nav.github.io/watchers \"关注数\")&nbsp;&nbsp;[⭐️`1`](https://github.com/barryzpc/nav.github.io/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`1`](https://github.com/barryzpc/nav.github.io/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://nav.zhengpc.com/`](https://nav.zhengpc.com/ \"项目主页\")</span>\n\n常用网站地址导航page\n\n\n\n---\n\n### 3. [solo-blog](https://github.com/barryzpc/solo-blog) <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/solo-blog/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/solo-blog/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/solo-blog/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://myblog.zhengpc.com`](https://myblog.zhengpc.com \"项目主页\")</span>\n\n✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索\n\n\n\n---\n\n### 4. [my-solo4.3.1](https://github.com/barryzpc/my-solo4.3.1) <kbd title=\"主要编程语言\">FreeMarker</kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/my-solo4.3.1/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/my-solo4.3.1/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/my-solo4.3.1/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://myblog.zhengpc.com/`](https://myblog.zhengpc.com/ \"项目主页\")</span>\n\n我的博客4.3.1版\n\n\n\n---\n\n### 5. [hyperf-learn](https://github.com/barryzpc/hyperf-learn) <kbd title=\"主要编程语言\">PHP</kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/hyperf-learn/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/hyperf-learn/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/hyperf-learn/network/members \"分叉数\")</span>\n\nhyperf框架的学习\n\n","source":"_posts/202005/我在GitHub上的开源项目.md","raw":"title: 我在 GitHub 上的开源项目\ndate: '2020-05-13 11:06:50'\nupdated: '2020-05-13 11:06:50'\ntags: [开源, GitHub]\npermalink: /my-github-repos\n---\n<!-- 该页面会被定时任务自动覆盖，所以请勿手工更新 -->\n<!-- 如果你有更漂亮的排版方式，请发 issue 告诉我们 -->\n\n### 1. [pic-repo](https://github.com/barryzpc/pic-repo) <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/pic-repo/watchers \"关注数\")&nbsp;&nbsp;[⭐️`1`](https://github.com/barryzpc/pic-repo/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/pic-repo/network/members \"分叉数\")&nbsp;&nbsp;[🏠`http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html`](http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html \"项目主页\")</span>\n\n个人图床，用来存放个人项目的静态文件库，便于直链访问\n\n\n\n---\n\n### 2. [nav.github.io](https://github.com/barryzpc/nav.github.io) <kbd title=\"主要编程语言\">HTML</kbd> <span style=\"font-size: 12px;\">[🤩`2`](https://github.com/barryzpc/nav.github.io/watchers \"关注数\")&nbsp;&nbsp;[⭐️`1`](https://github.com/barryzpc/nav.github.io/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`1`](https://github.com/barryzpc/nav.github.io/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://nav.zhengpc.com/`](https://nav.zhengpc.com/ \"项目主页\")</span>\n\n常用网站地址导航page\n\n\n\n---\n\n### 3. [solo-blog](https://github.com/barryzpc/solo-blog) <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/solo-blog/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/solo-blog/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/solo-blog/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://myblog.zhengpc.com`](https://myblog.zhengpc.com \"项目主页\")</span>\n\n✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索\n\n\n\n---\n\n### 4. [my-solo4.3.1](https://github.com/barryzpc/my-solo4.3.1) <kbd title=\"主要编程语言\">FreeMarker</kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/my-solo4.3.1/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/my-solo4.3.1/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/my-solo4.3.1/network/members \"分叉数\")&nbsp;&nbsp;[🏠`https://myblog.zhengpc.com/`](https://myblog.zhengpc.com/ \"项目主页\")</span>\n\n我的博客4.3.1版\n\n\n\n---\n\n### 5. [hyperf-learn](https://github.com/barryzpc/hyperf-learn) <kbd title=\"主要编程语言\">PHP</kbd> <span style=\"font-size: 12px;\">[🤩`1`](https://github.com/barryzpc/hyperf-learn/watchers \"关注数\")&nbsp;&nbsp;[⭐️`0`](https://github.com/barryzpc/hyperf-learn/stargazers \"收藏数\")&nbsp;&nbsp;[🖖`0`](https://github.com/barryzpc/hyperf-learn/network/members \"分叉数\")</span>\n\nhyperf框架的学习\n\n","slug":"202005/我在GitHub上的开源项目","published":1,"__permalink":"/my-github-repos","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvi000pogfd13vefxma","content":"<!-- 该页面会被定时任务自动覆盖，所以请勿手工更新 -->\n<!-- 如果你有更漂亮的排版方式，请发 issue 告诉我们 -->\n\n<h3 id=\"1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\"><a href=\"#1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\" class=\"headerlink\" title=\"1. pic-repo  🤩1&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\"></a>1. <a href=\"https://github.com/barryzpc/pic-repo\">pic-repo</a> <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/pic-repo/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/pic-repo/stargazers\" title=\"收藏数\">⭐️<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/pic-repo/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\" title=\"项目主页\">🏠<code>http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</code></a></span></h3><p>个人图床，用来存放个人项目的静态文件库，便于直链访问</p>\n<hr>\n<h3 id=\"2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com\"><a href=\"#2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com\" class=\"headerlink\" title=\"2. nav.github.io HTML 🤩2&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖1&nbsp;&nbsp;🏠https://nav.zhengpc.com/\"></a>2. <a href=\"https://github.com/barryzpc/nav.github.io\">nav.github.io</a> <kbd title=\"主要编程语言\">HTML</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/nav.github.io/watchers\" title=\"关注数\">🤩<code>2</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/nav.github.io/stargazers\" title=\"收藏数\">⭐️<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/nav.github.io/network/members\" title=\"分叉数\">🖖<code>1</code></a>&nbsp;&nbsp;<a href=\"https://nav.zhengpc.com/\" title=\"项目主页\">🏠<code>https://nav.zhengpc.com/</code></a></span></h3><p>常用网站地址导航page</p>\n<hr>\n<h3 id=\"3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\"><a href=\"#3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\" class=\"headerlink\" title=\"3. solo-blog  🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com\"></a>3. <a href=\"https://github.com/barryzpc/solo-blog\">solo-blog</a> <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/solo-blog/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/solo-blog/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/solo-blog/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"https://myblog.zhengpc.com/\" title=\"项目主页\">🏠<code>https://myblog.zhengpc.com</code></a></span></h3><p>✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索</p>\n<hr>\n<h3 id=\"4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\"><a href=\"#4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\" class=\"headerlink\" title=\"4. my-solo4.3.1 FreeMarker 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com/\"></a>4. <a href=\"https://github.com/barryzpc/my-solo4.3.1\">my-solo4.3.1</a> <kbd title=\"主要编程语言\">FreeMarker</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/my-solo4.3.1/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/my-solo4.3.1/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/my-solo4.3.1/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"https://myblog.zhengpc.com/\" title=\"项目主页\">🏠<code>https://myblog.zhengpc.com/</code></a></span></h3><p>我的博客4.3.1版</p>\n<hr>\n<h3 id=\"5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0\"><a href=\"#5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0\" class=\"headerlink\" title=\"5. hyperf-learn PHP 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0\"></a>5. <a href=\"https://github.com/barryzpc/hyperf-learn\">hyperf-learn</a> <kbd title=\"主要编程语言\">PHP</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/hyperf-learn/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/hyperf-learn/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/hyperf-learn/network/members\" title=\"分叉数\">🖖<code>0</code></a></span></h3><p>hyperf框架的学习</p>\n","site":{"data":{}},"excerpt":"1. pic-repo 🤩1⭐️1🖖0🏠http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\n个人图床，用来存放个人项目的静态文件库，便于直链访问\n\n\n\n\n2. nav.github.io HTML 🤩2⭐️1🖖1🏠https://nav.zhengpc.com/\n常用网站地址导航page\n\n\n\n\n3. solo-blog 🤩1⭐️0🖖0🏠https://myblog.zhengpc.com\n✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索\n\n\n\n\n4. my-solo4.3.1 FreeMarker","more":"<!-- 该页面会被定时任务自动覆盖，所以请勿手工更新 -->\n<!-- 如果你有更漂亮的排版方式，请发 issue 告诉我们 -->\n\n<h3 id=\"1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\"><a href=\"#1-pic-repo-🤩1-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖0-nbsp-nbsp-🏠http-myblog-zhengpc-com-articles-2020-03-11-1583919217986-html\" class=\"headerlink\" title=\"1. pic-repo  🤩1&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\"></a>1. <a href=\"https://github.com/barryzpc/pic-repo\">pic-repo</a> <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/pic-repo/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/pic-repo/stargazers\" title=\"收藏数\">⭐️<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/pic-repo/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html\" title=\"项目主页\">🏠<code>http://myblog.zhengpc.com/articles/2020/03/11/1583919217986.html</code></a></span></h3><p>个人图床，用来存放个人项目的静态文件库，便于直链访问</p>\n<hr>\n<h3 id=\"2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com\"><a href=\"#2-nav-github-io-HTML-🤩2-nbsp-nbsp-⭐️1-nbsp-nbsp-🖖1-nbsp-nbsp-🏠https-nav-zhengpc-com\" class=\"headerlink\" title=\"2. nav.github.io HTML 🤩2&nbsp;&nbsp;⭐️1&nbsp;&nbsp;🖖1&nbsp;&nbsp;🏠https://nav.zhengpc.com/\"></a>2. <a href=\"https://github.com/barryzpc/nav.github.io\">nav.github.io</a> <kbd title=\"主要编程语言\">HTML</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/nav.github.io/watchers\" title=\"关注数\">🤩<code>2</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/nav.github.io/stargazers\" title=\"收藏数\">⭐️<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/nav.github.io/network/members\" title=\"分叉数\">🖖<code>1</code></a>&nbsp;&nbsp;<a href=\"https://nav.zhengpc.com/\" title=\"项目主页\">🏠<code>https://nav.zhengpc.com/</code></a></span></h3><p>常用网站地址导航page</p>\n<hr>\n<h3 id=\"3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\"><a href=\"#3-solo-blog-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\" class=\"headerlink\" title=\"3. solo-blog  🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com\"></a>3. <a href=\"https://github.com/barryzpc/solo-blog\">solo-blog</a> <kbd title=\"主要编程语言\"></kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/solo-blog/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/solo-blog/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/solo-blog/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"https://myblog.zhengpc.com/\" title=\"项目主页\">🏠<code>https://myblog.zhengpc.com</code></a></span></h3><p>✍️ 浩天说 - 路漫漫其修远兮，吾将上下而求索</p>\n<hr>\n<h3 id=\"4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\"><a href=\"#4-my-solo4-3-1-FreeMarker-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0-nbsp-nbsp-🏠https-myblog-zhengpc-com\" class=\"headerlink\" title=\"4. my-solo4.3.1 FreeMarker 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0&nbsp;&nbsp;🏠https://myblog.zhengpc.com/\"></a>4. <a href=\"https://github.com/barryzpc/my-solo4.3.1\">my-solo4.3.1</a> <kbd title=\"主要编程语言\">FreeMarker</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/my-solo4.3.1/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/my-solo4.3.1/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/my-solo4.3.1/network/members\" title=\"分叉数\">🖖<code>0</code></a>&nbsp;&nbsp;<a href=\"https://myblog.zhengpc.com/\" title=\"项目主页\">🏠<code>https://myblog.zhengpc.com/</code></a></span></h3><p>我的博客4.3.1版</p>\n<hr>\n<h3 id=\"5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0\"><a href=\"#5-hyperf-learn-PHP-🤩1-nbsp-nbsp-⭐️0-nbsp-nbsp-🖖0\" class=\"headerlink\" title=\"5. hyperf-learn PHP 🤩1&nbsp;&nbsp;⭐️0&nbsp;&nbsp;🖖0\"></a>5. <a href=\"https://github.com/barryzpc/hyperf-learn\">hyperf-learn</a> <kbd title=\"主要编程语言\">PHP</kbd> <span style=\"font-size: 12px;\"><a href=\"https://github.com/barryzpc/hyperf-learn/watchers\" title=\"关注数\">🤩<code>1</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/hyperf-learn/stargazers\" title=\"收藏数\">⭐️<code>0</code></a>&nbsp;&nbsp;<a href=\"https://github.com/barryzpc/hyperf-learn/network/members\" title=\"分叉数\">🖖<code>0</code></a></span></h3><p>hyperf框架的学习</p>\n"},{"title":"转载：centos7 编译安装 php7.4","date":"2020-04-14T03:27:31.000Z","updated":"2020-04-14T03:29:47.000Z","_content":"![](https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n原文地址：https://www.cnblogs.com/liubaoqing/p/12176017.html\n\n#### 1. 下载安装编译工具\n\n```\nyum groupinstall 'Development Tools'\n```\n#### 2.安装依赖包\n\n```\nyum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel\n```\n\n#### 3.下载并解压php7.4\n\n```\ncd /usr/local/src\nwget  https://www.php.net/distributions/php-7.4.4.tar.bz2\ntar jxvf php-7.4.4.tar.bz2\ncd php-7.4.4\n```\n\n#### 4.编译安装（./configure --help 查看编译参数）\n\n##### 编译前，新增用户组，用户，用于编译使用\n```\ngroupadd www\nuseradd -g www www\n```\n\n##### 开始编译（根据自己需要增减）\n\n```\n./configure   --prefix=/usr/local/php   --with-config-file-path=/etc   --with-fpm-user=www   --with-fpm-group=www    --with-curl   --with-freetype-dir   --enable-gd   --with-gettext    --with-iconv-dir   --with-kerberos   --with-libdir=lib64   --with-libxml-dir   --with-mysqli   --with-openssl   --with-pcre-regex   --with-pdo-mysql   --with-pdo-sqlite   --with-pear   --with-png-dir   --with-jpeg-dir   --with-xmlrpc   --with-xsl   --with-zlib   --with-bz2   --with-mhash   --enable-fpm   --enable-bcmath   --enable-libxml   --enable-inline-optimization   --enable-mbregex   --enable-mbstring   --enable-opcache   --enable-pcntl   --enable-shmop   --enable-soap   --enable-sockets   --enable-sysvsem   --enable-sysvshm   --enable-xml    --enable-zip   --enable-fpm\n```\n\n- 这里需要注意的是在php7.4 编译参数 --with-gd  要改成了 --enable-gd\n\n---\n##### 当报错checking for libzip... configure: error: system libzip must be upgraded to version >= 0.11\n\n先删除旧版本\n```\nyum remove -y libzip\n```\n\n下载编译安装\n```\nwget https://nih.at/libzip/libzip-1.2.0.tar.gz\ntar -zxvf libzip-1.2.0.tar.gz\ncd libzip-1.2.0 ./configure\nmake && make install\n```\n---\n\n##### error： Package requirements (sqlite3 > 3.7.4) were not met\n\n```\nyum install libsqlite3x-devel -y\n```\n---\n##### error: Package requirements (oniguruma) were not met\n\n```\nyum install oniguruma-devel -y\n```\n---\n##### 当yum install 提示 \"没可用软件包\"\n\n```\nyum install -y epel-release\n```\n---\n##### off_t undefined 报错\n\n```\nconfigure: error: off_t undefined; check your library configuration\n```\n\noff_t 类型是在 头文件 unistd.h中定义的，  \n在32位系统 编程成 long int ，64位系统则编译成 long long int ，  \n在进行编译的时候 是默认查找64位的动态链接库，  \n但是默认情况下 centos 的动态链接库配置文件/etc/ld.so.conf里并没有加入搜索路径，  \n这个时候需要将 /usr/local/lib64 /usr/lib64 这些针对64位的库文件路径加进去。\n\n###### 添加搜索路径到配置文件\n```\necho '/usr/local/lib64\n/usr/local/lib /usr/lib /usr/lib64'>>/etc/ld.so.conf\n```\n ###### 然后 更新配置\n```\nldconfig -v\n```\n---\n\n##### /usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory\n\n```\ncp /usr/local/lib/libzip/include/zipconf.h /usr/local/include/zipconf.h\n```\n\n##### 编译没问题了，执行make && make install  安装完毕\n```\nmake && make install\n```\n\n#### 5.配置环境\n\n执行完安装命令后php7.4就已经安装在到了/usr/local/php目录下了\n\n查看版本\n\n```\n/usr/local/php/bin/php -v\n```\n\n添加环境变量\n\n```\nvim /etc/profile\n```\n\n添加到最后\n\n```\nPATH=$PATH:/usr/local/php/bin\nexport PATH\n```\n\n更新环境变量\n\n```\nsource /etc/profile\n```\n\n查看版本\n```\nphp -v\n```\n\n#### 6.配置php-fpm\n\n```\ncp /usr/local/src/php-7.4.4/php.ini-production /etc/php.ini\ncp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf\ncp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf\ncp /usr/local/src/php-7.4.4/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\nchmod +x /etc/init.d/php-fpm\n```\n\n启动php-fpm\n```\n/etc/init.d/php-fpm start\n```\n或者\n```\nservice php-fpm start\n```\n\n#### 说明\n本文为转载文章，对我帮助很大，所以转载记录一下。如需删除请及时联系\n\n原文地址：https://www.cnblogs.com/liubaoqing/p/12176017.html\n","source":"_posts/202004/转载centos7编译安装php7.4.md","raw":"title: 转载：centos7 编译安装 php7.4\ndate: '2020-04-14 11:27:31'\nupdated: '2020-04-14 11:29:47'\ntags: [转载, PHP, CentOS7]\npermalink: /articles/2020/04/14/1586834851714.html\n---\n![](https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n原文地址：https://www.cnblogs.com/liubaoqing/p/12176017.html\n\n#### 1. 下载安装编译工具\n\n```\nyum groupinstall 'Development Tools'\n```\n#### 2.安装依赖包\n\n```\nyum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel\n```\n\n#### 3.下载并解压php7.4\n\n```\ncd /usr/local/src\nwget  https://www.php.net/distributions/php-7.4.4.tar.bz2\ntar jxvf php-7.4.4.tar.bz2\ncd php-7.4.4\n```\n\n#### 4.编译安装（./configure --help 查看编译参数）\n\n##### 编译前，新增用户组，用户，用于编译使用\n```\ngroupadd www\nuseradd -g www www\n```\n\n##### 开始编译（根据自己需要增减）\n\n```\n./configure   --prefix=/usr/local/php   --with-config-file-path=/etc   --with-fpm-user=www   --with-fpm-group=www    --with-curl   --with-freetype-dir   --enable-gd   --with-gettext    --with-iconv-dir   --with-kerberos   --with-libdir=lib64   --with-libxml-dir   --with-mysqli   --with-openssl   --with-pcre-regex   --with-pdo-mysql   --with-pdo-sqlite   --with-pear   --with-png-dir   --with-jpeg-dir   --with-xmlrpc   --with-xsl   --with-zlib   --with-bz2   --with-mhash   --enable-fpm   --enable-bcmath   --enable-libxml   --enable-inline-optimization   --enable-mbregex   --enable-mbstring   --enable-opcache   --enable-pcntl   --enable-shmop   --enable-soap   --enable-sockets   --enable-sysvsem   --enable-sysvshm   --enable-xml    --enable-zip   --enable-fpm\n```\n\n- 这里需要注意的是在php7.4 编译参数 --with-gd  要改成了 --enable-gd\n\n---\n##### 当报错checking for libzip... configure: error: system libzip must be upgraded to version >= 0.11\n\n先删除旧版本\n```\nyum remove -y libzip\n```\n\n下载编译安装\n```\nwget https://nih.at/libzip/libzip-1.2.0.tar.gz\ntar -zxvf libzip-1.2.0.tar.gz\ncd libzip-1.2.0 ./configure\nmake && make install\n```\n---\n\n##### error： Package requirements (sqlite3 > 3.7.4) were not met\n\n```\nyum install libsqlite3x-devel -y\n```\n---\n##### error: Package requirements (oniguruma) were not met\n\n```\nyum install oniguruma-devel -y\n```\n---\n##### 当yum install 提示 \"没可用软件包\"\n\n```\nyum install -y epel-release\n```\n---\n##### off_t undefined 报错\n\n```\nconfigure: error: off_t undefined; check your library configuration\n```\n\noff_t 类型是在 头文件 unistd.h中定义的，  \n在32位系统 编程成 long int ，64位系统则编译成 long long int ，  \n在进行编译的时候 是默认查找64位的动态链接库，  \n但是默认情况下 centos 的动态链接库配置文件/etc/ld.so.conf里并没有加入搜索路径，  \n这个时候需要将 /usr/local/lib64 /usr/lib64 这些针对64位的库文件路径加进去。\n\n###### 添加搜索路径到配置文件\n```\necho '/usr/local/lib64\n/usr/local/lib /usr/lib /usr/lib64'>>/etc/ld.so.conf\n```\n ###### 然后 更新配置\n```\nldconfig -v\n```\n---\n\n##### /usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory\n\n```\ncp /usr/local/lib/libzip/include/zipconf.h /usr/local/include/zipconf.h\n```\n\n##### 编译没问题了，执行make && make install  安装完毕\n```\nmake && make install\n```\n\n#### 5.配置环境\n\n执行完安装命令后php7.4就已经安装在到了/usr/local/php目录下了\n\n查看版本\n\n```\n/usr/local/php/bin/php -v\n```\n\n添加环境变量\n\n```\nvim /etc/profile\n```\n\n添加到最后\n\n```\nPATH=$PATH:/usr/local/php/bin\nexport PATH\n```\n\n更新环境变量\n\n```\nsource /etc/profile\n```\n\n查看版本\n```\nphp -v\n```\n\n#### 6.配置php-fpm\n\n```\ncp /usr/local/src/php-7.4.4/php.ini-production /etc/php.ini\ncp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf\ncp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf\ncp /usr/local/src/php-7.4.4/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\nchmod +x /etc/init.d/php-fpm\n```\n\n启动php-fpm\n```\n/etc/init.d/php-fpm start\n```\n或者\n```\nservice php-fpm start\n```\n\n#### 说明\n本文为转载文章，对我帮助很大，所以转载记录一下。如需删除请及时联系\n\n原文地址：https://www.cnblogs.com/liubaoqing/p/12176017.html\n","slug":"202004/转载centos7编译安装php7.4","published":1,"__permalink":"/articles/2020/04/14/1586834851714.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvj000qogfd1h6i2oh9","content":"<p><img src=\"https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<p>原文地址：<a href=\"https://www.cnblogs.com/liubaoqing/p/12176017.html\">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>\n<h4 id=\"1-下载安装编译工具\"><a href=\"#1-下载安装编译工具\" class=\"headerlink\" title=\"1. 下载安装编译工具\"></a>1. 下载安装编译工具</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum groupinstall &#39;Development Tools&#39;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-安装依赖包\"><a href=\"#2-安装依赖包\" class=\"headerlink\" title=\"2.安装依赖包\"></a>2.安装依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-下载并解压php7-4\"><a href=\"#3-下载并解压php7-4\" class=\"headerlink\" title=\"3.下载并解压php7.4\"></a>3.下载并解压php7.4</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class=\"line\">wget  https:&#x2F;&#x2F;www.php.net&#x2F;distributions&#x2F;php-7.4.4.tar.bz2</span><br><span class=\"line\">tar jxvf php-7.4.4.tar.bz2</span><br><span class=\"line\">cd php-7.4.4</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-编译安装（-configure-–help-查看编译参数）\"><a href=\"#4-编译安装（-configure-–help-查看编译参数）\" class=\"headerlink\" title=\"4.编译安装（./configure –help 查看编译参数）\"></a>4.编译安装（./configure –help 查看编译参数）</h4><h5 id=\"编译前，新增用户组，用户，用于编译使用\"><a href=\"#编译前，新增用户组，用户，用于编译使用\" class=\"headerlink\" title=\"编译前，新增用户组，用户，用于编译使用\"></a>编译前，新增用户组，用户，用于编译使用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd www</span><br><span class=\"line\">useradd -g www www</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"开始编译（根据自己需要增减）\"><a href=\"#开始编译（根据自己需要增减）\" class=\"headerlink\" title=\"开始编译（根据自己需要增减）\"></a>开始编译（根据自己需要增减）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;configure   --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php   --with-config-file-path&#x3D;&#x2F;etc   --with-fpm-user&#x3D;www   --with-fpm-group&#x3D;www    --with-curl   --with-freetype-dir   --enable-gd   --with-gettext    --with-iconv-dir   --with-kerberos   --with-libdir&#x3D;lib64   --with-libxml-dir   --with-mysqli   --with-openssl   --with-pcre-regex   --with-pdo-mysql   --with-pdo-sqlite   --with-pear   --with-png-dir   --with-jpeg-dir   --with-xmlrpc   --with-xsl   --with-zlib   --with-bz2   --with-mhash   --enable-fpm   --enable-bcmath   --enable-libxml   --enable-inline-optimization   --enable-mbregex   --enable-mbstring   --enable-opcache   --enable-pcntl   --enable-shmop   --enable-soap   --enable-sockets   --enable-sysvsem   --enable-sysvshm   --enable-xml    --enable-zip   --enable-fpm</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这里需要注意的是在php7.4 编译参数 –with-gd  要改成了 –enable-gd</li>\n</ul>\n<hr>\n<h5 id=\"当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11\"><a href=\"#当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11\" class=\"headerlink\" title=\"当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11\"></a>当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11</h5><p>先删除旧版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove -y libzip</span><br></pre></td></tr></table></figure>\n\n<p>下载编译安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;nih.at&#x2F;libzip&#x2F;libzip-1.2.0.tar.gz</span><br><span class=\"line\">tar -zxvf libzip-1.2.0.tar.gz</span><br><span class=\"line\">cd libzip-1.2.0 .&#x2F;configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met\"><a href=\"#error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met\" class=\"headerlink\" title=\"error： Package requirements (sqlite3 &gt; 3.7.4) were not met\"></a>error： Package requirements (sqlite3 &gt; 3.7.4) were not met</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libsqlite3x-devel -y</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"error-Package-requirements-oniguruma-were-not-met\"><a href=\"#error-Package-requirements-oniguruma-were-not-met\" class=\"headerlink\" title=\"error: Package requirements (oniguruma) were not met\"></a>error: Package requirements (oniguruma) were not met</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install oniguruma-devel -y</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"当yum-install-提示-“没可用软件包”\"><a href=\"#当yum-install-提示-“没可用软件包”\" class=\"headerlink\" title=\"当yum install 提示 “没可用软件包”\"></a>当yum install 提示 “没可用软件包”</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"off-t-undefined-报错\"><a href=\"#off-t-undefined-报错\" class=\"headerlink\" title=\"off_t undefined 报错\"></a>off_t undefined 报错</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure: error: off_t undefined; check your library configuration</span><br></pre></td></tr></table></figure>\n\n<p>off_t 类型是在 头文件 unistd.h中定义的，<br>在32位系统 编程成 long int ，64位系统则编译成 long long int ，<br>在进行编译的时候 是默认查找64位的动态链接库，<br>但是默认情况下 centos 的动态链接库配置文件/etc/ld.so.conf里并没有加入搜索路径，<br>这个时候需要将 /usr/local/lib64 /usr/lib64 这些针对64位的库文件路径加进去。</p>\n<h6 id=\"添加搜索路径到配置文件\"><a href=\"#添加搜索路径到配置文件\" class=\"headerlink\" title=\"添加搜索路径到配置文件\"></a>添加搜索路径到配置文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#39;&#x2F;usr&#x2F;local&#x2F;lib64</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;lib &#x2F;usr&#x2F;lib &#x2F;usr&#x2F;lib64&#39;&gt;&gt;&#x2F;etc&#x2F;ld.so.conf</span><br></pre></td></tr></table></figure>\n<h6 id=\"然后-更新配置\"><a href=\"#然后-更新配置\" class=\"headerlink\" title=\"然后 更新配置\"></a>然后 更新配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig -v</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory\"><a href=\"#usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory\" class=\"headerlink\" title=\"/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory\"></a>/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libzip&#x2F;include&#x2F;zipconf.h &#x2F;usr&#x2F;local&#x2F;include&#x2F;zipconf.h</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"编译没问题了，执行make-amp-amp-make-install-安装完毕\"><a href=\"#编译没问题了，执行make-amp-amp-make-install-安装完毕\" class=\"headerlink\" title=\"编译没问题了，执行make &amp;&amp; make install  安装完毕\"></a>编译没问题了，执行make &amp;&amp; make install  安装完毕</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-配置环境\"><a href=\"#5-配置环境\" class=\"headerlink\" title=\"5.配置环境\"></a>5.配置环境</h4><p>执行完安装命令后php7.4就已经安装在到了/usr/local/php目录下了</p>\n<p>查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php -v</span><br></pre></td></tr></table></figure>\n\n<p>添加环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<p>添加到最后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin</span><br><span class=\"line\">export PATH</span><br></pre></td></tr></table></figure>\n\n<p>更新环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<p>查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-配置php-fpm\"><a href=\"#6-配置php-fpm\" class=\"headerlink\" title=\"6.配置php-fpm\"></a>6.配置php-fpm</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;php.ini-production &#x2F;etc&#x2F;php.ini</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;sapi&#x2F;fpm&#x2F;init.d.php-fpm &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br><span class=\"line\">chmod +x &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br></pre></td></tr></table></figure>\n\n<p>启动php-fpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;etc&#x2F;init.d&#x2F;php-fpm start</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php-fpm start</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>本文为转载文章，对我帮助很大，所以转载记录一下。如需删除请及时联系</p>\n<p>原文地址：<a href=\"https://www.cnblogs.com/liubaoqing/p/12176017.html\">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>\n","site":{"data":{}},"excerpt":"原文地址：https://www.cnblogs.com/liubaoqing/p/12176017.html\n\n1. 下载安装编译工具\n1\n\n\nyum groupinstall 'Development Tools'\n\n\n2.安装依赖包\n1\n\n\nyum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel ","more":"<p><img src=\"https://img.hacpai.com/bing/20171111.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<p>原文地址：<a href=\"https://www.cnblogs.com/liubaoqing/p/12176017.html\">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>\n<h4 id=\"1-下载安装编译工具\"><a href=\"#1-下载安装编译工具\" class=\"headerlink\" title=\"1. 下载安装编译工具\"></a>1. 下载安装编译工具</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum groupinstall &#39;Development Tools&#39;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-安装依赖包\"><a href=\"#2-安装依赖包\" class=\"headerlink\" title=\"2.安装依赖包\"></a>2.安装依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-下载并解压php7-4\"><a href=\"#3-下载并解压php7-4\" class=\"headerlink\" title=\"3.下载并解压php7.4\"></a>3.下载并解压php7.4</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class=\"line\">wget  https:&#x2F;&#x2F;www.php.net&#x2F;distributions&#x2F;php-7.4.4.tar.bz2</span><br><span class=\"line\">tar jxvf php-7.4.4.tar.bz2</span><br><span class=\"line\">cd php-7.4.4</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-编译安装（-configure-–help-查看编译参数）\"><a href=\"#4-编译安装（-configure-–help-查看编译参数）\" class=\"headerlink\" title=\"4.编译安装（./configure –help 查看编译参数）\"></a>4.编译安装（./configure –help 查看编译参数）</h4><h5 id=\"编译前，新增用户组，用户，用于编译使用\"><a href=\"#编译前，新增用户组，用户，用于编译使用\" class=\"headerlink\" title=\"编译前，新增用户组，用户，用于编译使用\"></a>编译前，新增用户组，用户，用于编译使用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd www</span><br><span class=\"line\">useradd -g www www</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"开始编译（根据自己需要增减）\"><a href=\"#开始编译（根据自己需要增减）\" class=\"headerlink\" title=\"开始编译（根据自己需要增减）\"></a>开始编译（根据自己需要增减）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;configure   --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php   --with-config-file-path&#x3D;&#x2F;etc   --with-fpm-user&#x3D;www   --with-fpm-group&#x3D;www    --with-curl   --with-freetype-dir   --enable-gd   --with-gettext    --with-iconv-dir   --with-kerberos   --with-libdir&#x3D;lib64   --with-libxml-dir   --with-mysqli   --with-openssl   --with-pcre-regex   --with-pdo-mysql   --with-pdo-sqlite   --with-pear   --with-png-dir   --with-jpeg-dir   --with-xmlrpc   --with-xsl   --with-zlib   --with-bz2   --with-mhash   --enable-fpm   --enable-bcmath   --enable-libxml   --enable-inline-optimization   --enable-mbregex   --enable-mbstring   --enable-opcache   --enable-pcntl   --enable-shmop   --enable-soap   --enable-sockets   --enable-sysvsem   --enable-sysvshm   --enable-xml    --enable-zip   --enable-fpm</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这里需要注意的是在php7.4 编译参数 –with-gd  要改成了 –enable-gd</li>\n</ul>\n<hr>\n<h5 id=\"当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11\"><a href=\"#当报错checking-for-libzip…-configure-error-system-libzip-must-be-upgraded-to-version-gt-0-11\" class=\"headerlink\" title=\"当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11\"></a>当报错checking for libzip… configure: error: system libzip must be upgraded to version &gt;= 0.11</h5><p>先删除旧版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove -y libzip</span><br></pre></td></tr></table></figure>\n\n<p>下载编译安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:&#x2F;&#x2F;nih.at&#x2F;libzip&#x2F;libzip-1.2.0.tar.gz</span><br><span class=\"line\">tar -zxvf libzip-1.2.0.tar.gz</span><br><span class=\"line\">cd libzip-1.2.0 .&#x2F;configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met\"><a href=\"#error：-Package-requirements-sqlite3-gt-3-7-4-were-not-met\" class=\"headerlink\" title=\"error： Package requirements (sqlite3 &gt; 3.7.4) were not met\"></a>error： Package requirements (sqlite3 &gt; 3.7.4) were not met</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libsqlite3x-devel -y</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"error-Package-requirements-oniguruma-were-not-met\"><a href=\"#error-Package-requirements-oniguruma-were-not-met\" class=\"headerlink\" title=\"error: Package requirements (oniguruma) were not met\"></a>error: Package requirements (oniguruma) were not met</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install oniguruma-devel -y</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"当yum-install-提示-“没可用软件包”\"><a href=\"#当yum-install-提示-“没可用软件包”\" class=\"headerlink\" title=\"当yum install 提示 “没可用软件包”\"></a>当yum install 提示 “没可用软件包”</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y epel-release</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"off-t-undefined-报错\"><a href=\"#off-t-undefined-报错\" class=\"headerlink\" title=\"off_t undefined 报错\"></a>off_t undefined 报错</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configure: error: off_t undefined; check your library configuration</span><br></pre></td></tr></table></figure>\n\n<p>off_t 类型是在 头文件 unistd.h中定义的，<br>在32位系统 编程成 long int ，64位系统则编译成 long long int ，<br>在进行编译的时候 是默认查找64位的动态链接库，<br>但是默认情况下 centos 的动态链接库配置文件/etc/ld.so.conf里并没有加入搜索路径，<br>这个时候需要将 /usr/local/lib64 /usr/lib64 这些针对64位的库文件路径加进去。</p>\n<h6 id=\"添加搜索路径到配置文件\"><a href=\"#添加搜索路径到配置文件\" class=\"headerlink\" title=\"添加搜索路径到配置文件\"></a>添加搜索路径到配置文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &#39;&#x2F;usr&#x2F;local&#x2F;lib64</span><br><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;lib &#x2F;usr&#x2F;lib &#x2F;usr&#x2F;lib64&#39;&gt;&gt;&#x2F;etc&#x2F;ld.so.conf</span><br></pre></td></tr></table></figure>\n<h6 id=\"然后-更新配置\"><a href=\"#然后-更新配置\" class=\"headerlink\" title=\"然后 更新配置\"></a>然后 更新配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig -v</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory\"><a href=\"#usr-local-include-zip-h-59-21-fatal-error-zipconf-h-No-such-file-or-directory\" class=\"headerlink\" title=\"/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory\"></a>/usr/local/include/zip.h:59:21: fatal error: zipconf.h: No such file or directory</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libzip&#x2F;include&#x2F;zipconf.h &#x2F;usr&#x2F;local&#x2F;include&#x2F;zipconf.h</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"编译没问题了，执行make-amp-amp-make-install-安装完毕\"><a href=\"#编译没问题了，执行make-amp-amp-make-install-安装完毕\" class=\"headerlink\" title=\"编译没问题了，执行make &amp;&amp; make install  安装完毕\"></a>编译没问题了，执行make &amp;&amp; make install  安装完毕</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-配置环境\"><a href=\"#5-配置环境\" class=\"headerlink\" title=\"5.配置环境\"></a>5.配置环境</h4><p>执行完安装命令后php7.4就已经安装在到了/usr/local/php目录下了</p>\n<p>查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php -v</span><br></pre></td></tr></table></figure>\n\n<p>添加环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<p>添加到最后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin</span><br><span class=\"line\">export PATH</span><br></pre></td></tr></table></figure>\n\n<p>更新环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>\n\n<p>查看版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-配置php-fpm\"><a href=\"#6-配置php-fpm\" class=\"headerlink\" title=\"6.配置php-fpm\"></a>6.配置php-fpm</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;php.ini-production &#x2F;etc&#x2F;php.ini</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.conf</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf.default &#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class=\"line\">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-7.4.4&#x2F;sapi&#x2F;fpm&#x2F;init.d.php-fpm &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br><span class=\"line\">chmod +x &#x2F;etc&#x2F;init.d&#x2F;php-fpm</span><br></pre></td></tr></table></figure>\n\n<p>启动php-fpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;etc&#x2F;init.d&#x2F;php-fpm start</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service php-fpm start</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>本文为转载文章，对我帮助很大，所以转载记录一下。如需删除请及时联系</p>\n<p>原文地址：<a href=\"https://www.cnblogs.com/liubaoqing/p/12176017.html\">https://www.cnblogs.com/liubaoqing/p/12176017.html</a></p>\n"},{"title":"PHP使用curl实现毫秒级等待的伪异步请求","date":"2020-07-16T15:45:41.000Z","updated":"2020-07-27T01:23:20.000Z","_content":"![](https://img.hacpai.com/bing/20181116.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n## 场景描述\n\n在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。\n\n## 场景升级\n\n这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 `CUROPT_TIMEOUT`最小设置为1。也就是说，客户端至少必须等待1秒钟。这时候我们迫切需要使用毫秒级的等待，然后断开。为整个流程节省更多的时间！\n\n## 代码实现\n\n```php\n/**\n     * PHP发送异步请求 毫秒级\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @param array $header\n     * @return array\n     */\n    static public function makeAsyncRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n        curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则在CentOS环境下面设置毫秒级会报错\n        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, 30);//设置cURL允许执行的最长毫秒数\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n## CentOS下设置毫秒级会报错Bug\n\n为什么在CentOS服务器下要增加这一行：\n```\ncurl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则在CentOS环境下面设置毫秒级会报错\n```\n\n\n主要原因：\n\n> 在Linux系统上, 如果使用了系统标准的DNS解析, 则会使用SIGALARM来提供控制域名解析超时的功能，但是SIGALARM不支持小于1s的超时。\n\n分析与解决：可以阅读大神[风雪之隅](https://www.laruence.com/)专门这对该bug分析以及解决写的一篇文章：[Curl的毫秒超时的一个\"Bug\"](https://www.laruence.com/2014/01/21/2939.html)\n\n\n\n\n## PHP更多异步实现方法\n\n如果想了解更多的PHP实现异步调用方法可以去阅读[风雪之隅](https://www.laruence.com/)也就是大名鼎鼎的**鸟哥**写的一篇博客：[PHP实现异步调用方法研究](https://www.laruence.com/2008/04/14/318.html)\n","source":"_posts/202007/PHP使用curl实现毫秒级等待的伪异步请求.md","raw":"title: PHP使用curl实现毫秒级等待的伪异步请求\ndate: '2020-07-16 23:45:41'\nupdated: '2020-07-27 09:23:20'\ntags: [PHP, CURL, 毫秒级伪异步]\npermalink: /articles/2020/07/16/1594914341041.html\n---\n![](https://img.hacpai.com/bing/20181116.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n\n## 场景描述\n\n在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。\n\n## 场景升级\n\n这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 `CUROPT_TIMEOUT`最小设置为1。也就是说，客户端至少必须等待1秒钟。这时候我们迫切需要使用毫秒级的等待，然后断开。为整个流程节省更多的时间！\n\n## 代码实现\n\n```php\n/**\n     * PHP发送异步请求 毫秒级\n     * @author Barry\n     * @date 2017-10-24\n     * @param string $url 请求地址\n     * @param array $param 请求参数\n     * @param string $httpMethod 请求方法GET或者POST\n     * @param array $header\n     * @return array\n     */\n    static public function makeAsyncRequest($url, $param, $httpMethod = 'GET', $header=[]) {\n        $oCurl = curl_init();\n        if (stripos($url, \"https://\") !== FALSE) {\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, FALSE);\n            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, FALSE);\n        }\n        if ($httpMethod == 'GET') {\n            curl_setopt($oCurl, CURLOPT_URL, $url . \"?\" . http_build_query($param));\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n        } else {\n            curl_setopt($oCurl, CURLOPT_URL, $url);\n            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($oCurl, CURLOPT_POST, 1);\n            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));\n        }\n\n        if (!empty($header)) {\n            $headers = [];\n            foreach ($header as $k=>$v){\n                $headers[] = $k.\":\".$v;\n            }\n            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);\n        }\n        curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则在CentOS环境下面设置毫秒级会报错\n        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, 30);//设置cURL允许执行的最长毫秒数\n\n        $sContent = curl_exec($oCurl);\n//        print_r($sContent);exit;\n//        $aStatus = curl_getinfo($oCurl);\n        curl_close($oCurl);\n        return json_decode($sContent, true);\n    }\n```\n\n## CentOS下设置毫秒级会报错Bug\n\n为什么在CentOS服务器下要增加这一行：\n```\ncurl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);//必须加，否则在CentOS环境下面设置毫秒级会报错\n```\n\n\n主要原因：\n\n> 在Linux系统上, 如果使用了系统标准的DNS解析, 则会使用SIGALARM来提供控制域名解析超时的功能，但是SIGALARM不支持小于1s的超时。\n\n分析与解决：可以阅读大神[风雪之隅](https://www.laruence.com/)专门这对该bug分析以及解决写的一篇文章：[Curl的毫秒超时的一个\"Bug\"](https://www.laruence.com/2014/01/21/2939.html)\n\n\n\n\n## PHP更多异步实现方法\n\n如果想了解更多的PHP实现异步调用方法可以去阅读[风雪之隅](https://www.laruence.com/)也就是大名鼎鼎的**鸟哥**写的一篇博客：[PHP实现异步调用方法研究](https://www.laruence.com/2008/04/14/318.html)\n","slug":"202007/PHP使用curl实现毫秒级等待的伪异步请求","published":1,"__permalink":"/articles/2020/07/16/1594914341041.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvk000sogfdek1g4ooy","content":"<p><img src=\"https://img.hacpai.com/bing/20181116.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。</p>\n<h2 id=\"场景升级\"><a href=\"#场景升级\" class=\"headerlink\" title=\"场景升级\"></a>场景升级</h2><p>这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 <code>CUROPT_TIMEOUT</code>最小设置为1。也就是说，客户端至少必须等待1秒钟。这时候我们迫切需要使用毫秒级的等待，然后断开。为整个流程节省更多的时间！</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * PHP发送异步请求 毫秒级</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $header</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAsyncRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class=\"number\">1</span>);<span class=\"comment\">//必须加，否则在CentOS环境下面设置毫秒级会报错</span></span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class=\"number\">30</span>);<span class=\"comment\">//设置cURL允许执行的最长毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CentOS下设置毫秒级会报错Bug\"><a href=\"#CentOS下设置毫秒级会报错Bug\" class=\"headerlink\" title=\"CentOS下设置毫秒级会报错Bug\"></a>CentOS下设置毫秒级会报错Bug</h2><p>为什么在CentOS服务器下要增加这一行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);&#x2F;&#x2F;必须加，否则在CentOS环境下面设置毫秒级会报错</span><br></pre></td></tr></table></figure>\n\n\n<p>主要原因：</p>\n<blockquote>\n<p>在Linux系统上, 如果使用了系统标准的DNS解析, 则会使用SIGALARM来提供控制域名解析超时的功能，但是SIGALARM不支持小于1s的超时。</p>\n</blockquote>\n<p>分析与解决：可以阅读大神<a href=\"https://www.laruence.com/\">风雪之隅</a>专门这对该bug分析以及解决写的一篇文章：<a href=\"https://www.laruence.com/2014/01/21/2939.html\">Curl的毫秒超时的一个”Bug”</a></p>\n<h2 id=\"PHP更多异步实现方法\"><a href=\"#PHP更多异步实现方法\" class=\"headerlink\" title=\"PHP更多异步实现方法\"></a>PHP更多异步实现方法</h2><p>如果想了解更多的PHP实现异步调用方法可以去阅读<a href=\"https://www.laruence.com/\">风雪之隅</a>也就是大名鼎鼎的<strong>鸟哥</strong>写的一篇博客：<a href=\"https://www.laruence.com/2008/04/14/318.html\">PHP实现异步调用方法研究</a></p>\n","site":{"data":{}},"excerpt":"场景描述\n在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。\n\n场景升级\n这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 CUROPT_TIMEOUT最小设置为1。也就是说，客户端至少必须等待1秒钟。这","more":"<p><img src=\"https://img.hacpai.com/bing/20181116.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>在开发中会遇到这样的场景：需要做一个处理，而这个处理需要花费一定的时间，并且这个处理的结果并不是需要及时的得到结果。那么我们就可能会想到使用异步处理，来大大缩短整个流程所需要的时间。而PHP没有很好的异步支持，那么就会想到使用CURL来请求并主动断开链接，不去等待请求结果的返回来实现伪异步。</p>\n<h2 id=\"场景升级\"><a href=\"#场景升级\" class=\"headerlink\" title=\"场景升级\"></a>场景升级</h2><p>这样处理也会出现一个问题，那么我们就不得不接受要花费一定的时间在请求上。这个时间是无法省去的，那么就只能是这个时间越短越好（其实不是越短越好，因为如果时间太短链接还没有请求到就主动断开了）。而之前版本中 <code>CUROPT_TIMEOUT</code>最小设置为1。也就是说，客户端至少必须等待1秒钟。这时候我们迫切需要使用毫秒级的等待，然后断开。为整个流程节省更多的时间！</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * PHP发送异步请求 毫秒级</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@author</span> Barry</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@date</span> 2017-10-24</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $url 请求地址</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $param 请求参数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $httpMethod 请求方法GET或者POST</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $header</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAsyncRequest</span>(<span class=\"params\">$url, $param, $httpMethod = <span class=\"string\">&#x27;GET&#x27;</span>, $header=[]</span>) </span>&#123;</span><br><span class=\"line\">        $oCurl = curl_init();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stripos($url, <span class=\"string\">&quot;https://&quot;</span>) !== <span class=\"literal\">FALSE</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($httpMethod == <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url . <span class=\"string\">&quot;?&quot;</span> . http_build_query($param));</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_URL, $url);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_POSTFIELDS, http_build_query($param));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($header)) &#123;</span><br><span class=\"line\">            $headers = [];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> ($header <span class=\"keyword\">as</span> $k=&gt;$v)&#123;</span><br><span class=\"line\">                $headers[] = $k.<span class=\"string\">&quot;:&quot;</span>.$v;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            curl_setopt($oCurl, CURLOPT_HTTPHEADER, $headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_NOSIGNAL, <span class=\"number\">1</span>);<span class=\"comment\">//必须加，否则在CentOS环境下面设置毫秒级会报错</span></span><br><span class=\"line\">        curl_setopt($oCurl, CURLOPT_TIMEOUT_MS, <span class=\"number\">30</span>);<span class=\"comment\">//设置cURL允许执行的最长毫秒数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        $sContent = curl_exec($oCurl);</span><br><span class=\"line\"><span class=\"comment\">//        print_r($sContent);exit;</span></span><br><span class=\"line\"><span class=\"comment\">//        $aStatus = curl_getinfo($oCurl);</span></span><br><span class=\"line\">        curl_close($oCurl);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json_decode($sContent, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CentOS下设置毫秒级会报错Bug\"><a href=\"#CentOS下设置毫秒级会报错Bug\" class=\"headerlink\" title=\"CentOS下设置毫秒级会报错Bug\"></a>CentOS下设置毫秒级会报错Bug</h2><p>为什么在CentOS服务器下要增加这一行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl_setopt($oCurl, CURLOPT_NOSIGNAL, 1);&#x2F;&#x2F;必须加，否则在CentOS环境下面设置毫秒级会报错</span><br></pre></td></tr></table></figure>\n\n\n<p>主要原因：</p>\n<blockquote>\n<p>在Linux系统上, 如果使用了系统标准的DNS解析, 则会使用SIGALARM来提供控制域名解析超时的功能，但是SIGALARM不支持小于1s的超时。</p>\n</blockquote>\n<p>分析与解决：可以阅读大神<a href=\"https://www.laruence.com/\">风雪之隅</a>专门这对该bug分析以及解决写的一篇文章：<a href=\"https://www.laruence.com/2014/01/21/2939.html\">Curl的毫秒超时的一个”Bug”</a></p>\n<h2 id=\"PHP更多异步实现方法\"><a href=\"#PHP更多异步实现方法\" class=\"headerlink\" title=\"PHP更多异步实现方法\"></a>PHP更多异步实现方法</h2><p>如果想了解更多的PHP实现异步调用方法可以去阅读<a href=\"https://www.laruence.com/\">风雪之隅</a>也就是大名鼎鼎的<strong>鸟哥</strong>写的一篇博客：<a href=\"https://www.laruence.com/2008/04/14/318.html\">PHP实现异步调用方法研究</a></p>\n"},{"title":"python项目依赖库的批量导出和导入","date":"2020-07-24T10:00:44.000Z","updated":"2020-07-24T10:02:19.000Z","_content":"![](https://img.hacpai.com/bing/20191030.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\npython项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。\n\n## 解决方案\n#### 批量导出\n\n执行下面命令将依赖库到`python_lib.txt`文件中\n\n```\npip freeze > python_lib.txt\n```\npython_lib.txt 中内容大致是这样：\n\n```\nmock==4.0.2\nnumpy==1.16.2\nopencv-python==4.1.1.26\nPillow==7.1.2\nprotobuf==3.11.3\nrequests==2.23.0\nscikit-learn==0.22.2.post1\nscipy==1.2.1\nShapely==1.7.0\nsix==1.14.0\nsklearn==0.0\ntensorboard==1.13.1\ntensorflow==1.13.1\ntensorflow-estimator==1.13.0\ntermcolor==1.1.0\ntornado==6.0.4\n.......\n```\n#### 批量导入\n\n将`python_lib.txt`文件拷贝到新的服务器上，执行下面命令，依赖库就一次安装上了\n\n```\npip install -r python_lib.txt\n```\n\n\n## 更多\n\n如果你有更多或者更好的解决方案，欢迎留言\n","source":"_posts/202007/python项目依赖库的批量导出和导入.md","raw":"title: python项目依赖库的批量导出和导入\ndate: '2020-07-24 18:00:44'\nupdated: '2020-07-24 18:02:19'\ntags: [python]\npermalink: /articles/2020/07/24/1595584844339.html\n---\n![](https://img.hacpai.com/bing/20191030.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\npython项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。\n\n## 解决方案\n#### 批量导出\n\n执行下面命令将依赖库到`python_lib.txt`文件中\n\n```\npip freeze > python_lib.txt\n```\npython_lib.txt 中内容大致是这样：\n\n```\nmock==4.0.2\nnumpy==1.16.2\nopencv-python==4.1.1.26\nPillow==7.1.2\nprotobuf==3.11.3\nrequests==2.23.0\nscikit-learn==0.22.2.post1\nscipy==1.2.1\nShapely==1.7.0\nsix==1.14.0\nsklearn==0.0\ntensorboard==1.13.1\ntensorflow==1.13.1\ntensorflow-estimator==1.13.0\ntermcolor==1.1.0\ntornado==6.0.4\n.......\n```\n#### 批量导入\n\n将`python_lib.txt`文件拷贝到新的服务器上，执行下面命令，依赖库就一次安装上了\n\n```\npip install -r python_lib.txt\n```\n\n\n## 更多\n\n如果你有更多或者更好的解决方案，欢迎留言\n","slug":"202007/python项目依赖库的批量导出和导入","published":1,"__permalink":"/articles/2020/07/24/1595584844339.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvl000togfdgve7acze","content":"<p><img src=\"https://img.hacpai.com/bing/20191030.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>python项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h4 id=\"批量导出\"><a href=\"#批量导出\" class=\"headerlink\" title=\"批量导出\"></a>批量导出</h4><p>执行下面命令将依赖库到<code>python_lib.txt</code>文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip freeze &gt; python_lib.txt</span><br></pre></td></tr></table></figure>\n<p>python_lib.txt 中内容大致是这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mock&#x3D;&#x3D;4.0.2</span><br><span class=\"line\">numpy&#x3D;&#x3D;1.16.2</span><br><span class=\"line\">opencv-python&#x3D;&#x3D;4.1.1.26</span><br><span class=\"line\">Pillow&#x3D;&#x3D;7.1.2</span><br><span class=\"line\">protobuf&#x3D;&#x3D;3.11.3</span><br><span class=\"line\">requests&#x3D;&#x3D;2.23.0</span><br><span class=\"line\">scikit-learn&#x3D;&#x3D;0.22.2.post1</span><br><span class=\"line\">scipy&#x3D;&#x3D;1.2.1</span><br><span class=\"line\">Shapely&#x3D;&#x3D;1.7.0</span><br><span class=\"line\">six&#x3D;&#x3D;1.14.0</span><br><span class=\"line\">sklearn&#x3D;&#x3D;0.0</span><br><span class=\"line\">tensorboard&#x3D;&#x3D;1.13.1</span><br><span class=\"line\">tensorflow&#x3D;&#x3D;1.13.1</span><br><span class=\"line\">tensorflow-estimator&#x3D;&#x3D;1.13.0</span><br><span class=\"line\">termcolor&#x3D;&#x3D;1.1.0</span><br><span class=\"line\">tornado&#x3D;&#x3D;6.0.4</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n<h4 id=\"批量导入\"><a href=\"#批量导入\" class=\"headerlink\" title=\"批量导入\"></a>批量导入</h4><p>将<code>python_lib.txt</code>文件拷贝到新的服务器上，执行下面命令，依赖库就一次安装上了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r python_lib.txt</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h2><p>如果你有更多或者更好的解决方案，欢迎留言</p>\n","site":{"data":{}},"excerpt":"场景描述\npython项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。\n\n解决方案\n批量导出\n执行下面命令将依赖库到python_lib.txt文件中\n\n1\n\n\npip freeze > python_lib.txt\n\n\npython_lib.txt 中内容大致是这样：\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nmock==4.0.2\nnumpy==1.16.2\nopencv-python==4.1.1.26\nPillow==7.1.2\npro","more":"<p><img src=\"https://img.hacpai.com/bing/20191030.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>python项目一般都会用到很多依赖环境，当我们迁移项目的时候，运行环境和运行代码都很好迁移。但是大量第三方的依赖库（自带的库就不用担心了）也需要很轻松的批量迁移。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h4 id=\"批量导出\"><a href=\"#批量导出\" class=\"headerlink\" title=\"批量导出\"></a>批量导出</h4><p>执行下面命令将依赖库到<code>python_lib.txt</code>文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip freeze &gt; python_lib.txt</span><br></pre></td></tr></table></figure>\n<p>python_lib.txt 中内容大致是这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mock&#x3D;&#x3D;4.0.2</span><br><span class=\"line\">numpy&#x3D;&#x3D;1.16.2</span><br><span class=\"line\">opencv-python&#x3D;&#x3D;4.1.1.26</span><br><span class=\"line\">Pillow&#x3D;&#x3D;7.1.2</span><br><span class=\"line\">protobuf&#x3D;&#x3D;3.11.3</span><br><span class=\"line\">requests&#x3D;&#x3D;2.23.0</span><br><span class=\"line\">scikit-learn&#x3D;&#x3D;0.22.2.post1</span><br><span class=\"line\">scipy&#x3D;&#x3D;1.2.1</span><br><span class=\"line\">Shapely&#x3D;&#x3D;1.7.0</span><br><span class=\"line\">six&#x3D;&#x3D;1.14.0</span><br><span class=\"line\">sklearn&#x3D;&#x3D;0.0</span><br><span class=\"line\">tensorboard&#x3D;&#x3D;1.13.1</span><br><span class=\"line\">tensorflow&#x3D;&#x3D;1.13.1</span><br><span class=\"line\">tensorflow-estimator&#x3D;&#x3D;1.13.0</span><br><span class=\"line\">termcolor&#x3D;&#x3D;1.1.0</span><br><span class=\"line\">tornado&#x3D;&#x3D;6.0.4</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n<h4 id=\"批量导入\"><a href=\"#批量导入\" class=\"headerlink\" title=\"批量导入\"></a>批量导入</h4><p>将<code>python_lib.txt</code>文件拷贝到新的服务器上，执行下面命令，依赖库就一次安装上了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r python_lib.txt</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h2><p>如果你有更多或者更好的解决方案，欢迎留言</p>\n"},{"title":"windows生产服务器下部署Flask","date":"2020-07-24T07:57:34.000Z","updated":"2020-07-24T08:19:17.000Z","_content":"![](https://img.hacpai.com/bing/20200530.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n很多python工程师，都会用**flask** 来开发、部署Web 应用。但也有很多工程师就直接使用 `app.run()`在生产环境上启动服务。\n\n那可能会发现 Flask 用 `app.run()`这种方式启动，有异常特别容易退出，而且性能很弱。\n\n生产环境下，python常见的web部署搭配是 `nginx`+`gunicorn`。\n\n但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：`Flask` + `Tornado`+`nginx`。\n\n## 解决方案示例\n\n#### flask服务文件 flask_app.py\n\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\n```\n\n#### 安装Tornado\n\n```sh\npip install tornado\n```\n\n#### flask_app.py目录下编写Tornado的 server.py文件\n\n```python\nfrom tornado.httpserver import HTTPServer\nfrom tornado.wsgi import WSGIContainer\nfrom flask_app import app\nfrom tornado.ioloop import IOLoop\n\ns = HTTPServer(WSGIContainer(app))\ns.listen(8080) # 监听 8080 端口\nIOLoop.current().start()\n\n```\n\n#### 启动服务\n\n当前目录下执行 `python server.py` 浏览器中访问 http://ip:8080 即可\n\n```python\npython server.py\n```\n\n#### 配置nginx反向代理\n\n配置nignx反向代理，这样在浏览器中直接访问www.test.com 即可\n\nwindows下nginx的安装和使用还是很简单的，网上教程很多，这里就不多说了\n\n```\nhttp {   \n    server {\n        listen       80;\n        server_name  www.test.com;\n        charset     utf-8;         \n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            proxy_pass  http://ip:8080;\n        }\n     \n  }\n```\n","source":"_posts/202007/windows生产服务器下部署Flask.md","raw":"title: windows生产服务器下部署Flask\ndate: '2020-07-24 15:57:34'\nupdated: '2020-07-24 16:19:17'\ntags: [python, flask]\npermalink: /articles/2020/07/24/1595577454676.html\n---\n![](https://img.hacpai.com/bing/20200530.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n\n很多python工程师，都会用**flask** 来开发、部署Web 应用。但也有很多工程师就直接使用 `app.run()`在生产环境上启动服务。\n\n那可能会发现 Flask 用 `app.run()`这种方式启动，有异常特别容易退出，而且性能很弱。\n\n生产环境下，python常见的web部署搭配是 `nginx`+`gunicorn`。\n\n但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：`Flask` + `Tornado`+`nginx`。\n\n## 解决方案示例\n\n#### flask服务文件 flask_app.py\n\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\n```\n\n#### 安装Tornado\n\n```sh\npip install tornado\n```\n\n#### flask_app.py目录下编写Tornado的 server.py文件\n\n```python\nfrom tornado.httpserver import HTTPServer\nfrom tornado.wsgi import WSGIContainer\nfrom flask_app import app\nfrom tornado.ioloop import IOLoop\n\ns = HTTPServer(WSGIContainer(app))\ns.listen(8080) # 监听 8080 端口\nIOLoop.current().start()\n\n```\n\n#### 启动服务\n\n当前目录下执行 `python server.py` 浏览器中访问 http://ip:8080 即可\n\n```python\npython server.py\n```\n\n#### 配置nginx反向代理\n\n配置nignx反向代理，这样在浏览器中直接访问www.test.com 即可\n\nwindows下nginx的安装和使用还是很简单的，网上教程很多，这里就不多说了\n\n```\nhttp {   \n    server {\n        listen       80;\n        server_name  www.test.com;\n        charset     utf-8;         \n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            proxy_pass  http://ip:8080;\n        }\n     \n  }\n```\n","slug":"202007/windows生产服务器下部署Flask","published":1,"__permalink":"/articles/2020/07/24/1595577454676.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvn000vogfde4p99eo2","content":"<p><img src=\"https://img.hacpai.com/bing/20200530.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多python工程师，都会用<strong>flask</strong> 来开发、部署Web 应用。但也有很多工程师就直接使用 <code>app.run()</code>在生产环境上启动服务。</p>\n<p>那可能会发现 Flask 用 <code>app.run()</code>这种方式启动，有异常特别容易退出，而且性能很弱。</p>\n<p>生产环境下，python常见的web部署搭配是 <code>nginx</code>+<code>gunicorn</code>。</p>\n<p>但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：<code>Flask</code> + <code>Tornado</code>+<code>nginx</code>。</p>\n<h2 id=\"解决方案示例\"><a href=\"#解决方案示例\" class=\"headerlink\" title=\"解决方案示例\"></a>解决方案示例</h2><h4 id=\"flask服务文件-flask-app-py\"><a href=\"#flask服务文件-flask-app-py\" class=\"headerlink\" title=\"flask服务文件 flask_app.py\"></a>flask服务文件 flask_app.py</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(&quot;/&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装Tornado\"><a href=\"#安装Tornado\" class=\"headerlink\" title=\"安装Tornado\"></a>安装Tornado</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install tornado</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"flask-app-py目录下编写Tornado的-server-py文件\"><a href=\"#flask-app-py目录下编写Tornado的-server-py文件\" class=\"headerlink\" title=\"flask_app.py目录下编写Tornado的 server.py文件\"></a>flask_app.py目录下编写Tornado的 server.py文件</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tornado.httpserver <span class=\"keyword\">import</span> HTTPServer</span><br><span class=\"line\"><span class=\"keyword\">from</span> tornado.wsgi <span class=\"keyword\">import</span> WSGIContainer</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_app <span class=\"keyword\">import</span> app</span><br><span class=\"line\"><span class=\"keyword\">from</span> tornado.ioloop <span class=\"keyword\">import</span> IOLoop</span><br><span class=\"line\"></span><br><span class=\"line\">s = HTTPServer(WSGIContainer(app))</span><br><span class=\"line\">s.listen(<span class=\"number\">8080</span>) <span class=\"comment\"># 监听 8080 端口</span></span><br><span class=\"line\">IOLoop.current().start()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><p>当前目录下执行 <code>python server.py</code> 浏览器中访问 <a href=\"http://ip:8080/\">http://ip:8080</a> 即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python server.py</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置nginx反向代理\"><a href=\"#配置nginx反向代理\" class=\"headerlink\" title=\"配置nginx反向代理\"></a>配置nginx反向代理</h4><p>配置nignx反向代理，这样在浏览器中直接访问<a href=\"http://www.test.com/\">www.test.com</a> 即可</p>\n<p>windows下nginx的安装和使用还是很简单的，网上教程很多，这里就不多说了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;   </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  www.test.com;</span><br><span class=\"line\">        charset     utf-8;         </span><br><span class=\"line\"></span><br><span class=\"line\">        location &#x2F; &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            proxy_pass  http:&#x2F;&#x2F;ip:8080;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"场景描述\n很多python工程师，都会用flask 来开发、部署Web 应用。但也有很多工程师就直接使用 app.run()在生产环境上启动服务。\n\n那可能会发现 Flask 用 app.run()这种方式启动，有异常特别容易退出，而且性能很弱。\n\n生产环境下，python常见的web部署搭配是 nginx+gunicorn。\n\n但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：Flask + Tornado+nginx。\n","more":"<p><img src=\"https://img.hacpai.com/bing/20200530.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>很多python工程师，都会用<strong>flask</strong> 来开发、部署Web 应用。但也有很多工程师就直接使用 <code>app.run()</code>在生产环境上启动服务。</p>\n<p>那可能会发现 Flask 用 <code>app.run()</code>这种方式启动，有异常特别容易退出，而且性能很弱。</p>\n<p>生产环境下，python常见的web部署搭配是 <code>nginx</code>+<code>gunicorn</code>。</p>\n<p>但是这种搭配只适合在Linux环境下。关于这种搭配的配置方法网上有很多。反而在windows环境下该使用什么搭配来部署，网上说的比不多。而我们的项目由于某种特殊的原因就必须搭建在windows环境下，所以使用的部署方案是：<code>Flask</code> + <code>Tornado</code>+<code>nginx</code>。</p>\n<h2 id=\"解决方案示例\"><a href=\"#解决方案示例\" class=\"headerlink\" title=\"解决方案示例\"></a>解决方案示例</h2><h4 id=\"flask服务文件-flask-app-py\"><a href=\"#flask服务文件-flask-app-py\" class=\"headerlink\" title=\"flask服务文件 flask_app.py\"></a>flask服务文件 flask_app.py</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(&quot;/&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello World!&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装Tornado\"><a href=\"#安装Tornado\" class=\"headerlink\" title=\"安装Tornado\"></a>安装Tornado</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install tornado</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"flask-app-py目录下编写Tornado的-server-py文件\"><a href=\"#flask-app-py目录下编写Tornado的-server-py文件\" class=\"headerlink\" title=\"flask_app.py目录下编写Tornado的 server.py文件\"></a>flask_app.py目录下编写Tornado的 server.py文件</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tornado.httpserver <span class=\"keyword\">import</span> HTTPServer</span><br><span class=\"line\"><span class=\"keyword\">from</span> tornado.wsgi <span class=\"keyword\">import</span> WSGIContainer</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_app <span class=\"keyword\">import</span> app</span><br><span class=\"line\"><span class=\"keyword\">from</span> tornado.ioloop <span class=\"keyword\">import</span> IOLoop</span><br><span class=\"line\"></span><br><span class=\"line\">s = HTTPServer(WSGIContainer(app))</span><br><span class=\"line\">s.listen(<span class=\"number\">8080</span>) <span class=\"comment\"># 监听 8080 端口</span></span><br><span class=\"line\">IOLoop.current().start()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><p>当前目录下执行 <code>python server.py</code> 浏览器中访问 <a href=\"http://ip:8080/\">http://ip:8080</a> 即可</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python server.py</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置nginx反向代理\"><a href=\"#配置nginx反向代理\" class=\"headerlink\" title=\"配置nginx反向代理\"></a>配置nginx反向代理</h4><p>配置nignx反向代理，这样在浏览器中直接访问<a href=\"http://www.test.com/\">www.test.com</a> 即可</p>\n<p>windows下nginx的安装和使用还是很简单的，网上教程很多，这里就不多说了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;   </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  www.test.com;</span><br><span class=\"line\">        charset     utf-8;         </span><br><span class=\"line\"></span><br><span class=\"line\">        location &#x2F; &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            proxy_pass  http:&#x2F;&#x2F;ip:8080;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Apache(wamp)下配置ssl证书","date":"2020-08-04T03:40:58.000Z","updated":"2020-08-04T03:44:35.000Z","_content":"![](https://img.hacpai.com/bing/20180603.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 环境\nWAMP + SSL\n\n**W**indow + **A**pache + **M**ySQL + **P**HP \n\n## 配置步骤\n1. 在apache安装目录下打开httpd.conf文件，找到，并打开注释：\n```\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so \nLoadModule ssl_module modules/mod_ssl.so \nInclude conf/extra/httpd-ssl.conf \nInclude conf/extra/httpd-mpm.conf     //若没有，可忽略该项操作\n```\n2. 打开 conf/extra/httpd-ssl.conf\n\n打开 apache 安装目录下 conf/extra/httpd-ssl.conf 文件 (也可能是conf.d/ssl.conf，与操作系统及安装方式有关)， 在配置文件中查找以下配置语句:\n\n```\n#添加 SSL 协议支持协议，去掉不安全的协议\nSSLProtocol all -SSLv2 -SSLv3\n\n# 修改加密套件如下 不同的证书，参数不同\nSSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM   \nSSLHonorCipherOrder on\n\n# 证书公钥配置  填写绝对路径\nSSLCertificateFile cert/public.pem\n\n# 证书私钥配置 填写绝对路径\nSSLCertificateKeyFile cert/214873197740010.key\n\n# 证书链配置，如果该属性开头有 '#'字符，请删除掉\nSSLCertificateChainFile cert/chain.pem\n\n```\n\n3. 配置完成后重启apache可能会无法重启。进行一下操作可捕捉错误信息\n退出wamp,打开cmd\ncd C:\\wamp\\bin\\apache\\apache2.4.9\\bin     //apache 的安装目录\nhttpd.exe -k install \nhttpd.exe -k start \n检查是否报错   \n如果有报错，根据错误提示调整\n如果没有报错 则运行 \nhttpd.exe -k stop\n\n4. 启动wamp\n\n---\n\n## httpd-ssl.conf 完整配置精简demo\n\n```\n<VirtualHost *:443>\n    DocumentRoot \"D:\\project\\app-test\"\n    ServerName www.test.com:443\n    ServerAlias www.test.com\n    ServerAdmin admin@example.com\n    <Directory \"D:\\project\\app-test\">\n        #DirectoryIndex index-dev.php\n        Options +Indexes +Includes +FollowSymLinks +MultiViews\n        AllowOverride All\n        Require local\n        Require all granted\n    </Directory>\n    ErrorLog \"C:/wamp64/bin/apache/apache2.4.27/logs/errors.log\"\n    TransferLog \"C:/wamp64/bin/apache/apache2.4.27/logs/access.log\"\n\n    SSLEngine on\n    SSLCertificateFile \"C:/wamp64/bin/apache/apache2.4.27/cert/public.pem\"\n    SSLCertificateKeyFile \"C:/wamp64/bin/apache/apache2.4.27/cert/214873197740010.key\"\n    SSLCertificateChainFile \"C:/wamp64/bin/apache/apache2.4.27/cert/chain.pem\"\n    <FilesMatch \"\\.(cgi|shtml|phtml|php)$\">\n        SSLOptions +StdEnvVars\n    </FilesMatch>\n    <Directory \"C:/wamp64/bin/apache/apache2.4.27/cgi-bin\">\n        SSLOptions +StdEnvVars\n    </Directory>\n    BrowserMatch \"MSIE [2-5]\" \\\n             nokeepalive ssl-unclean-shutdown \\\n             downgrade-1.0 force-response-1.0\n    CustomLog \"C:/wamp64/bin/apache/apache2.4.27/logs/ssl_request.log\" \\\n              \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n```\n\n\n","source":"_posts/202008/Apachewamp下配置ssl证书.md","raw":"title: Apache(wamp)下配置ssl证书\ndate: '2020-08-04 11:40:58'\nupdated: '2020-08-04 11:44:35'\ntags: [wamp, ssl]\npermalink: /articles/2020/08/04/1596512458890.html\n---\n![](https://img.hacpai.com/bing/20180603.jpg?imageView2/1/w/960/h/540/interlace/1/q/100) \n\n## 环境\nWAMP + SSL\n\n**W**indow + **A**pache + **M**ySQL + **P**HP \n\n## 配置步骤\n1. 在apache安装目录下打开httpd.conf文件，找到，并打开注释：\n```\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so \nLoadModule ssl_module modules/mod_ssl.so \nInclude conf/extra/httpd-ssl.conf \nInclude conf/extra/httpd-mpm.conf     //若没有，可忽略该项操作\n```\n2. 打开 conf/extra/httpd-ssl.conf\n\n打开 apache 安装目录下 conf/extra/httpd-ssl.conf 文件 (也可能是conf.d/ssl.conf，与操作系统及安装方式有关)， 在配置文件中查找以下配置语句:\n\n```\n#添加 SSL 协议支持协议，去掉不安全的协议\nSSLProtocol all -SSLv2 -SSLv3\n\n# 修改加密套件如下 不同的证书，参数不同\nSSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM   \nSSLHonorCipherOrder on\n\n# 证书公钥配置  填写绝对路径\nSSLCertificateFile cert/public.pem\n\n# 证书私钥配置 填写绝对路径\nSSLCertificateKeyFile cert/214873197740010.key\n\n# 证书链配置，如果该属性开头有 '#'字符，请删除掉\nSSLCertificateChainFile cert/chain.pem\n\n```\n\n3. 配置完成后重启apache可能会无法重启。进行一下操作可捕捉错误信息\n退出wamp,打开cmd\ncd C:\\wamp\\bin\\apache\\apache2.4.9\\bin     //apache 的安装目录\nhttpd.exe -k install \nhttpd.exe -k start \n检查是否报错   \n如果有报错，根据错误提示调整\n如果没有报错 则运行 \nhttpd.exe -k stop\n\n4. 启动wamp\n\n---\n\n## httpd-ssl.conf 完整配置精简demo\n\n```\n<VirtualHost *:443>\n    DocumentRoot \"D:\\project\\app-test\"\n    ServerName www.test.com:443\n    ServerAlias www.test.com\n    ServerAdmin admin@example.com\n    <Directory \"D:\\project\\app-test\">\n        #DirectoryIndex index-dev.php\n        Options +Indexes +Includes +FollowSymLinks +MultiViews\n        AllowOverride All\n        Require local\n        Require all granted\n    </Directory>\n    ErrorLog \"C:/wamp64/bin/apache/apache2.4.27/logs/errors.log\"\n    TransferLog \"C:/wamp64/bin/apache/apache2.4.27/logs/access.log\"\n\n    SSLEngine on\n    SSLCertificateFile \"C:/wamp64/bin/apache/apache2.4.27/cert/public.pem\"\n    SSLCertificateKeyFile \"C:/wamp64/bin/apache/apache2.4.27/cert/214873197740010.key\"\n    SSLCertificateChainFile \"C:/wamp64/bin/apache/apache2.4.27/cert/chain.pem\"\n    <FilesMatch \"\\.(cgi|shtml|phtml|php)$\">\n        SSLOptions +StdEnvVars\n    </FilesMatch>\n    <Directory \"C:/wamp64/bin/apache/apache2.4.27/cgi-bin\">\n        SSLOptions +StdEnvVars\n    </Directory>\n    BrowserMatch \"MSIE [2-5]\" \\\n             nokeepalive ssl-unclean-shutdown \\\n             downgrade-1.0 force-response-1.0\n    CustomLog \"C:/wamp64/bin/apache/apache2.4.27/logs/ssl_request.log\" \\\n              \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n```\n\n\n","slug":"202008/Apachewamp下配置ssl证书","published":1,"__permalink":"/articles/2020/08/04/1596512458890.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvn000xogfdg65n0w47","content":"<p><img src=\"https://img.hacpai.com/bing/20180603.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>WAMP + SSL</p>\n<p><strong>W</strong>indow + <strong>A</strong>pache + <strong>M</strong>ySQL + <strong>P</strong>HP </p>\n<h2 id=\"配置步骤\"><a href=\"#配置步骤\" class=\"headerlink\" title=\"配置步骤\"></a>配置步骤</h2><ol>\n<li>在apache安装目录下打开httpd.conf文件，找到，并打开注释：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule socache_shmcb_module modules&#x2F;mod_socache_shmcb.so </span><br><span class=\"line\">LoadModule ssl_module modules&#x2F;mod_ssl.so </span><br><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-ssl.conf </span><br><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-mpm.conf     &#x2F;&#x2F;若没有，可忽略该项操作</span><br></pre></td></tr></table></figure></li>\n<li>打开 conf/extra/httpd-ssl.conf</li>\n</ol>\n<p>打开 apache 安装目录下 conf/extra/httpd-ssl.conf 文件 (也可能是conf.d/ssl.conf，与操作系统及安装方式有关)， 在配置文件中查找以下配置语句:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#添加 SSL 协议支持协议，去掉不安全的协议</span><br><span class=\"line\">SSLProtocol all -SSLv2 -SSLv3</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改加密套件如下 不同的证书，参数不同</span><br><span class=\"line\">SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM   </span><br><span class=\"line\">SSLHonorCipherOrder on</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书公钥配置  填写绝对路径</span><br><span class=\"line\">SSLCertificateFile cert&#x2F;public.pem</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书私钥配置 填写绝对路径</span><br><span class=\"line\">SSLCertificateKeyFile cert&#x2F;214873197740010.key</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书链配置，如果该属性开头有 &#39;#&#39;字符，请删除掉</span><br><span class=\"line\">SSLCertificateChainFile cert&#x2F;chain.pem</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>配置完成后重启apache可能会无法重启。进行一下操作可捕捉错误信息<br>退出wamp,打开cmd<br>cd C:\\wamp\\bin\\apache\\apache2.4.9\\bin     //apache 的安装目录<br>httpd.exe -k install<br>httpd.exe -k start<br>检查是否报错<br>如果有报错，根据错误提示调整<br>如果没有报错 则运行<br>httpd.exe -k stop</p>\n</li>\n<li><p>启动wamp</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"httpd-ssl-conf-完整配置精简demo\"><a href=\"#httpd-ssl-conf-完整配置精简demo\" class=\"headerlink\" title=\"httpd-ssl.conf 完整配置精简demo\"></a>httpd-ssl.conf 完整配置精简demo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:443&gt;</span><br><span class=\"line\">    DocumentRoot &quot;D:\\project\\app-test&quot;</span><br><span class=\"line\">    ServerName www.test.com:443</span><br><span class=\"line\">    ServerAlias www.test.com</span><br><span class=\"line\">    ServerAdmin admin@example.com</span><br><span class=\"line\">    &lt;Directory &quot;D:\\project\\app-test&quot;&gt;</span><br><span class=\"line\">        #DirectoryIndex index-dev.php</span><br><span class=\"line\">        Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class=\"line\">        AllowOverride All</span><br><span class=\"line\">        Require local</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">    &lt;&#x2F;Directory&gt;</span><br><span class=\"line\">    ErrorLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;errors.log&quot;</span><br><span class=\"line\">    TransferLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;access.log&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    SSLEngine on</span><br><span class=\"line\">    SSLCertificateFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;public.pem&quot;</span><br><span class=\"line\">    SSLCertificateKeyFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;214873197740010.key&quot;</span><br><span class=\"line\">    SSLCertificateChainFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;chain.pem&quot;</span><br><span class=\"line\">    &lt;FilesMatch &quot;\\.(cgi|shtml|phtml|php)$&quot;&gt;</span><br><span class=\"line\">        SSLOptions +StdEnvVars</span><br><span class=\"line\">    &lt;&#x2F;FilesMatch&gt;</span><br><span class=\"line\">    &lt;Directory &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cgi-bin&quot;&gt;</span><br><span class=\"line\">        SSLOptions +StdEnvVars</span><br><span class=\"line\">    &lt;&#x2F;Directory&gt;</span><br><span class=\"line\">    BrowserMatch &quot;MSIE [2-5]&quot; \\</span><br><span class=\"line\">             nokeepalive ssl-unclean-shutdown \\</span><br><span class=\"line\">             downgrade-1.0 force-response-1.0</span><br><span class=\"line\">    CustomLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;ssl_request.log&quot; \\</span><br><span class=\"line\">              &quot;%t %h %&#123;SSL_PROTOCOL&#125;x %&#123;SSL_CIPHER&#125;x \\&quot;%r\\&quot; %b&quot;</span><br><span class=\"line\">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"环境\nWAMP + SSL\n\nWindow + Apache + MySQL + PHP \n\n配置步骤\n 1. 在apache安装目录下打开httpd.conf文件，找到，并打开注释：1\n    2\n    3\n    4\n    \n    \n    LoadModule socache_shmcb_module modules/mod_socache_shmcb.so \n    LoadModule ssl_module modules/mod_ssl.so \n    Include conf/extra/httpd-ssl.conf \n    Include conf/extra/http","more":"<p><img src=\"https://img.hacpai.com/bing/20180603.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"> </p>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>WAMP + SSL</p>\n<p><strong>W</strong>indow + <strong>A</strong>pache + <strong>M</strong>ySQL + <strong>P</strong>HP </p>\n<h2 id=\"配置步骤\"><a href=\"#配置步骤\" class=\"headerlink\" title=\"配置步骤\"></a>配置步骤</h2><ol>\n<li>在apache安装目录下打开httpd.conf文件，找到，并打开注释：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule socache_shmcb_module modules&#x2F;mod_socache_shmcb.so </span><br><span class=\"line\">LoadModule ssl_module modules&#x2F;mod_ssl.so </span><br><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-ssl.conf </span><br><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-mpm.conf     &#x2F;&#x2F;若没有，可忽略该项操作</span><br></pre></td></tr></table></figure></li>\n<li>打开 conf/extra/httpd-ssl.conf</li>\n</ol>\n<p>打开 apache 安装目录下 conf/extra/httpd-ssl.conf 文件 (也可能是conf.d/ssl.conf，与操作系统及安装方式有关)， 在配置文件中查找以下配置语句:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#添加 SSL 协议支持协议，去掉不安全的协议</span><br><span class=\"line\">SSLProtocol all -SSLv2 -SSLv3</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改加密套件如下 不同的证书，参数不同</span><br><span class=\"line\">SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM   </span><br><span class=\"line\">SSLHonorCipherOrder on</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书公钥配置  填写绝对路径</span><br><span class=\"line\">SSLCertificateFile cert&#x2F;public.pem</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书私钥配置 填写绝对路径</span><br><span class=\"line\">SSLCertificateKeyFile cert&#x2F;214873197740010.key</span><br><span class=\"line\"></span><br><span class=\"line\"># 证书链配置，如果该属性开头有 &#39;#&#39;字符，请删除掉</span><br><span class=\"line\">SSLCertificateChainFile cert&#x2F;chain.pem</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>配置完成后重启apache可能会无法重启。进行一下操作可捕捉错误信息<br>退出wamp,打开cmd<br>cd C:\\wamp\\bin\\apache\\apache2.4.9\\bin     //apache 的安装目录<br>httpd.exe -k install<br>httpd.exe -k start<br>检查是否报错<br>如果有报错，根据错误提示调整<br>如果没有报错 则运行<br>httpd.exe -k stop</p>\n</li>\n<li><p>启动wamp</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"httpd-ssl-conf-完整配置精简demo\"><a href=\"#httpd-ssl-conf-完整配置精简demo\" class=\"headerlink\" title=\"httpd-ssl.conf 完整配置精简demo\"></a>httpd-ssl.conf 完整配置精简demo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:443&gt;</span><br><span class=\"line\">    DocumentRoot &quot;D:\\project\\app-test&quot;</span><br><span class=\"line\">    ServerName www.test.com:443</span><br><span class=\"line\">    ServerAlias www.test.com</span><br><span class=\"line\">    ServerAdmin admin@example.com</span><br><span class=\"line\">    &lt;Directory &quot;D:\\project\\app-test&quot;&gt;</span><br><span class=\"line\">        #DirectoryIndex index-dev.php</span><br><span class=\"line\">        Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class=\"line\">        AllowOverride All</span><br><span class=\"line\">        Require local</span><br><span class=\"line\">        Require all granted</span><br><span class=\"line\">    &lt;&#x2F;Directory&gt;</span><br><span class=\"line\">    ErrorLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;errors.log&quot;</span><br><span class=\"line\">    TransferLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;access.log&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    SSLEngine on</span><br><span class=\"line\">    SSLCertificateFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;public.pem&quot;</span><br><span class=\"line\">    SSLCertificateKeyFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;214873197740010.key&quot;</span><br><span class=\"line\">    SSLCertificateChainFile &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cert&#x2F;chain.pem&quot;</span><br><span class=\"line\">    &lt;FilesMatch &quot;\\.(cgi|shtml|phtml|php)$&quot;&gt;</span><br><span class=\"line\">        SSLOptions +StdEnvVars</span><br><span class=\"line\">    &lt;&#x2F;FilesMatch&gt;</span><br><span class=\"line\">    &lt;Directory &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;cgi-bin&quot;&gt;</span><br><span class=\"line\">        SSLOptions +StdEnvVars</span><br><span class=\"line\">    &lt;&#x2F;Directory&gt;</span><br><span class=\"line\">    BrowserMatch &quot;MSIE [2-5]&quot; \\</span><br><span class=\"line\">             nokeepalive ssl-unclean-shutdown \\</span><br><span class=\"line\">             downgrade-1.0 force-response-1.0</span><br><span class=\"line\">    CustomLog &quot;C:&#x2F;wamp64&#x2F;bin&#x2F;apache&#x2F;apache2.4.27&#x2F;logs&#x2F;ssl_request.log&quot; \\</span><br><span class=\"line\">              &quot;%t %h %&#123;SSL_PROTOCOL&#125;x %&#123;SSL_CIPHER&#125;x \\&quot;%r\\&quot; %b&quot;</span><br><span class=\"line\">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"Apache报错 Parent: child process 2744 exited with status 3221226356 -- Restarting","date":"2020-08-04T02:49:26.000Z","updated":"2020-08-04T02:49:26.000Z","_content":"![](https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 问题描述\nWindows系统+apache+mysql+php环境下，访问量大的时候在`apache_error.log` 中出现报错：\n```\nParent: child process 2744 exited with status 3221226356 -- Restarting.\n```\n\n## 问题分析\n这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。\n\n所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）\n\n## 解决方案\n`ThreadStackSize`的设置是在httpd-mpm.conf文件中。但是默认情况下`apache`是没有使用`mpm`模块的。所以要现修改`httpd.conf`文件中的配置。\n\n1. 打开`httpd.conf`中的注释：\n```\nInclude conf/extra/httpd-mpm.conf\n```\n2. 找到`ThreadStackSize`修改其大小：\n```\n<IfModule mpm_netware_module>\n    ThreadStackSize      16777216\n    StartThreads           250\n    MinSpareThreads         25\n    MaxSpareThreads        250\n    MaxThreads            1000\n    MaxConnectionsPerChild   0\n</IfModule>\n```\n3. 重启wamp服务。\n\n\n\n","source":"_posts/202008/Apache报错Parentchildprocess2744exitedwithstatus3221226356Restarting.md","raw":"title: 'Apache报错 Parent: child process 2744 exited with status 3221226356 -- Restarting'\ndate: '2020-08-04 10:49:26'\nupdated: '2020-08-04 10:49:26'\ntags: [wamp, PHP]\npermalink: /articles/2020/08/04/1596509366225.html\n---\n![](https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 问题描述\nWindows系统+apache+mysql+php环境下，访问量大的时候在`apache_error.log` 中出现报错：\n```\nParent: child process 2744 exited with status 3221226356 -- Restarting.\n```\n\n## 问题分析\n这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。\n\n所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）\n\n## 解决方案\n`ThreadStackSize`的设置是在httpd-mpm.conf文件中。但是默认情况下`apache`是没有使用`mpm`模块的。所以要现修改`httpd.conf`文件中的配置。\n\n1. 打开`httpd.conf`中的注释：\n```\nInclude conf/extra/httpd-mpm.conf\n```\n2. 找到`ThreadStackSize`修改其大小：\n```\n<IfModule mpm_netware_module>\n    ThreadStackSize      16777216\n    StartThreads           250\n    MinSpareThreads         25\n    MaxSpareThreads        250\n    MaxThreads            1000\n    MaxConnectionsPerChild   0\n</IfModule>\n```\n3. 重启wamp服务。\n\n\n\n","slug":"202008/Apache报错Parentchildprocess2744exitedwithstatus3221226356Restarting","published":1,"__permalink":"/articles/2020/08/04/1596509366225.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvp0010ogfdcs5167my","content":"<p><img src=\"https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Windows系统+apache+mysql+php环境下，访问量大的时候在<code>apache_error.log</code> 中出现报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parent: child process 2744 exited with status 3221226356 -- Restarting.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p>这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。</p>\n<p>所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p><code>ThreadStackSize</code>的设置是在httpd-mpm.conf文件中。但是默认情况下<code>apache</code>是没有使用<code>mpm</code>模块的。所以要现修改<code>httpd.conf</code>文件中的配置。</p>\n<ol>\n<li>打开<code>httpd.conf</code>中的注释：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-mpm.conf</span><br></pre></td></tr></table></figure></li>\n<li>找到<code>ThreadStackSize</code>修改其大小：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule mpm_netware_module&gt;</span><br><span class=\"line\">    ThreadStackSize      16777216</span><br><span class=\"line\">    StartThreads           250</span><br><span class=\"line\">    MinSpareThreads         25</span><br><span class=\"line\">    MaxSpareThreads        250</span><br><span class=\"line\">    MaxThreads            1000</span><br><span class=\"line\">    MaxConnectionsPerChild   0</span><br><span class=\"line\">&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure></li>\n<li>重启wamp服务。</li>\n</ol>\n","site":{"data":{}},"excerpt":"问题描述\nWindows系统+apache+mysql+php环境下，访问量大的时候在apache_error.log 中出现报错：\n\n1\n\n\nParent: child process 2744 exited with status 3221226356 -- Restarting.\n\n\n问题分析\n这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。\n\n所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）\n\n解决方案\nThreadStackSize的设置是在http","more":"<p><img src=\"https://img.hacpai.com/bing/20190711.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Windows系统+apache+mysql+php环境下，访问量大的时候在<code>apache_error.log</code> 中出现报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parent: child process 2744 exited with status 3221226356 -- Restarting.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p>这是由于apache的默认堆栈值较小，所以Windows中经常会出现此问题。 当使用分配了大量堆栈的php代码时，就会发生这种情况。</p>\n<p>所以要修改堆栈大小（ThreadStackSize）。 建议将其设置为16 Mb（16777216）</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p><code>ThreadStackSize</code>的设置是在httpd-mpm.conf文件中。但是默认情况下<code>apache</code>是没有使用<code>mpm</code>模块的。所以要现修改<code>httpd.conf</code>文件中的配置。</p>\n<ol>\n<li>打开<code>httpd.conf</code>中的注释：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Include conf&#x2F;extra&#x2F;httpd-mpm.conf</span><br></pre></td></tr></table></figure></li>\n<li>找到<code>ThreadStackSize</code>修改其大小：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule mpm_netware_module&gt;</span><br><span class=\"line\">    ThreadStackSize      16777216</span><br><span class=\"line\">    StartThreads           250</span><br><span class=\"line\">    MinSpareThreads         25</span><br><span class=\"line\">    MaxSpareThreads        250</span><br><span class=\"line\">    MaxThreads            1000</span><br><span class=\"line\">    MaxConnectionsPerChild   0</span><br><span class=\"line\">&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure></li>\n<li>重启wamp服务。</li>\n</ol>\n"},{"title":"PHP下使用rabbitMQ报错Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()的问题查找与解决","date":"2020-08-03T08:15:18.000Z","updated":"2020-08-03T08:16:59.000Z","top":"ture","_content":"![](https://img.hacpai.com/bing/20180626.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：\n```json\n{\n    \"code\": 3000,\n    \"message\": \"Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()\",\n    \"data\": {\n        \"file\": \"D:\\\\project\\\\***\\\\vendor\\\\php-amqplib\\\\php-amqplib\\\\PhpAmqpLib\\\\Wire\\\\IO\\\\StreamIO.php\",\n        \"line\": 89\n    }\n}\n```\n\n## 查找问题\n根据提示我在对应的文件和行数下找到代码：\n![image.png](https://b3logfile.com/file/2020/08/image-9083abe9.png)\n\n我在本地环境下找到`socket_strerror()`所在的文件：\n```\n\\***\\plugins\\php\\lib\\php.jar!\\stubs\\sockets\\sockets.php\n```\n\n这是PHP的一个扩展，既然是`Call to undefined function`那很可能就是`sockets`相关的扩展没有安装或者打开。\n\n经过查看`php.ini`文件，发现果然是扩展没有打开\n![image.png](https://b3logfile.com/file/2020/08/image-3f0d6c1f.png)\n\n## 解决问题\n1. 去掉`;extension=php_sockets.dll`前面的`;`，重启服务`PHP`,`apache`服务。\n\n2. 查看`phpinfo()`:\n![image.png](https://b3logfile.com/file/2020/08/image-f62cebbb.png)\n可以看到`sockets`扩展已可用。报错消失，项目可正常使用。\n\n\n","source":"_posts/202008/PHP下使用rabbitMQ报错CalltoundefinedfunctionPhpAmqpLibWireIOsocketstrerror的问题查找与解决.md","raw":"title: PHP下使用rabbitMQ报错Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()的问题查找与解决\ndate: '2020-08-03 16:15:18'\nupdated: '2020-08-03 16:16:59'\ntags: [PHP, RabbitMQ]\npermalink: /articles/2020/08/03/1596442518677.html\ntop: ture\n---\n![](https://img.hacpai.com/bing/20180626.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 场景描述\n今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：\n```json\n{\n    \"code\": 3000,\n    \"message\": \"Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()\",\n    \"data\": {\n        \"file\": \"D:\\\\project\\\\***\\\\vendor\\\\php-amqplib\\\\php-amqplib\\\\PhpAmqpLib\\\\Wire\\\\IO\\\\StreamIO.php\",\n        \"line\": 89\n    }\n}\n```\n\n## 查找问题\n根据提示我在对应的文件和行数下找到代码：\n![image.png](https://b3logfile.com/file/2020/08/image-9083abe9.png)\n\n我在本地环境下找到`socket_strerror()`所在的文件：\n```\n\\***\\plugins\\php\\lib\\php.jar!\\stubs\\sockets\\sockets.php\n```\n\n这是PHP的一个扩展，既然是`Call to undefined function`那很可能就是`sockets`相关的扩展没有安装或者打开。\n\n经过查看`php.ini`文件，发现果然是扩展没有打开\n![image.png](https://b3logfile.com/file/2020/08/image-3f0d6c1f.png)\n\n## 解决问题\n1. 去掉`;extension=php_sockets.dll`前面的`;`，重启服务`PHP`,`apache`服务。\n\n2. 查看`phpinfo()`:\n![image.png](https://b3logfile.com/file/2020/08/image-f62cebbb.png)\n可以看到`sockets`扩展已可用。报错消失，项目可正常使用。\n\n\n","slug":"202008/PHP下使用rabbitMQ报错CalltoundefinedfunctionPhpAmqpLibWireIOsocketstrerror的问题查找与解决","published":1,"__permalink":"/articles/2020/08/03/1596442518677.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvp0011ogfdcsjm9e5d","content":"<p><img src=\"https://img.hacpai.com/bing/20180626.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">3000</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;file&quot;</span>: <span class=\"string\">&quot;D:\\\\project\\\\***\\\\vendor\\\\php-amqplib\\\\php-amqplib\\\\PhpAmqpLib\\\\Wire\\\\IO\\\\StreamIO.php&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;line&quot;</span>: <span class=\"number\">89</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查找问题\"><a href=\"#查找问题\" class=\"headerlink\" title=\"查找问题\"></a>查找问题</h2><p>根据提示我在对应的文件和行数下找到代码：<br><img src=\"https://b3logfile.com/file/2020/08/image-9083abe9.png\" alt=\"image.png\"></p>\n<p>我在本地环境下找到<code>socket_strerror()</code>所在的文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\***\\plugins\\php\\lib\\php.jar!\\stubs\\sockets\\sockets.php</span><br></pre></td></tr></table></figure>\n\n<p>这是PHP的一个扩展，既然是<code>Call to undefined function</code>那很可能就是<code>sockets</code>相关的扩展没有安装或者打开。</p>\n<p>经过查看<code>php.ini</code>文件，发现果然是扩展没有打开<br><img src=\"https://b3logfile.com/file/2020/08/image-3f0d6c1f.png\" alt=\"image.png\"></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><ol>\n<li><p>去掉<code>;extension=php_sockets.dll</code>前面的<code>;</code>，重启服务<code>PHP</code>,<code>apache</code>服务。</p>\n</li>\n<li><p>查看<code>phpinfo()</code>:<br><img src=\"https://b3logfile.com/file/2020/08/image-f62cebbb.png\" alt=\"image.png\"><br>可以看到<code>sockets</code>扩展已可用。报错消失，项目可正常使用。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"场景描述\n今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n{\n    \"code\": 3000,\n    \"message\": \"Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()\",\n    \"data\": {\n        \"file\": \"D:\\\\project\\\\***\\\\vendor\\\\php-amqplib\\\\php-amqplib\\\\PhpAmqpLib\\\\Wire\\\\IO\\\\StreamIO.php\",\n ","more":"<p><img src=\"https://img.hacpai.com/bing/20180626.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"场景描述\"><a href=\"#场景描述\" class=\"headerlink\" title=\"场景描述\"></a>场景描述</h2><p>今天在一个新的环境下，部署一个项目，其中有用到rabbitMQ。但在执行过程中发现报错。错误信息：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;code&quot;</span>: <span class=\"number\">3000</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span>: <span class=\"string\">&quot;Call to undefined function PhpAmqpLib\\\\Wire\\\\IO\\\\socket_strerror()&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;data&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;file&quot;</span>: <span class=\"string\">&quot;D:\\\\project\\\\***\\\\vendor\\\\php-amqplib\\\\php-amqplib\\\\PhpAmqpLib\\\\Wire\\\\IO\\\\StreamIO.php&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;line&quot;</span>: <span class=\"number\">89</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查找问题\"><a href=\"#查找问题\" class=\"headerlink\" title=\"查找问题\"></a>查找问题</h2><p>根据提示我在对应的文件和行数下找到代码：<br><img src=\"https://b3logfile.com/file/2020/08/image-9083abe9.png\" alt=\"image.png\"></p>\n<p>我在本地环境下找到<code>socket_strerror()</code>所在的文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\***\\plugins\\php\\lib\\php.jar!\\stubs\\sockets\\sockets.php</span><br></pre></td></tr></table></figure>\n\n<p>这是PHP的一个扩展，既然是<code>Call to undefined function</code>那很可能就是<code>sockets</code>相关的扩展没有安装或者打开。</p>\n<p>经过查看<code>php.ini</code>文件，发现果然是扩展没有打开<br><img src=\"https://b3logfile.com/file/2020/08/image-3f0d6c1f.png\" alt=\"image.png\"></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><ol>\n<li><p>去掉<code>;extension=php_sockets.dll</code>前面的<code>;</code>，重启服务<code>PHP</code>,<code>apache</code>服务。</p>\n</li>\n<li><p>查看<code>phpinfo()</code>:<br><img src=\"https://b3logfile.com/file/2020/08/image-f62cebbb.png\" alt=\"image.png\"><br>可以看到<code>sockets</code>扩展已可用。报错消失，项目可正常使用。</p>\n</li>\n</ol>\n"},{"title":"系统更新导致：PHP报错 'libonig.so.2: cannot open shared object file... '问题解决","date":"2020-08-27T09:56:07.000Z","updated":"2020-10-09T03:26:53.000Z","_content":"![](https://img.hacpai.com/bing/20200304.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 问题描述\n\n今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。\n\n> 报错信息：\n\n```\n/usr/local/php/bin/php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory\n```\n\n我回想了一下肯定是昨天执行了`yum -y update` 这个命令更新了系统，导致一些旧的库被删除了。\n\n## 问题分析\n\n错误提示`libonig.so.2`找不到了。去到`/usr/lib64`目录下发现确实没有这个库。\n那么就要想办法把这个库装上去应该就没问题了\n\n## 解决方案\n\n1. 执行命令：\n\n```\nyum install oniguruma - y\nyum install libsodium -y\n```\n\n2. 然后执行 php -v ：\n\n```\nphp -v\n```\n\n发现还是报原来的错误。再次进入`/usr/lib64`目录下发现目录下没有`libonig.so.2`，但是有`libonig.so`，那么是不是把`libonig.so`软链到`libonig.so.2`就可以了。\n\n3. 于是执行：\n\n```\nln -s /usr/lib64/libonig.so /usr/lib64/libonig.so.2\n```\n\n4. 再次运行`php -v`：\n\n```\n[root@****~]# php -v \nPHP 7.4.4 (cli) (built: Apr 14 2020 10:27:44) ( NTS )\nCopyright (c) The PHP Group\nZend Engine v3.4.0, Copyright (c) Zend Technologies\n```\n\n5.发现php正常运行， 问题得到解决，所以千万不要轻易执行`yum -y update`\n\n","source":"_posts/202008/系统更新导致PHP报错libonig.so.2cannotopensharedobjectfile...问题解决.md","raw":"title: '系统更新导致：PHP报错 ''libonig.so.2: cannot open shared object file... ''问题解决'\ndate: '2020-08-27 17:56:07'\nupdated: '2020-10-09 11:26:53'\ntags: [linux, PHP]\npermalink: /articles/2020/08/27/1598522167215.html\n---\n![](https://img.hacpai.com/bing/20200304.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 问题描述\n\n今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。\n\n> 报错信息：\n\n```\n/usr/local/php/bin/php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory\n```\n\n我回想了一下肯定是昨天执行了`yum -y update` 这个命令更新了系统，导致一些旧的库被删除了。\n\n## 问题分析\n\n错误提示`libonig.so.2`找不到了。去到`/usr/lib64`目录下发现确实没有这个库。\n那么就要想办法把这个库装上去应该就没问题了\n\n## 解决方案\n\n1. 执行命令：\n\n```\nyum install oniguruma - y\nyum install libsodium -y\n```\n\n2. 然后执行 php -v ：\n\n```\nphp -v\n```\n\n发现还是报原来的错误。再次进入`/usr/lib64`目录下发现目录下没有`libonig.so.2`，但是有`libonig.so`，那么是不是把`libonig.so`软链到`libonig.so.2`就可以了。\n\n3. 于是执行：\n\n```\nln -s /usr/lib64/libonig.so /usr/lib64/libonig.so.2\n```\n\n4. 再次运行`php -v`：\n\n```\n[root@****~]# php -v \nPHP 7.4.4 (cli) (built: Apr 14 2020 10:27:44) ( NTS )\nCopyright (c) The PHP Group\nZend Engine v3.4.0, Copyright (c) Zend Technologies\n```\n\n5.发现php正常运行， 问题得到解决，所以千万不要轻易执行`yum -y update`\n\n","slug":"202008/系统更新导致PHP报错libonig.so.2cannotopensharedobjectfile...问题解决","published":1,"__permalink":"/articles/2020/08/27/1598522167215.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvr0013ogfd9dk749iw","content":"<p><img src=\"https://img.hacpai.com/bing/20200304.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。</p>\n<blockquote>\n<p>报错信息：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>我回想了一下肯定是昨天执行了<code>yum -y update</code> 这个命令更新了系统，导致一些旧的库被删除了。</p>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p>错误提示<code>libonig.so.2</code>找不到了。去到<code>/usr/lib64</code>目录下发现确实没有这个库。<br>那么就要想办法把这个库装上去应该就没问题了</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ol>\n<li>执行命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install oniguruma - y</span><br><span class=\"line\">yum install libsodium -y</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>然后执行 php -v ：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>发现还是报原来的错误。再次进入<code>/usr/lib64</code>目录下发现目录下没有<code>libonig.so.2</code>，但是有<code>libonig.so</code>，那么是不是把<code>libonig.so</code>软链到<code>libonig.so.2</code>就可以了。</p>\n<ol start=\"3\">\n<li>于是执行：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s &#x2F;usr&#x2F;lib64&#x2F;libonig.so &#x2F;usr&#x2F;lib64&#x2F;libonig.so.2</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>再次运行<code>php -v</code>：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@****~]# php -v </span><br><span class=\"line\">PHP 7.4.4 (cli) (built: Apr 14 2020 10:27:44) ( NTS )</span><br><span class=\"line\">Copyright (c) The PHP Group</span><br><span class=\"line\">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure>\n\n<p>5.发现php正常运行， 问题得到解决，所以千万不要轻易执行<code>yum -y update</code></p>\n","site":{"data":{}},"excerpt":"问题描述\n今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。\n\n报错信息：\n\n1\n\n\n/usr/local/php/bin/php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory\n\n\n我回想了一下肯定是昨天执行了yum -y update 这个命令更新了系统，导致一些旧的库被删除了。\n\n问题分析\n错误提示libonig.so.2找不到了。去到/usr/lib64目录下发","more":"<p><img src=\"https://img.hacpai.com/bing/20200304.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>今天没事查看了一下自己服务器运行的php定时推送任务的日志，发现今天的运行报错了。而之前的运行都成功了。</p>\n<blockquote>\n<p>报错信息：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin&#x2F;php: error while loading shared libraries: libonig.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>我回想了一下肯定是昨天执行了<code>yum -y update</code> 这个命令更新了系统，导致一些旧的库被删除了。</p>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p>错误提示<code>libonig.so.2</code>找不到了。去到<code>/usr/lib64</code>目录下发现确实没有这个库。<br>那么就要想办法把这个库装上去应该就没问题了</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ol>\n<li>执行命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install oniguruma - y</span><br><span class=\"line\">yum install libsodium -y</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>然后执行 php -v ：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -v</span><br></pre></td></tr></table></figure>\n\n<p>发现还是报原来的错误。再次进入<code>/usr/lib64</code>目录下发现目录下没有<code>libonig.so.2</code>，但是有<code>libonig.so</code>，那么是不是把<code>libonig.so</code>软链到<code>libonig.so.2</code>就可以了。</p>\n<ol start=\"3\">\n<li>于是执行：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s &#x2F;usr&#x2F;lib64&#x2F;libonig.so &#x2F;usr&#x2F;lib64&#x2F;libonig.so.2</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>再次运行<code>php -v</code>：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@****~]# php -v </span><br><span class=\"line\">PHP 7.4.4 (cli) (built: Apr 14 2020 10:27:44) ( NTS )</span><br><span class=\"line\">Copyright (c) The PHP Group</span><br><span class=\"line\">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure>\n\n<p>5.发现php正常运行， 问题得到解决，所以千万不要轻易执行<code>yum -y update</code></p>\n"},{"title":"使用PHP下载网络图片或文件","date":"2020-08-12T07:45:34.000Z","updated":"2020-08-12T08:04:49.000Z","_content":"![](https://img.hacpai.com/bing/20181023.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 变量说明\n\n```php\n//图片要保存的绝对路径\n$path = '/test/test.jpg';\n\n//要下载的网络图片链接\n$img_url = 'http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg'； \n```\n\n## file_get_contents下载网络图片\n\n```php\nfile_put_contents($path, file_get_contents($img_url));\n```\n\n- ps：当用file_get_contents()函数去下载带有https协议的图片或者内容时，报错：\n\n```\nfile_get_contents(): SSL operation failed with code 1. OpenSSL Error message\n```\n\n解决方案：\n\n```\n$arrContextOptions = array(\n    \"ssl\" => array(\n        \"verify_peer\" => false,\n        \"verify_peer_name\" => false,\n    ),\n);\n\nfile_put_contents($path,file_get_contents($img_url, false, stream_context_create($arrContextOptions)));\n```\n\n## curl下载网络图片\n\n```\n //根据图片URL获取图片内容，适用于https\nfunction getImg($url)\n{\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);//跳过ssl验证\n    curl_setopt($ch, CURLOPT_URL, $url);\n    ob_start();\n    curl_exec($ch);\n    $return_content = ob_get_contents();\n    ob_end_clean();\n    return $return_content;\n}\n\n\nfile_put_contents($path, getImg($img_url));\n```\n","source":"_posts/202008/使用PHP下载网络图片或文件.md","raw":"title: 使用PHP下载网络图片或文件\ndate: '2020-08-12 15:45:34'\nupdated: '2020-08-12 16:04:49'\ntags: [PHP, CURL]\npermalink: /articles/2020/08/12/1597218334271.html\n---\n![](https://img.hacpai.com/bing/20181023.jpg?imageView2/1/w/960/h/540/interlace/1/q/100)\n\n## 变量说明\n\n```php\n//图片要保存的绝对路径\n$path = '/test/test.jpg';\n\n//要下载的网络图片链接\n$img_url = 'http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg'； \n```\n\n## file_get_contents下载网络图片\n\n```php\nfile_put_contents($path, file_get_contents($img_url));\n```\n\n- ps：当用file_get_contents()函数去下载带有https协议的图片或者内容时，报错：\n\n```\nfile_get_contents(): SSL operation failed with code 1. OpenSSL Error message\n```\n\n解决方案：\n\n```\n$arrContextOptions = array(\n    \"ssl\" => array(\n        \"verify_peer\" => false,\n        \"verify_peer_name\" => false,\n    ),\n);\n\nfile_put_contents($path,file_get_contents($img_url, false, stream_context_create($arrContextOptions)));\n```\n\n## curl下载网络图片\n\n```\n //根据图片URL获取图片内容，适用于https\nfunction getImg($url)\n{\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);//跳过ssl验证\n    curl_setopt($ch, CURLOPT_URL, $url);\n    ob_start();\n    curl_exec($ch);\n    $return_content = ob_get_contents();\n    ob_end_clean();\n    return $return_content;\n}\n\n\nfile_put_contents($path, getImg($img_url));\n```\n","slug":"202008/使用PHP下载网络图片或文件","published":1,"__permalink":"/articles/2020/08/12/1597218334271.html","comments":1,"layout":"post","photos":[],"link":"","_id":"ckhjzqzvr0015ogfddrytdth3","content":"<p><img src=\"https://img.hacpai.com/bing/20181023.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"变量说明\"><a href=\"#变量说明\" class=\"headerlink\" title=\"变量说明\"></a>变量说明</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//图片要保存的绝对路径</span></span><br><span class=\"line\">$path = <span class=\"string\">&#x27;/test/test.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//要下载的网络图片链接</span></span><br><span class=\"line\">$img_url = <span class=\"string\">&#x27;http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg&#x27;</span>； </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-get-contents下载网络图片\"><a href=\"#file-get-contents下载网络图片\" class=\"headerlink\" title=\"file_get_contents下载网络图片\"></a>file_get_contents下载网络图片</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_put_contents($path, file_get_contents($img_url));</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ps：当用file_get_contents()函数去下载带有https协议的图片或者内容时，报错：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_get_contents(): SSL operation failed with code 1. OpenSSL Error message</span><br></pre></td></tr></table></figure>\n\n<p>解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arrContextOptions &#x3D; array(</span><br><span class=\"line\">    &quot;ssl&quot; &#x3D;&gt; array(</span><br><span class=\"line\">        &quot;verify_peer&quot; &#x3D;&gt; false,</span><br><span class=\"line\">        &quot;verify_peer_name&quot; &#x3D;&gt; false,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">file_put_contents($path,file_get_contents($img_url, false, stream_context_create($arrContextOptions)));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"curl下载网络图片\"><a href=\"#curl下载网络图片\" class=\"headerlink\" title=\"curl下载网络图片\"></a>curl下载网络图片</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#x2F;&#x2F;根据图片URL获取图片内容，适用于https</span><br><span class=\"line\">function getImg($url)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $ch &#x3D; curl_init();</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, &#39;GET&#39;);</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);&#x2F;&#x2F;跳过ssl验证</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">    ob_start();</span><br><span class=\"line\">    curl_exec($ch);</span><br><span class=\"line\">    $return_content &#x3D; ob_get_contents();</span><br><span class=\"line\">    ob_end_clean();</span><br><span class=\"line\">    return $return_content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">file_put_contents($path, getImg($img_url));</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"变量说明\n1\n2\n3\n4\n5\n\n\n//图片要保存的绝对路径\n$path = '/test/test.jpg';\n\n//要下载的网络图片链接\n$img_url = 'http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg'； \n\n\nfile_get_contents下载网络图片\n1\n\n\nfile_put_contents($path, file_get_contents($img_url));\n\n\n * ps：当用file_get_contents()函数去下载带有https协议的","more":"<p><img src=\"https://img.hacpai.com/bing/20181023.jpg?imageView2/1/w/960/h/540/interlace/1/q/100\"></p>\n<h2 id=\"变量说明\"><a href=\"#变量说明\" class=\"headerlink\" title=\"变量说明\"></a>变量说明</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//图片要保存的绝对路径</span></span><br><span class=\"line\">$path = <span class=\"string\">&#x27;/test/test.jpg&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//要下载的网络图片链接</span></span><br><span class=\"line\">$img_url = <span class=\"string\">&#x27;http://az29176.vo.msecnd.net/videocontent/GrizzlyPeakSF_FF_768_HD_ZH-CN1078880766.jpg&#x27;</span>； </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"file-get-contents下载网络图片\"><a href=\"#file-get-contents下载网络图片\" class=\"headerlink\" title=\"file_get_contents下载网络图片\"></a>file_get_contents下载网络图片</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_put_contents($path, file_get_contents($img_url));</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>ps：当用file_get_contents()函数去下载带有https协议的图片或者内容时，报错：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_get_contents(): SSL operation failed with code 1. OpenSSL Error message</span><br></pre></td></tr></table></figure>\n\n<p>解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$arrContextOptions &#x3D; array(</span><br><span class=\"line\">    &quot;ssl&quot; &#x3D;&gt; array(</span><br><span class=\"line\">        &quot;verify_peer&quot; &#x3D;&gt; false,</span><br><span class=\"line\">        &quot;verify_peer_name&quot; &#x3D;&gt; false,</span><br><span class=\"line\">    ),</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">file_put_contents($path,file_get_contents($img_url, false, stream_context_create($arrContextOptions)));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"curl下载网络图片\"><a href=\"#curl下载网络图片\" class=\"headerlink\" title=\"curl下载网络图片\"></a>curl下载网络图片</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &#x2F;&#x2F;根据图片URL获取图片内容，适用于https</span><br><span class=\"line\">function getImg($url)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $ch &#x3D; curl_init();</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, &#39;GET&#39;);</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);&#x2F;&#x2F;跳过ssl验证</span><br><span class=\"line\">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">    ob_start();</span><br><span class=\"line\">    curl_exec($ch);</span><br><span class=\"line\">    $return_content &#x3D; ob_get_contents();</span><br><span class=\"line\">    ob_end_clean();</span><br><span class=\"line\">    return $return_content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">file_put_contents($path, getImg($img_url));</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckhjzqzuh0000ogfd76c6hlfi","tag_id":"ckhjzqzun0002ogfdawm2d440","_id":"ckhjzqzus0007ogfddava9axb"},{"post_id":"ckhjzqzul0001ogfd6tppb44g","tag_id":"ckhjzqzur0006ogfdcs10ccsn","_id":"ckhjzqzv0000fogfdcp9ybbm9"},{"post_id":"ckhjzqzul0001ogfd6tppb44g","tag_id":"ckhjzqzuu000aogfda6eihpqu","_id":"ckhjzqzv1000hogfd0lqg4y9i"},{"post_id":"ckhjzqzup0003ogfd3e18ggz8","tag_id":"ckhjzqzuy000dogfd45afbod1","_id":"ckhjzqzvg000kogfd3m0vgcnb"},{"post_id":"ckhjzqzuq0004ogfd3wgh9r3h","tag_id":"ckhjzqzuy000dogfd45afbod1","_id":"ckhjzqzvi000oogfdeo2tcwv4"},{"post_id":"ckhjzqzur0005ogfd1kv3dks1","tag_id":"ckhjzqzvh000mogfdfrbxecip","_id":"ckhjzqzvn000wogfdf7og3edw"},{"post_id":"ckhjzqzur0005ogfd1kv3dks1","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzvo000yogfd3llb7p5n"},{"post_id":"ckhjzqzus0008ogfdgppp9g2g","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzvr0014ogfd7m8a1fsp"},{"post_id":"ckhjzqzus0008ogfdgppp9g2g","tag_id":"ckhjzqzvo000zogfd2tmq5olg","_id":"ckhjzqzvs0016ogfd5h97dx2u"},{"post_id":"ckhjzqzvp0011ogfdcsjm9e5d","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzvt0018ogfdcs3iaymz"},{"post_id":"ckhjzqzvp0011ogfdcsjm9e5d","tag_id":"ckhjzqzvh000mogfdfrbxecip","_id":"ckhjzqzvt0019ogfd8ishe5be"},{"post_id":"ckhjzqzvr0013ogfd9dk749iw","tag_id":"ckhjzqzuu000aogfda6eihpqu","_id":"ckhjzqzvx001bogfdgrn23nmh"},{"post_id":"ckhjzqzvr0013ogfd9dk749iw","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzvy001cogfdc4kig6xq"},{"post_id":"ckhjzqzut0009ogfda8ue9t4e","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzvy001eogfdgnx88cw2"},{"post_id":"ckhjzqzut0009ogfda8ue9t4e","tag_id":"ckhjzqzun0002ogfdawm2d440","_id":"ckhjzqzvz001fogfde1pmbt91"},{"post_id":"ckhjzqzut0009ogfda8ue9t4e","tag_id":"ckhjzqzvs0017ogfda79689lc","_id":"ckhjzqzvz001hogfdfw0u6yhs"},{"post_id":"ckhjzqzuv000bogfd12dy79u9","tag_id":"ckhjzqzvu001aogfd0lazaueu","_id":"ckhjzqzvz001iogfd26zk4r26"},{"post_id":"ckhjzqzuv000bogfd12dy79u9","tag_id":"ckhjzqzvy001dogfd02x26wch","_id":"ckhjzqzw0001jogfd5zl746jm"},{"post_id":"ckhjzqzuw000cogfd6qjs7css","tag_id":"ckhjzqzuu000aogfda6eihpqu","_id":"ckhjzqzw0001logfd6y6j8y6i"},{"post_id":"ckhjzqzuw000cogfd6qjs7css","tag_id":"ckhjzqzvz001gogfd4pbq2s5b","_id":"ckhjzqzw1001mogfdby1r6tum"},{"post_id":"ckhjzqzuz000eogfdgdcg4zcu","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzw1001oogfddus0cqzn"},{"post_id":"ckhjzqzv0000gogfdcy4sex7r","tag_id":"ckhjzqzw1001nogfd493f59us","_id":"ckhjzqzw3001rogfdad9331kw"},{"post_id":"ckhjzqzv0000gogfdcy4sex7r","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzw3001sogfdhs9p2ca6"},{"post_id":"ckhjzqzv1000jogfdconj8zbo","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzw4001vogfd1os26tjl"},{"post_id":"ckhjzqzv1000jogfdconj8zbo","tag_id":"ckhjzqzw3001togfd877hah2q","_id":"ckhjzqzw5001wogfddcty5ghz"},{"post_id":"ckhjzqzvg000logfdflb34w4w","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzw6001zogfdcdap4fp0"},{"post_id":"ckhjzqzvg000logfdflb34w4w","tag_id":"ckhjzqzw5001xogfd5htp3qk7","_id":"ckhjzqzw60020ogfddenb0cnb"},{"post_id":"ckhjzqzvg000logfdflb34w4w","tag_id":"ckhjzqzun0002ogfdawm2d440","_id":"ckhjzqzw70022ogfdfz0sg5p4"},{"post_id":"ckhjzqzvh000nogfdcb3afjsc","tag_id":"ckhjzqzw5001yogfd0mvk7601","_id":"ckhjzqzw80025ogfd2sszb1io"},{"post_id":"ckhjzqzvh000nogfdcb3afjsc","tag_id":"ckhjzqzw60021ogfdfh071ih3","_id":"ckhjzqzw80026ogfd7786f9ic"},{"post_id":"ckhjzqzvh000nogfdcb3afjsc","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzw80028ogfd63oz3ao4"},{"post_id":"ckhjzqzvi000pogfd13vefxma","tag_id":"ckhjzqzw70024ogfd7utmafd4","_id":"ckhjzqzw9002aogfd90k98oxf"},{"post_id":"ckhjzqzvi000pogfd13vefxma","tag_id":"ckhjzqzw80027ogfd084jdylc","_id":"ckhjzqzw9002bogfday4n094r"},{"post_id":"ckhjzqzvj000qogfd1h6i2oh9","tag_id":"ckhjzqzw5001yogfd0mvk7601","_id":"ckhjzqzwb002fogfd4zpfary6"},{"post_id":"ckhjzqzvj000qogfd1h6i2oh9","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzwb002gogfdgkbeengu"},{"post_id":"ckhjzqzvj000qogfd1h6i2oh9","tag_id":"ckhjzqzwa002dogfdcpaihc6k","_id":"ckhjzqzwb002iogfdf8op5x2l"},{"post_id":"ckhjzqzvk000sogfdek1g4ooy","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzwd002kogfdd5c8br74"},{"post_id":"ckhjzqzvk000sogfdek1g4ooy","tag_id":"ckhjzqzwa002eogfd39dz818p","_id":"ckhjzqzwd002logfdcvclabqy"},{"post_id":"ckhjzqzvk000sogfdek1g4ooy","tag_id":"ckhjzqzwb002hogfd609zc79w","_id":"ckhjzqzwe002nogfd8v17ays5"},{"post_id":"ckhjzqzvl000togfdgve7acze","tag_id":"ckhjzqzwc002jogfd98kphuux","_id":"ckhjzqzwe002oogfd3zy6hcye"},{"post_id":"ckhjzqzvn000vogfde4p99eo2","tag_id":"ckhjzqzwc002jogfd98kphuux","_id":"ckhjzqzwg002rogfd7py76mf1"},{"post_id":"ckhjzqzvn000vogfde4p99eo2","tag_id":"ckhjzqzwf002pogfd20jk9zbt","_id":"ckhjzqzwg002sogfd89fz2vw1"},{"post_id":"ckhjzqzvn000xogfdg65n0w47","tag_id":"ckhjzqzwf002qogfda38dack1","_id":"ckhjzqzwi002vogfdelkq8j6y"},{"post_id":"ckhjzqzvn000xogfdg65n0w47","tag_id":"ckhjzqzwg002togfd87diez7q","_id":"ckhjzqzwi002wogfd8skd20to"},{"post_id":"ckhjzqzvp0010ogfdcs5167my","tag_id":"ckhjzqzwf002qogfda38dack1","_id":"ckhjzqzwj002yogfdctm85sj0"},{"post_id":"ckhjzqzvp0010ogfdcs5167my","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzwj002zogfd2560g2md"},{"post_id":"ckhjzqzvr0015ogfddrytdth3","tag_id":"ckhjzqzvk000rogfd83qjd3t7","_id":"ckhjzqzwj0030ogfd5zm41gto"},{"post_id":"ckhjzqzvr0015ogfddrytdth3","tag_id":"ckhjzqzwa002eogfd39dz818p","_id":"ckhjzqzwk0031ogfd56xr8jeu"}],"Tag":[{"name":"mysql","_id":"ckhjzqzun0002ogfdawm2d440"},{"name":"nohup","_id":"ckhjzqzur0006ogfdcs10ccsn"},{"name":"linux","_id":"ckhjzqzuu000aogfda6eihpqu"},{"name":"redis","_id":"ckhjzqzuy000dogfd45afbod1"},{"name":"RabbitMQ","_id":"ckhjzqzvh000mogfdfrbxecip"},{"name":"PHP","_id":"ckhjzqzvk000rogfd83qjd3t7"},{"name":"工具","_id":"ckhjzqzvo000zogfd2tmq5olg"},{"name":"Yii","_id":"ckhjzqzvs0017ogfda79689lc"},{"name":"github","_id":"ckhjzqzvu001aogfd0lazaueu"},{"name":"JSDelivr","_id":"ckhjzqzvy001dogfd02x26wch"},{"name":"tmux","_id":"ckhjzqzvz001gogfd4pbq2s5b"},{"name":"运维","_id":"ckhjzqzw1001nogfd493f59us"},{"name":"算法","_id":"ckhjzqzw3001togfd877hah2q"},{"name":"面试","_id":"ckhjzqzw5001xogfd5htp3qk7"},{"name":"转载","_id":"ckhjzqzw5001yogfd0mvk7601"},{"name":"缓存","_id":"ckhjzqzw60021ogfdfh071ih3"},{"name":"开源","_id":"ckhjzqzw70024ogfd7utmafd4"},{"name":"GitHub","_id":"ckhjzqzw80027ogfd084jdylc"},{"name":"CentOS7","_id":"ckhjzqzwa002dogfdcpaihc6k"},{"name":"CURL","_id":"ckhjzqzwa002eogfd39dz818p"},{"name":"毫秒级伪异步","_id":"ckhjzqzwb002hogfd609zc79w"},{"name":"python","_id":"ckhjzqzwc002jogfd98kphuux"},{"name":"flask","_id":"ckhjzqzwf002pogfd20jk9zbt"},{"name":"wamp","_id":"ckhjzqzwf002qogfda38dack1"},{"name":"ssl","_id":"ckhjzqzwg002togfd87diez7q"}]}}